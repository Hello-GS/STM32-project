
lab6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009374  080001e8  080001e8  000101e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00027018  0800955c  0800955c  0001955c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08030574  08030574  00050078  2**0
                  CONTENTS
  4 .ARM          00000000  08030574  08030574  00050078  2**0
                  CONTENTS
  5 .preinit_array 00000000  08030574  08030574  00050078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08030574  08030574  00040574  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08030578  08030578  00040578  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  0803057c  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000024c  20000078  080305f4  00050078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002c4  080305f4  000502c4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00050078  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008b61  00000000  00000000  000500a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001b53  00000000  00000000  00058c02  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000848  00000000  00000000  0005a758  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000760  00000000  00000000  0005afa0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00016449  00000000  00000000  0005b700  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00008527  00000000  00000000  00071b49  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00079862  00000000  00000000  0007a070  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000f38d2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000022c4  00000000  00000000  000f3950  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stab         00000024  00000000  00000000  000f5c14  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      0000004e  00000000  00000000  000f5c38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001e8 <__do_global_dtors_aux>:
 80001e8:	b510      	push	{r4, lr}
 80001ea:	4c05      	ldr	r4, [pc, #20]	; (8000200 <__do_global_dtors_aux+0x18>)
 80001ec:	7823      	ldrb	r3, [r4, #0]
 80001ee:	b933      	cbnz	r3, 80001fe <__do_global_dtors_aux+0x16>
 80001f0:	4b04      	ldr	r3, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x1c>)
 80001f2:	b113      	cbz	r3, 80001fa <__do_global_dtors_aux+0x12>
 80001f4:	4804      	ldr	r0, [pc, #16]	; (8000208 <__do_global_dtors_aux+0x20>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	2301      	movs	r3, #1
 80001fc:	7023      	strb	r3, [r4, #0]
 80001fe:	bd10      	pop	{r4, pc}
 8000200:	20000078 	.word	0x20000078
 8000204:	00000000 	.word	0x00000000
 8000208:	08009544 	.word	0x08009544

0800020c <frame_dummy>:
 800020c:	b508      	push	{r3, lr}
 800020e:	4b03      	ldr	r3, [pc, #12]	; (800021c <frame_dummy+0x10>)
 8000210:	b11b      	cbz	r3, 800021a <frame_dummy+0xe>
 8000212:	4903      	ldr	r1, [pc, #12]	; (8000220 <frame_dummy+0x14>)
 8000214:	4803      	ldr	r0, [pc, #12]	; (8000224 <frame_dummy+0x18>)
 8000216:	f3af 8000 	nop.w
 800021a:	bd08      	pop	{r3, pc}
 800021c:	00000000 	.word	0x00000000
 8000220:	2000007c 	.word	0x2000007c
 8000224:	08009544 	.word	0x08009544

08000228 <__aeabi_drsub>:
 8000228:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800022c:	e002      	b.n	8000234 <__adddf3>
 800022e:	bf00      	nop

08000230 <__aeabi_dsub>:
 8000230:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000234 <__adddf3>:
 8000234:	b530      	push	{r4, r5, lr}
 8000236:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800023a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800023e:	ea94 0f05 	teq	r4, r5
 8000242:	bf08      	it	eq
 8000244:	ea90 0f02 	teqeq	r0, r2
 8000248:	bf1f      	itttt	ne
 800024a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800024e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000252:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000256:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800025a:	f000 80e2 	beq.w	8000422 <__adddf3+0x1ee>
 800025e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000262:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000266:	bfb8      	it	lt
 8000268:	426d      	neglt	r5, r5
 800026a:	dd0c      	ble.n	8000286 <__adddf3+0x52>
 800026c:	442c      	add	r4, r5
 800026e:	ea80 0202 	eor.w	r2, r0, r2
 8000272:	ea81 0303 	eor.w	r3, r1, r3
 8000276:	ea82 0000 	eor.w	r0, r2, r0
 800027a:	ea83 0101 	eor.w	r1, r3, r1
 800027e:	ea80 0202 	eor.w	r2, r0, r2
 8000282:	ea81 0303 	eor.w	r3, r1, r3
 8000286:	2d36      	cmp	r5, #54	; 0x36
 8000288:	bf88      	it	hi
 800028a:	bd30      	pophi	{r4, r5, pc}
 800028c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000290:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000294:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000298:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800029c:	d002      	beq.n	80002a4 <__adddf3+0x70>
 800029e:	4240      	negs	r0, r0
 80002a0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002a4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002a8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002ac:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b0:	d002      	beq.n	80002b8 <__adddf3+0x84>
 80002b2:	4252      	negs	r2, r2
 80002b4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002b8:	ea94 0f05 	teq	r4, r5
 80002bc:	f000 80a7 	beq.w	800040e <__adddf3+0x1da>
 80002c0:	f1a4 0401 	sub.w	r4, r4, #1
 80002c4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002c8:	db0d      	blt.n	80002e6 <__adddf3+0xb2>
 80002ca:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ce:	fa22 f205 	lsr.w	r2, r2, r5
 80002d2:	1880      	adds	r0, r0, r2
 80002d4:	f141 0100 	adc.w	r1, r1, #0
 80002d8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002dc:	1880      	adds	r0, r0, r2
 80002de:	fa43 f305 	asr.w	r3, r3, r5
 80002e2:	4159      	adcs	r1, r3
 80002e4:	e00e      	b.n	8000304 <__adddf3+0xd0>
 80002e6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ea:	f10e 0e20 	add.w	lr, lr, #32
 80002ee:	2a01      	cmp	r2, #1
 80002f0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002f4:	bf28      	it	cs
 80002f6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002fa:	fa43 f305 	asr.w	r3, r3, r5
 80002fe:	18c0      	adds	r0, r0, r3
 8000300:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000304:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000308:	d507      	bpl.n	800031a <__adddf3+0xe6>
 800030a:	f04f 0e00 	mov.w	lr, #0
 800030e:	f1dc 0c00 	rsbs	ip, ip, #0
 8000312:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000316:	eb6e 0101 	sbc.w	r1, lr, r1
 800031a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800031e:	d31b      	bcc.n	8000358 <__adddf3+0x124>
 8000320:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000324:	d30c      	bcc.n	8000340 <__adddf3+0x10c>
 8000326:	0849      	lsrs	r1, r1, #1
 8000328:	ea5f 0030 	movs.w	r0, r0, rrx
 800032c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000330:	f104 0401 	add.w	r4, r4, #1
 8000334:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000338:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800033c:	f080 809a 	bcs.w	8000474 <__adddf3+0x240>
 8000340:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000344:	bf08      	it	eq
 8000346:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800034a:	f150 0000 	adcs.w	r0, r0, #0
 800034e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000352:	ea41 0105 	orr.w	r1, r1, r5
 8000356:	bd30      	pop	{r4, r5, pc}
 8000358:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800035c:	4140      	adcs	r0, r0
 800035e:	eb41 0101 	adc.w	r1, r1, r1
 8000362:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000366:	f1a4 0401 	sub.w	r4, r4, #1
 800036a:	d1e9      	bne.n	8000340 <__adddf3+0x10c>
 800036c:	f091 0f00 	teq	r1, #0
 8000370:	bf04      	itt	eq
 8000372:	4601      	moveq	r1, r0
 8000374:	2000      	moveq	r0, #0
 8000376:	fab1 f381 	clz	r3, r1
 800037a:	bf08      	it	eq
 800037c:	3320      	addeq	r3, #32
 800037e:	f1a3 030b 	sub.w	r3, r3, #11
 8000382:	f1b3 0220 	subs.w	r2, r3, #32
 8000386:	da0c      	bge.n	80003a2 <__adddf3+0x16e>
 8000388:	320c      	adds	r2, #12
 800038a:	dd08      	ble.n	800039e <__adddf3+0x16a>
 800038c:	f102 0c14 	add.w	ip, r2, #20
 8000390:	f1c2 020c 	rsb	r2, r2, #12
 8000394:	fa01 f00c 	lsl.w	r0, r1, ip
 8000398:	fa21 f102 	lsr.w	r1, r1, r2
 800039c:	e00c      	b.n	80003b8 <__adddf3+0x184>
 800039e:	f102 0214 	add.w	r2, r2, #20
 80003a2:	bfd8      	it	le
 80003a4:	f1c2 0c20 	rsble	ip, r2, #32
 80003a8:	fa01 f102 	lsl.w	r1, r1, r2
 80003ac:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b0:	bfdc      	itt	le
 80003b2:	ea41 010c 	orrle.w	r1, r1, ip
 80003b6:	4090      	lslle	r0, r2
 80003b8:	1ae4      	subs	r4, r4, r3
 80003ba:	bfa2      	ittt	ge
 80003bc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c0:	4329      	orrge	r1, r5
 80003c2:	bd30      	popge	{r4, r5, pc}
 80003c4:	ea6f 0404 	mvn.w	r4, r4
 80003c8:	3c1f      	subs	r4, #31
 80003ca:	da1c      	bge.n	8000406 <__adddf3+0x1d2>
 80003cc:	340c      	adds	r4, #12
 80003ce:	dc0e      	bgt.n	80003ee <__adddf3+0x1ba>
 80003d0:	f104 0414 	add.w	r4, r4, #20
 80003d4:	f1c4 0220 	rsb	r2, r4, #32
 80003d8:	fa20 f004 	lsr.w	r0, r0, r4
 80003dc:	fa01 f302 	lsl.w	r3, r1, r2
 80003e0:	ea40 0003 	orr.w	r0, r0, r3
 80003e4:	fa21 f304 	lsr.w	r3, r1, r4
 80003e8:	ea45 0103 	orr.w	r1, r5, r3
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f1c4 040c 	rsb	r4, r4, #12
 80003f2:	f1c4 0220 	rsb	r2, r4, #32
 80003f6:	fa20 f002 	lsr.w	r0, r0, r2
 80003fa:	fa01 f304 	lsl.w	r3, r1, r4
 80003fe:	ea40 0003 	orr.w	r0, r0, r3
 8000402:	4629      	mov	r1, r5
 8000404:	bd30      	pop	{r4, r5, pc}
 8000406:	fa21 f004 	lsr.w	r0, r1, r4
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	f094 0f00 	teq	r4, #0
 8000412:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000416:	bf06      	itte	eq
 8000418:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800041c:	3401      	addeq	r4, #1
 800041e:	3d01      	subne	r5, #1
 8000420:	e74e      	b.n	80002c0 <__adddf3+0x8c>
 8000422:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000426:	bf18      	it	ne
 8000428:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800042c:	d029      	beq.n	8000482 <__adddf3+0x24e>
 800042e:	ea94 0f05 	teq	r4, r5
 8000432:	bf08      	it	eq
 8000434:	ea90 0f02 	teqeq	r0, r2
 8000438:	d005      	beq.n	8000446 <__adddf3+0x212>
 800043a:	ea54 0c00 	orrs.w	ip, r4, r0
 800043e:	bf04      	itt	eq
 8000440:	4619      	moveq	r1, r3
 8000442:	4610      	moveq	r0, r2
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	ea91 0f03 	teq	r1, r3
 800044a:	bf1e      	ittt	ne
 800044c:	2100      	movne	r1, #0
 800044e:	2000      	movne	r0, #0
 8000450:	bd30      	popne	{r4, r5, pc}
 8000452:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000456:	d105      	bne.n	8000464 <__adddf3+0x230>
 8000458:	0040      	lsls	r0, r0, #1
 800045a:	4149      	adcs	r1, r1
 800045c:	bf28      	it	cs
 800045e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000462:	bd30      	pop	{r4, r5, pc}
 8000464:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000468:	bf3c      	itt	cc
 800046a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800046e:	bd30      	popcc	{r4, r5, pc}
 8000470:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000474:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000478:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800047c:	f04f 0000 	mov.w	r0, #0
 8000480:	bd30      	pop	{r4, r5, pc}
 8000482:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000486:	bf1a      	itte	ne
 8000488:	4619      	movne	r1, r3
 800048a:	4610      	movne	r0, r2
 800048c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000490:	bf1c      	itt	ne
 8000492:	460b      	movne	r3, r1
 8000494:	4602      	movne	r2, r0
 8000496:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800049a:	bf06      	itte	eq
 800049c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a0:	ea91 0f03 	teqeq	r1, r3
 80004a4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004a8:	bd30      	pop	{r4, r5, pc}
 80004aa:	bf00      	nop

080004ac <__aeabi_ui2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c0:	f04f 0500 	mov.w	r5, #0
 80004c4:	f04f 0100 	mov.w	r1, #0
 80004c8:	e750      	b.n	800036c <__adddf3+0x138>
 80004ca:	bf00      	nop

080004cc <__aeabi_i2d>:
 80004cc:	f090 0f00 	teq	r0, #0
 80004d0:	bf04      	itt	eq
 80004d2:	2100      	moveq	r1, #0
 80004d4:	4770      	bxeq	lr
 80004d6:	b530      	push	{r4, r5, lr}
 80004d8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004dc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004e0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004e4:	bf48      	it	mi
 80004e6:	4240      	negmi	r0, r0
 80004e8:	f04f 0100 	mov.w	r1, #0
 80004ec:	e73e      	b.n	800036c <__adddf3+0x138>
 80004ee:	bf00      	nop

080004f0 <__aeabi_f2d>:
 80004f0:	0042      	lsls	r2, r0, #1
 80004f2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004f6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004fa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004fe:	bf1f      	itttt	ne
 8000500:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000504:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000508:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800050c:	4770      	bxne	lr
 800050e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000512:	bf08      	it	eq
 8000514:	4770      	bxeq	lr
 8000516:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800051a:	bf04      	itt	eq
 800051c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000520:	4770      	bxeq	lr
 8000522:	b530      	push	{r4, r5, lr}
 8000524:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000528:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800052c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000530:	e71c      	b.n	800036c <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_ul2d>:
 8000534:	ea50 0201 	orrs.w	r2, r0, r1
 8000538:	bf08      	it	eq
 800053a:	4770      	bxeq	lr
 800053c:	b530      	push	{r4, r5, lr}
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	e00a      	b.n	800055a <__aeabi_l2d+0x16>

08000544 <__aeabi_l2d>:
 8000544:	ea50 0201 	orrs.w	r2, r0, r1
 8000548:	bf08      	it	eq
 800054a:	4770      	bxeq	lr
 800054c:	b530      	push	{r4, r5, lr}
 800054e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000552:	d502      	bpl.n	800055a <__aeabi_l2d+0x16>
 8000554:	4240      	negs	r0, r0
 8000556:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800055a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800055e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000562:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000566:	f43f aed8 	beq.w	800031a <__adddf3+0xe6>
 800056a:	f04f 0203 	mov.w	r2, #3
 800056e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000572:	bf18      	it	ne
 8000574:	3203      	addne	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000582:	f1c2 0320 	rsb	r3, r2, #32
 8000586:	fa00 fc03 	lsl.w	ip, r0, r3
 800058a:	fa20 f002 	lsr.w	r0, r0, r2
 800058e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000592:	ea40 000e 	orr.w	r0, r0, lr
 8000596:	fa21 f102 	lsr.w	r1, r1, r2
 800059a:	4414      	add	r4, r2
 800059c:	e6bd      	b.n	800031a <__adddf3+0xe6>
 800059e:	bf00      	nop

080005a0 <__aeabi_dmul>:
 80005a0:	b570      	push	{r4, r5, r6, lr}
 80005a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005ae:	bf1d      	ittte	ne
 80005b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005b4:	ea94 0f0c 	teqne	r4, ip
 80005b8:	ea95 0f0c 	teqne	r5, ip
 80005bc:	f000 f8de 	bleq	800077c <__aeabi_dmul+0x1dc>
 80005c0:	442c      	add	r4, r5
 80005c2:	ea81 0603 	eor.w	r6, r1, r3
 80005c6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005ca:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ce:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005d2:	bf18      	it	ne
 80005d4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005dc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005e0:	d038      	beq.n	8000654 <__aeabi_dmul+0xb4>
 80005e2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005e6:	f04f 0500 	mov.w	r5, #0
 80005ea:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ee:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005f2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005f6:	f04f 0600 	mov.w	r6, #0
 80005fa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005fe:	f09c 0f00 	teq	ip, #0
 8000602:	bf18      	it	ne
 8000604:	f04e 0e01 	orrne.w	lr, lr, #1
 8000608:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800060c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000610:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000614:	d204      	bcs.n	8000620 <__aeabi_dmul+0x80>
 8000616:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800061a:	416d      	adcs	r5, r5
 800061c:	eb46 0606 	adc.w	r6, r6, r6
 8000620:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000624:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000628:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800062c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000630:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000634:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000638:	bf88      	it	hi
 800063a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800063e:	d81e      	bhi.n	800067e <__aeabi_dmul+0xde>
 8000640:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000644:	bf08      	it	eq
 8000646:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800064a:	f150 0000 	adcs.w	r0, r0, #0
 800064e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000652:	bd70      	pop	{r4, r5, r6, pc}
 8000654:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000658:	ea46 0101 	orr.w	r1, r6, r1
 800065c:	ea40 0002 	orr.w	r0, r0, r2
 8000660:	ea81 0103 	eor.w	r1, r1, r3
 8000664:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000668:	bfc2      	ittt	gt
 800066a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800066e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000672:	bd70      	popgt	{r4, r5, r6, pc}
 8000674:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000678:	f04f 0e00 	mov.w	lr, #0
 800067c:	3c01      	subs	r4, #1
 800067e:	f300 80ab 	bgt.w	80007d8 <__aeabi_dmul+0x238>
 8000682:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000686:	bfde      	ittt	le
 8000688:	2000      	movle	r0, #0
 800068a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800068e:	bd70      	pople	{r4, r5, r6, pc}
 8000690:	f1c4 0400 	rsb	r4, r4, #0
 8000694:	3c20      	subs	r4, #32
 8000696:	da35      	bge.n	8000704 <__aeabi_dmul+0x164>
 8000698:	340c      	adds	r4, #12
 800069a:	dc1b      	bgt.n	80006d4 <__aeabi_dmul+0x134>
 800069c:	f104 0414 	add.w	r4, r4, #20
 80006a0:	f1c4 0520 	rsb	r5, r4, #32
 80006a4:	fa00 f305 	lsl.w	r3, r0, r5
 80006a8:	fa20 f004 	lsr.w	r0, r0, r4
 80006ac:	fa01 f205 	lsl.w	r2, r1, r5
 80006b0:	ea40 0002 	orr.w	r0, r0, r2
 80006b4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006bc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c0:	fa21 f604 	lsr.w	r6, r1, r4
 80006c4:	eb42 0106 	adc.w	r1, r2, r6
 80006c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006cc:	bf08      	it	eq
 80006ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006d2:	bd70      	pop	{r4, r5, r6, pc}
 80006d4:	f1c4 040c 	rsb	r4, r4, #12
 80006d8:	f1c4 0520 	rsb	r5, r4, #32
 80006dc:	fa00 f304 	lsl.w	r3, r0, r4
 80006e0:	fa20 f005 	lsr.w	r0, r0, r5
 80006e4:	fa01 f204 	lsl.w	r2, r1, r4
 80006e8:	ea40 0002 	orr.w	r0, r0, r2
 80006ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006f4:	f141 0100 	adc.w	r1, r1, #0
 80006f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006fc:	bf08      	it	eq
 80006fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000702:	bd70      	pop	{r4, r5, r6, pc}
 8000704:	f1c4 0520 	rsb	r5, r4, #32
 8000708:	fa00 f205 	lsl.w	r2, r0, r5
 800070c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000710:	fa20 f304 	lsr.w	r3, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea43 0302 	orr.w	r3, r3, r2
 800071c:	fa21 f004 	lsr.w	r0, r1, r4
 8000720:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000724:	fa21 f204 	lsr.w	r2, r1, r4
 8000728:	ea20 0002 	bic.w	r0, r0, r2
 800072c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f094 0f00 	teq	r4, #0
 8000740:	d10f      	bne.n	8000762 <__aeabi_dmul+0x1c2>
 8000742:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000746:	0040      	lsls	r0, r0, #1
 8000748:	eb41 0101 	adc.w	r1, r1, r1
 800074c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000750:	bf08      	it	eq
 8000752:	3c01      	subeq	r4, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1a6>
 8000756:	ea41 0106 	orr.w	r1, r1, r6
 800075a:	f095 0f00 	teq	r5, #0
 800075e:	bf18      	it	ne
 8000760:	4770      	bxne	lr
 8000762:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000766:	0052      	lsls	r2, r2, #1
 8000768:	eb43 0303 	adc.w	r3, r3, r3
 800076c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000770:	bf08      	it	eq
 8000772:	3d01      	subeq	r5, #1
 8000774:	d0f7      	beq.n	8000766 <__aeabi_dmul+0x1c6>
 8000776:	ea43 0306 	orr.w	r3, r3, r6
 800077a:	4770      	bx	lr
 800077c:	ea94 0f0c 	teq	r4, ip
 8000780:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000784:	bf18      	it	ne
 8000786:	ea95 0f0c 	teqne	r5, ip
 800078a:	d00c      	beq.n	80007a6 <__aeabi_dmul+0x206>
 800078c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000790:	bf18      	it	ne
 8000792:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000796:	d1d1      	bne.n	800073c <__aeabi_dmul+0x19c>
 8000798:	ea81 0103 	eor.w	r1, r1, r3
 800079c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007a0:	f04f 0000 	mov.w	r0, #0
 80007a4:	bd70      	pop	{r4, r5, r6, pc}
 80007a6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007aa:	bf06      	itte	eq
 80007ac:	4610      	moveq	r0, r2
 80007ae:	4619      	moveq	r1, r3
 80007b0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007b4:	d019      	beq.n	80007ea <__aeabi_dmul+0x24a>
 80007b6:	ea94 0f0c 	teq	r4, ip
 80007ba:	d102      	bne.n	80007c2 <__aeabi_dmul+0x222>
 80007bc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c0:	d113      	bne.n	80007ea <__aeabi_dmul+0x24a>
 80007c2:	ea95 0f0c 	teq	r5, ip
 80007c6:	d105      	bne.n	80007d4 <__aeabi_dmul+0x234>
 80007c8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007cc:	bf1c      	itt	ne
 80007ce:	4610      	movne	r0, r2
 80007d0:	4619      	movne	r1, r3
 80007d2:	d10a      	bne.n	80007ea <__aeabi_dmul+0x24a>
 80007d4:	ea81 0103 	eor.w	r1, r1, r3
 80007d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007dc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007e4:	f04f 0000 	mov.w	r0, #0
 80007e8:	bd70      	pop	{r4, r5, r6, pc}
 80007ea:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ee:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007f2:	bd70      	pop	{r4, r5, r6, pc}

080007f4 <__aeabi_ddiv>:
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007fa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007fe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000802:	bf1d      	ittte	ne
 8000804:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000808:	ea94 0f0c 	teqne	r4, ip
 800080c:	ea95 0f0c 	teqne	r5, ip
 8000810:	f000 f8a7 	bleq	8000962 <__aeabi_ddiv+0x16e>
 8000814:	eba4 0405 	sub.w	r4, r4, r5
 8000818:	ea81 0e03 	eor.w	lr, r1, r3
 800081c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000820:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000824:	f000 8088 	beq.w	8000938 <__aeabi_ddiv+0x144>
 8000828:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800082c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000830:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000834:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000838:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800083c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000840:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000844:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000848:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800084c:	429d      	cmp	r5, r3
 800084e:	bf08      	it	eq
 8000850:	4296      	cmpeq	r6, r2
 8000852:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000856:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800085a:	d202      	bcs.n	8000862 <__aeabi_ddiv+0x6e>
 800085c:	085b      	lsrs	r3, r3, #1
 800085e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000862:	1ab6      	subs	r6, r6, r2
 8000864:	eb65 0503 	sbc.w	r5, r5, r3
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000872:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000876:	ebb6 0e02 	subs.w	lr, r6, r2
 800087a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800087e:	bf22      	ittt	cs
 8000880:	1ab6      	subcs	r6, r6, r2
 8000882:	4675      	movcs	r5, lr
 8000884:	ea40 000c 	orrcs.w	r0, r0, ip
 8000888:	085b      	lsrs	r3, r3, #1
 800088a:	ea4f 0232 	mov.w	r2, r2, rrx
 800088e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000892:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000896:	bf22      	ittt	cs
 8000898:	1ab6      	subcs	r6, r6, r2
 800089a:	4675      	movcs	r5, lr
 800089c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a0:	085b      	lsrs	r3, r3, #1
 80008a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ae:	bf22      	ittt	cs
 80008b0:	1ab6      	subcs	r6, r6, r2
 80008b2:	4675      	movcs	r5, lr
 80008b4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008b8:	085b      	lsrs	r3, r3, #1
 80008ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80008be:	ebb6 0e02 	subs.w	lr, r6, r2
 80008c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008c6:	bf22      	ittt	cs
 80008c8:	1ab6      	subcs	r6, r6, r2
 80008ca:	4675      	movcs	r5, lr
 80008cc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008d4:	d018      	beq.n	8000908 <__aeabi_ddiv+0x114>
 80008d6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008da:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008de:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008e2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008e6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ea:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ee:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008f2:	d1c0      	bne.n	8000876 <__aeabi_ddiv+0x82>
 80008f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008f8:	d10b      	bne.n	8000912 <__aeabi_ddiv+0x11e>
 80008fa:	ea41 0100 	orr.w	r1, r1, r0
 80008fe:	f04f 0000 	mov.w	r0, #0
 8000902:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000906:	e7b6      	b.n	8000876 <__aeabi_ddiv+0x82>
 8000908:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800090c:	bf04      	itt	eq
 800090e:	4301      	orreq	r1, r0
 8000910:	2000      	moveq	r0, #0
 8000912:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000916:	bf88      	it	hi
 8000918:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800091c:	f63f aeaf 	bhi.w	800067e <__aeabi_dmul+0xde>
 8000920:	ebb5 0c03 	subs.w	ip, r5, r3
 8000924:	bf04      	itt	eq
 8000926:	ebb6 0c02 	subseq.w	ip, r6, r2
 800092a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800092e:	f150 0000 	adcs.w	r0, r0, #0
 8000932:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000936:	bd70      	pop	{r4, r5, r6, pc}
 8000938:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800093c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000940:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000944:	bfc2      	ittt	gt
 8000946:	ebd4 050c 	rsbsgt	r5, r4, ip
 800094a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800094e:	bd70      	popgt	{r4, r5, r6, pc}
 8000950:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000954:	f04f 0e00 	mov.w	lr, #0
 8000958:	3c01      	subs	r4, #1
 800095a:	e690      	b.n	800067e <__aeabi_dmul+0xde>
 800095c:	ea45 0e06 	orr.w	lr, r5, r6
 8000960:	e68d      	b.n	800067e <__aeabi_dmul+0xde>
 8000962:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000966:	ea94 0f0c 	teq	r4, ip
 800096a:	bf08      	it	eq
 800096c:	ea95 0f0c 	teqeq	r5, ip
 8000970:	f43f af3b 	beq.w	80007ea <__aeabi_dmul+0x24a>
 8000974:	ea94 0f0c 	teq	r4, ip
 8000978:	d10a      	bne.n	8000990 <__aeabi_ddiv+0x19c>
 800097a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800097e:	f47f af34 	bne.w	80007ea <__aeabi_dmul+0x24a>
 8000982:	ea95 0f0c 	teq	r5, ip
 8000986:	f47f af25 	bne.w	80007d4 <__aeabi_dmul+0x234>
 800098a:	4610      	mov	r0, r2
 800098c:	4619      	mov	r1, r3
 800098e:	e72c      	b.n	80007ea <__aeabi_dmul+0x24a>
 8000990:	ea95 0f0c 	teq	r5, ip
 8000994:	d106      	bne.n	80009a4 <__aeabi_ddiv+0x1b0>
 8000996:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800099a:	f43f aefd 	beq.w	8000798 <__aeabi_dmul+0x1f8>
 800099e:	4610      	mov	r0, r2
 80009a0:	4619      	mov	r1, r3
 80009a2:	e722      	b.n	80007ea <__aeabi_dmul+0x24a>
 80009a4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009a8:	bf18      	it	ne
 80009aa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009ae:	f47f aec5 	bne.w	800073c <__aeabi_dmul+0x19c>
 80009b2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009b6:	f47f af0d 	bne.w	80007d4 <__aeabi_dmul+0x234>
 80009ba:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009be:	f47f aeeb 	bne.w	8000798 <__aeabi_dmul+0x1f8>
 80009c2:	e712      	b.n	80007ea <__aeabi_dmul+0x24a>

080009c4 <__aeabi_d2uiz>:
 80009c4:	004a      	lsls	r2, r1, #1
 80009c6:	d211      	bcs.n	80009ec <__aeabi_d2uiz+0x28>
 80009c8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80009cc:	d211      	bcs.n	80009f2 <__aeabi_d2uiz+0x2e>
 80009ce:	d50d      	bpl.n	80009ec <__aeabi_d2uiz+0x28>
 80009d0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80009d4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80009d8:	d40e      	bmi.n	80009f8 <__aeabi_d2uiz+0x34>
 80009da:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80009de:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80009e2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80009e6:	fa23 f002 	lsr.w	r0, r3, r2
 80009ea:	4770      	bx	lr
 80009ec:	f04f 0000 	mov.w	r0, #0
 80009f0:	4770      	bx	lr
 80009f2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80009f6:	d102      	bne.n	80009fe <__aeabi_d2uiz+0x3a>
 80009f8:	f04f 30ff 	mov.w	r0, #4294967295
 80009fc:	4770      	bx	lr
 80009fe:	f04f 0000 	mov.w	r0, #0
 8000a02:	4770      	bx	lr

08000a04 <HAL_Init>:
 8000a04:	b580      	push	{r7, lr}
 8000a06:	af00      	add	r7, sp, #0
 8000a08:	4b08      	ldr	r3, [pc, #32]	; (8000a2c <HAL_Init+0x28>)
 8000a0a:	681b      	ldr	r3, [r3, #0]
 8000a0c:	4a07      	ldr	r2, [pc, #28]	; (8000a2c <HAL_Init+0x28>)
 8000a0e:	f043 0310 	orr.w	r3, r3, #16
 8000a12:	6013      	str	r3, [r2, #0]
 8000a14:	2003      	movs	r0, #3
 8000a16:	f000 f945 	bl	8000ca4 <HAL_NVIC_SetPriorityGrouping>
 8000a1a:	2000      	movs	r0, #0
 8000a1c:	f000 f808 	bl	8000a30 <HAL_InitTick>
 8000a20:	f008 fb5a 	bl	80090d8 <HAL_MspInit>
 8000a24:	2300      	movs	r3, #0
 8000a26:	4618      	mov	r0, r3
 8000a28:	bd80      	pop	{r7, pc}
 8000a2a:	bf00      	nop
 8000a2c:	40022000 	.word	0x40022000

08000a30 <HAL_InitTick>:
 8000a30:	b580      	push	{r7, lr}
 8000a32:	b082      	sub	sp, #8
 8000a34:	af00      	add	r7, sp, #0
 8000a36:	6078      	str	r0, [r7, #4]
 8000a38:	4b12      	ldr	r3, [pc, #72]	; (8000a84 <HAL_InitTick+0x54>)
 8000a3a:	681a      	ldr	r2, [r3, #0]
 8000a3c:	4b12      	ldr	r3, [pc, #72]	; (8000a88 <HAL_InitTick+0x58>)
 8000a3e:	781b      	ldrb	r3, [r3, #0]
 8000a40:	4619      	mov	r1, r3
 8000a42:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000a46:	fbb3 f3f1 	udiv	r3, r3, r1
 8000a4a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a4e:	4618      	mov	r0, r3
 8000a50:	f000 f95d 	bl	8000d0e <HAL_SYSTICK_Config>
 8000a54:	4603      	mov	r3, r0
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	d001      	beq.n	8000a5e <HAL_InitTick+0x2e>
 8000a5a:	2301      	movs	r3, #1
 8000a5c:	e00e      	b.n	8000a7c <HAL_InitTick+0x4c>
 8000a5e:	687b      	ldr	r3, [r7, #4]
 8000a60:	2b0f      	cmp	r3, #15
 8000a62:	d80a      	bhi.n	8000a7a <HAL_InitTick+0x4a>
 8000a64:	2200      	movs	r2, #0
 8000a66:	6879      	ldr	r1, [r7, #4]
 8000a68:	f04f 30ff 	mov.w	r0, #4294967295
 8000a6c:	f000 f925 	bl	8000cba <HAL_NVIC_SetPriority>
 8000a70:	4a06      	ldr	r2, [pc, #24]	; (8000a8c <HAL_InitTick+0x5c>)
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	6013      	str	r3, [r2, #0]
 8000a76:	2300      	movs	r3, #0
 8000a78:	e000      	b.n	8000a7c <HAL_InitTick+0x4c>
 8000a7a:	2301      	movs	r3, #1
 8000a7c:	4618      	mov	r0, r3
 8000a7e:	3708      	adds	r7, #8
 8000a80:	46bd      	mov	sp, r7
 8000a82:	bd80      	pop	{r7, pc}
 8000a84:	20000010 	.word	0x20000010
 8000a88:	20000004 	.word	0x20000004
 8000a8c:	20000000 	.word	0x20000000

08000a90 <HAL_IncTick>:
 8000a90:	b480      	push	{r7}
 8000a92:	af00      	add	r7, sp, #0
 8000a94:	4b05      	ldr	r3, [pc, #20]	; (8000aac <HAL_IncTick+0x1c>)
 8000a96:	781b      	ldrb	r3, [r3, #0]
 8000a98:	461a      	mov	r2, r3
 8000a9a:	4b05      	ldr	r3, [pc, #20]	; (8000ab0 <HAL_IncTick+0x20>)
 8000a9c:	681b      	ldr	r3, [r3, #0]
 8000a9e:	4413      	add	r3, r2
 8000aa0:	4a03      	ldr	r2, [pc, #12]	; (8000ab0 <HAL_IncTick+0x20>)
 8000aa2:	6013      	str	r3, [r2, #0]
 8000aa4:	bf00      	nop
 8000aa6:	46bd      	mov	sp, r7
 8000aa8:	bc80      	pop	{r7}
 8000aaa:	4770      	bx	lr
 8000aac:	20000004 	.word	0x20000004
 8000ab0:	200000a4 	.word	0x200000a4

08000ab4 <HAL_GetTick>:
 8000ab4:	b480      	push	{r7}
 8000ab6:	af00      	add	r7, sp, #0
 8000ab8:	4b02      	ldr	r3, [pc, #8]	; (8000ac4 <HAL_GetTick+0x10>)
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	4618      	mov	r0, r3
 8000abe:	46bd      	mov	sp, r7
 8000ac0:	bc80      	pop	{r7}
 8000ac2:	4770      	bx	lr
 8000ac4:	200000a4 	.word	0x200000a4

08000ac8 <HAL_Delay>:
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	b084      	sub	sp, #16
 8000acc:	af00      	add	r7, sp, #0
 8000ace:	6078      	str	r0, [r7, #4]
 8000ad0:	f7ff fff0 	bl	8000ab4 <HAL_GetTick>
 8000ad4:	60b8      	str	r0, [r7, #8]
 8000ad6:	687b      	ldr	r3, [r7, #4]
 8000ad8:	60fb      	str	r3, [r7, #12]
 8000ada:	68fb      	ldr	r3, [r7, #12]
 8000adc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000ae0:	d005      	beq.n	8000aee <HAL_Delay+0x26>
 8000ae2:	4b09      	ldr	r3, [pc, #36]	; (8000b08 <HAL_Delay+0x40>)
 8000ae4:	781b      	ldrb	r3, [r3, #0]
 8000ae6:	461a      	mov	r2, r3
 8000ae8:	68fb      	ldr	r3, [r7, #12]
 8000aea:	4413      	add	r3, r2
 8000aec:	60fb      	str	r3, [r7, #12]
 8000aee:	bf00      	nop
 8000af0:	f7ff ffe0 	bl	8000ab4 <HAL_GetTick>
 8000af4:	4602      	mov	r2, r0
 8000af6:	68bb      	ldr	r3, [r7, #8]
 8000af8:	1ad3      	subs	r3, r2, r3
 8000afa:	68fa      	ldr	r2, [r7, #12]
 8000afc:	429a      	cmp	r2, r3
 8000afe:	d8f7      	bhi.n	8000af0 <HAL_Delay+0x28>
 8000b00:	bf00      	nop
 8000b02:	3710      	adds	r7, #16
 8000b04:	46bd      	mov	sp, r7
 8000b06:	bd80      	pop	{r7, pc}
 8000b08:	20000004 	.word	0x20000004

08000b0c <__NVIC_SetPriorityGrouping>:
 8000b0c:	b480      	push	{r7}
 8000b0e:	b085      	sub	sp, #20
 8000b10:	af00      	add	r7, sp, #0
 8000b12:	6078      	str	r0, [r7, #4]
 8000b14:	687b      	ldr	r3, [r7, #4]
 8000b16:	f003 0307 	and.w	r3, r3, #7
 8000b1a:	60fb      	str	r3, [r7, #12]
 8000b1c:	4b0c      	ldr	r3, [pc, #48]	; (8000b50 <__NVIC_SetPriorityGrouping+0x44>)
 8000b1e:	68db      	ldr	r3, [r3, #12]
 8000b20:	60bb      	str	r3, [r7, #8]
 8000b22:	68ba      	ldr	r2, [r7, #8]
 8000b24:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000b28:	4013      	ands	r3, r2
 8000b2a:	60bb      	str	r3, [r7, #8]
 8000b2c:	68fb      	ldr	r3, [r7, #12]
 8000b2e:	021a      	lsls	r2, r3, #8
 8000b30:	68bb      	ldr	r3, [r7, #8]
 8000b32:	4313      	orrs	r3, r2
 8000b34:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000b38:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000b3c:	60bb      	str	r3, [r7, #8]
 8000b3e:	4a04      	ldr	r2, [pc, #16]	; (8000b50 <__NVIC_SetPriorityGrouping+0x44>)
 8000b40:	68bb      	ldr	r3, [r7, #8]
 8000b42:	60d3      	str	r3, [r2, #12]
 8000b44:	bf00      	nop
 8000b46:	3714      	adds	r7, #20
 8000b48:	46bd      	mov	sp, r7
 8000b4a:	bc80      	pop	{r7}
 8000b4c:	4770      	bx	lr
 8000b4e:	bf00      	nop
 8000b50:	e000ed00 	.word	0xe000ed00

08000b54 <__NVIC_GetPriorityGrouping>:
 8000b54:	b480      	push	{r7}
 8000b56:	af00      	add	r7, sp, #0
 8000b58:	4b04      	ldr	r3, [pc, #16]	; (8000b6c <__NVIC_GetPriorityGrouping+0x18>)
 8000b5a:	68db      	ldr	r3, [r3, #12]
 8000b5c:	0a1b      	lsrs	r3, r3, #8
 8000b5e:	f003 0307 	and.w	r3, r3, #7
 8000b62:	4618      	mov	r0, r3
 8000b64:	46bd      	mov	sp, r7
 8000b66:	bc80      	pop	{r7}
 8000b68:	4770      	bx	lr
 8000b6a:	bf00      	nop
 8000b6c:	e000ed00 	.word	0xe000ed00

08000b70 <__NVIC_EnableIRQ>:
 8000b70:	b480      	push	{r7}
 8000b72:	b083      	sub	sp, #12
 8000b74:	af00      	add	r7, sp, #0
 8000b76:	4603      	mov	r3, r0
 8000b78:	71fb      	strb	r3, [r7, #7]
 8000b7a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000b7e:	2b00      	cmp	r3, #0
 8000b80:	db0b      	blt.n	8000b9a <__NVIC_EnableIRQ+0x2a>
 8000b82:	79fb      	ldrb	r3, [r7, #7]
 8000b84:	f003 021f 	and.w	r2, r3, #31
 8000b88:	4906      	ldr	r1, [pc, #24]	; (8000ba4 <__NVIC_EnableIRQ+0x34>)
 8000b8a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000b8e:	095b      	lsrs	r3, r3, #5
 8000b90:	2001      	movs	r0, #1
 8000b92:	fa00 f202 	lsl.w	r2, r0, r2
 8000b96:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000b9a:	bf00      	nop
 8000b9c:	370c      	adds	r7, #12
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	bc80      	pop	{r7}
 8000ba2:	4770      	bx	lr
 8000ba4:	e000e100 	.word	0xe000e100

08000ba8 <__NVIC_SetPriority>:
 8000ba8:	b480      	push	{r7}
 8000baa:	b083      	sub	sp, #12
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	4603      	mov	r3, r0
 8000bb0:	6039      	str	r1, [r7, #0]
 8000bb2:	71fb      	strb	r3, [r7, #7]
 8000bb4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bb8:	2b00      	cmp	r3, #0
 8000bba:	db0a      	blt.n	8000bd2 <__NVIC_SetPriority+0x2a>
 8000bbc:	683b      	ldr	r3, [r7, #0]
 8000bbe:	b2da      	uxtb	r2, r3
 8000bc0:	490c      	ldr	r1, [pc, #48]	; (8000bf4 <__NVIC_SetPriority+0x4c>)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	0112      	lsls	r2, r2, #4
 8000bc8:	b2d2      	uxtb	r2, r2
 8000bca:	440b      	add	r3, r1
 8000bcc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000bd0:	e00a      	b.n	8000be8 <__NVIC_SetPriority+0x40>
 8000bd2:	683b      	ldr	r3, [r7, #0]
 8000bd4:	b2da      	uxtb	r2, r3
 8000bd6:	4908      	ldr	r1, [pc, #32]	; (8000bf8 <__NVIC_SetPriority+0x50>)
 8000bd8:	79fb      	ldrb	r3, [r7, #7]
 8000bda:	f003 030f 	and.w	r3, r3, #15
 8000bde:	3b04      	subs	r3, #4
 8000be0:	0112      	lsls	r2, r2, #4
 8000be2:	b2d2      	uxtb	r2, r2
 8000be4:	440b      	add	r3, r1
 8000be6:	761a      	strb	r2, [r3, #24]
 8000be8:	bf00      	nop
 8000bea:	370c      	adds	r7, #12
 8000bec:	46bd      	mov	sp, r7
 8000bee:	bc80      	pop	{r7}
 8000bf0:	4770      	bx	lr
 8000bf2:	bf00      	nop
 8000bf4:	e000e100 	.word	0xe000e100
 8000bf8:	e000ed00 	.word	0xe000ed00

08000bfc <NVIC_EncodePriority>:
 8000bfc:	b480      	push	{r7}
 8000bfe:	b089      	sub	sp, #36	; 0x24
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	60f8      	str	r0, [r7, #12]
 8000c04:	60b9      	str	r1, [r7, #8]
 8000c06:	607a      	str	r2, [r7, #4]
 8000c08:	68fb      	ldr	r3, [r7, #12]
 8000c0a:	f003 0307 	and.w	r3, r3, #7
 8000c0e:	61fb      	str	r3, [r7, #28]
 8000c10:	69fb      	ldr	r3, [r7, #28]
 8000c12:	f1c3 0307 	rsb	r3, r3, #7
 8000c16:	2b04      	cmp	r3, #4
 8000c18:	bf28      	it	cs
 8000c1a:	2304      	movcs	r3, #4
 8000c1c:	61bb      	str	r3, [r7, #24]
 8000c1e:	69fb      	ldr	r3, [r7, #28]
 8000c20:	3304      	adds	r3, #4
 8000c22:	2b06      	cmp	r3, #6
 8000c24:	d902      	bls.n	8000c2c <NVIC_EncodePriority+0x30>
 8000c26:	69fb      	ldr	r3, [r7, #28]
 8000c28:	3b03      	subs	r3, #3
 8000c2a:	e000      	b.n	8000c2e <NVIC_EncodePriority+0x32>
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	617b      	str	r3, [r7, #20]
 8000c30:	f04f 32ff 	mov.w	r2, #4294967295
 8000c34:	69bb      	ldr	r3, [r7, #24]
 8000c36:	fa02 f303 	lsl.w	r3, r2, r3
 8000c3a:	43da      	mvns	r2, r3
 8000c3c:	68bb      	ldr	r3, [r7, #8]
 8000c3e:	401a      	ands	r2, r3
 8000c40:	697b      	ldr	r3, [r7, #20]
 8000c42:	409a      	lsls	r2, r3
 8000c44:	f04f 31ff 	mov.w	r1, #4294967295
 8000c48:	697b      	ldr	r3, [r7, #20]
 8000c4a:	fa01 f303 	lsl.w	r3, r1, r3
 8000c4e:	43d9      	mvns	r1, r3
 8000c50:	687b      	ldr	r3, [r7, #4]
 8000c52:	400b      	ands	r3, r1
 8000c54:	4313      	orrs	r3, r2
 8000c56:	4618      	mov	r0, r3
 8000c58:	3724      	adds	r7, #36	; 0x24
 8000c5a:	46bd      	mov	sp, r7
 8000c5c:	bc80      	pop	{r7}
 8000c5e:	4770      	bx	lr

08000c60 <SysTick_Config>:
 8000c60:	b580      	push	{r7, lr}
 8000c62:	b082      	sub	sp, #8
 8000c64:	af00      	add	r7, sp, #0
 8000c66:	6078      	str	r0, [r7, #4]
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	3b01      	subs	r3, #1
 8000c6c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000c70:	d301      	bcc.n	8000c76 <SysTick_Config+0x16>
 8000c72:	2301      	movs	r3, #1
 8000c74:	e00f      	b.n	8000c96 <SysTick_Config+0x36>
 8000c76:	4a0a      	ldr	r2, [pc, #40]	; (8000ca0 <SysTick_Config+0x40>)
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	3b01      	subs	r3, #1
 8000c7c:	6053      	str	r3, [r2, #4]
 8000c7e:	210f      	movs	r1, #15
 8000c80:	f04f 30ff 	mov.w	r0, #4294967295
 8000c84:	f7ff ff90 	bl	8000ba8 <__NVIC_SetPriority>
 8000c88:	4b05      	ldr	r3, [pc, #20]	; (8000ca0 <SysTick_Config+0x40>)
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	609a      	str	r2, [r3, #8]
 8000c8e:	4b04      	ldr	r3, [pc, #16]	; (8000ca0 <SysTick_Config+0x40>)
 8000c90:	2207      	movs	r2, #7
 8000c92:	601a      	str	r2, [r3, #0]
 8000c94:	2300      	movs	r3, #0
 8000c96:	4618      	mov	r0, r3
 8000c98:	3708      	adds	r7, #8
 8000c9a:	46bd      	mov	sp, r7
 8000c9c:	bd80      	pop	{r7, pc}
 8000c9e:	bf00      	nop
 8000ca0:	e000e010 	.word	0xe000e010

08000ca4 <HAL_NVIC_SetPriorityGrouping>:
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b082      	sub	sp, #8
 8000ca8:	af00      	add	r7, sp, #0
 8000caa:	6078      	str	r0, [r7, #4]
 8000cac:	6878      	ldr	r0, [r7, #4]
 8000cae:	f7ff ff2d 	bl	8000b0c <__NVIC_SetPriorityGrouping>
 8000cb2:	bf00      	nop
 8000cb4:	3708      	adds	r7, #8
 8000cb6:	46bd      	mov	sp, r7
 8000cb8:	bd80      	pop	{r7, pc}

08000cba <HAL_NVIC_SetPriority>:
 8000cba:	b580      	push	{r7, lr}
 8000cbc:	b086      	sub	sp, #24
 8000cbe:	af00      	add	r7, sp, #0
 8000cc0:	4603      	mov	r3, r0
 8000cc2:	60b9      	str	r1, [r7, #8]
 8000cc4:	607a      	str	r2, [r7, #4]
 8000cc6:	73fb      	strb	r3, [r7, #15]
 8000cc8:	2300      	movs	r3, #0
 8000cca:	617b      	str	r3, [r7, #20]
 8000ccc:	f7ff ff42 	bl	8000b54 <__NVIC_GetPriorityGrouping>
 8000cd0:	6178      	str	r0, [r7, #20]
 8000cd2:	687a      	ldr	r2, [r7, #4]
 8000cd4:	68b9      	ldr	r1, [r7, #8]
 8000cd6:	6978      	ldr	r0, [r7, #20]
 8000cd8:	f7ff ff90 	bl	8000bfc <NVIC_EncodePriority>
 8000cdc:	4602      	mov	r2, r0
 8000cde:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000ce2:	4611      	mov	r1, r2
 8000ce4:	4618      	mov	r0, r3
 8000ce6:	f7ff ff5f 	bl	8000ba8 <__NVIC_SetPriority>
 8000cea:	bf00      	nop
 8000cec:	3718      	adds	r7, #24
 8000cee:	46bd      	mov	sp, r7
 8000cf0:	bd80      	pop	{r7, pc}

08000cf2 <HAL_NVIC_EnableIRQ>:
 8000cf2:	b580      	push	{r7, lr}
 8000cf4:	b082      	sub	sp, #8
 8000cf6:	af00      	add	r7, sp, #0
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	71fb      	strb	r3, [r7, #7]
 8000cfc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d00:	4618      	mov	r0, r3
 8000d02:	f7ff ff35 	bl	8000b70 <__NVIC_EnableIRQ>
 8000d06:	bf00      	nop
 8000d08:	3708      	adds	r7, #8
 8000d0a:	46bd      	mov	sp, r7
 8000d0c:	bd80      	pop	{r7, pc}

08000d0e <HAL_SYSTICK_Config>:
 8000d0e:	b580      	push	{r7, lr}
 8000d10:	b082      	sub	sp, #8
 8000d12:	af00      	add	r7, sp, #0
 8000d14:	6078      	str	r0, [r7, #4]
 8000d16:	6878      	ldr	r0, [r7, #4]
 8000d18:	f7ff ffa2 	bl	8000c60 <SysTick_Config>
 8000d1c:	4603      	mov	r3, r0
 8000d1e:	4618      	mov	r0, r3
 8000d20:	3708      	adds	r7, #8
 8000d22:	46bd      	mov	sp, r7
 8000d24:	bd80      	pop	{r7, pc}
	...

08000d28 <HAL_DMA_Abort_IT>:
 8000d28:	b580      	push	{r7, lr}
 8000d2a:	b084      	sub	sp, #16
 8000d2c:	af00      	add	r7, sp, #0
 8000d2e:	6078      	str	r0, [r7, #4]
 8000d30:	2300      	movs	r3, #0
 8000d32:	73fb      	strb	r3, [r7, #15]
 8000d34:	687b      	ldr	r3, [r7, #4]
 8000d36:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8000d3a:	2b02      	cmp	r3, #2
 8000d3c:	d005      	beq.n	8000d4a <HAL_DMA_Abort_IT+0x22>
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	2204      	movs	r2, #4
 8000d42:	639a      	str	r2, [r3, #56]	; 0x38
 8000d44:	2301      	movs	r3, #1
 8000d46:	73fb      	strb	r3, [r7, #15]
 8000d48:	e0d6      	b.n	8000ef8 <HAL_DMA_Abort_IT+0x1d0>
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	681b      	ldr	r3, [r3, #0]
 8000d4e:	681a      	ldr	r2, [r3, #0]
 8000d50:	687b      	ldr	r3, [r7, #4]
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	f022 020e 	bic.w	r2, r2, #14
 8000d58:	601a      	str	r2, [r3, #0]
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	681a      	ldr	r2, [r3, #0]
 8000d60:	687b      	ldr	r3, [r7, #4]
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	f022 0201 	bic.w	r2, r2, #1
 8000d68:	601a      	str	r2, [r3, #0]
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	681b      	ldr	r3, [r3, #0]
 8000d6e:	461a      	mov	r2, r3
 8000d70:	4b64      	ldr	r3, [pc, #400]	; (8000f04 <HAL_DMA_Abort_IT+0x1dc>)
 8000d72:	429a      	cmp	r2, r3
 8000d74:	d958      	bls.n	8000e28 <HAL_DMA_Abort_IT+0x100>
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	4a63      	ldr	r2, [pc, #396]	; (8000f08 <HAL_DMA_Abort_IT+0x1e0>)
 8000d7c:	4293      	cmp	r3, r2
 8000d7e:	d04f      	beq.n	8000e20 <HAL_DMA_Abort_IT+0xf8>
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	4a61      	ldr	r2, [pc, #388]	; (8000f0c <HAL_DMA_Abort_IT+0x1e4>)
 8000d86:	4293      	cmp	r3, r2
 8000d88:	d048      	beq.n	8000e1c <HAL_DMA_Abort_IT+0xf4>
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	4a60      	ldr	r2, [pc, #384]	; (8000f10 <HAL_DMA_Abort_IT+0x1e8>)
 8000d90:	4293      	cmp	r3, r2
 8000d92:	d040      	beq.n	8000e16 <HAL_DMA_Abort_IT+0xee>
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	4a5e      	ldr	r2, [pc, #376]	; (8000f14 <HAL_DMA_Abort_IT+0x1ec>)
 8000d9a:	4293      	cmp	r3, r2
 8000d9c:	d038      	beq.n	8000e10 <HAL_DMA_Abort_IT+0xe8>
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	4a5d      	ldr	r2, [pc, #372]	; (8000f18 <HAL_DMA_Abort_IT+0x1f0>)
 8000da4:	4293      	cmp	r3, r2
 8000da6:	d030      	beq.n	8000e0a <HAL_DMA_Abort_IT+0xe2>
 8000da8:	687b      	ldr	r3, [r7, #4]
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	4a5b      	ldr	r2, [pc, #364]	; (8000f1c <HAL_DMA_Abort_IT+0x1f4>)
 8000dae:	4293      	cmp	r3, r2
 8000db0:	d028      	beq.n	8000e04 <HAL_DMA_Abort_IT+0xdc>
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	4a53      	ldr	r2, [pc, #332]	; (8000f04 <HAL_DMA_Abort_IT+0x1dc>)
 8000db8:	4293      	cmp	r3, r2
 8000dba:	d020      	beq.n	8000dfe <HAL_DMA_Abort_IT+0xd6>
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	4a57      	ldr	r2, [pc, #348]	; (8000f20 <HAL_DMA_Abort_IT+0x1f8>)
 8000dc2:	4293      	cmp	r3, r2
 8000dc4:	d019      	beq.n	8000dfa <HAL_DMA_Abort_IT+0xd2>
 8000dc6:	687b      	ldr	r3, [r7, #4]
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	4a56      	ldr	r2, [pc, #344]	; (8000f24 <HAL_DMA_Abort_IT+0x1fc>)
 8000dcc:	4293      	cmp	r3, r2
 8000dce:	d012      	beq.n	8000df6 <HAL_DMA_Abort_IT+0xce>
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	4a54      	ldr	r2, [pc, #336]	; (8000f28 <HAL_DMA_Abort_IT+0x200>)
 8000dd6:	4293      	cmp	r3, r2
 8000dd8:	d00a      	beq.n	8000df0 <HAL_DMA_Abort_IT+0xc8>
 8000dda:	687b      	ldr	r3, [r7, #4]
 8000ddc:	681b      	ldr	r3, [r3, #0]
 8000dde:	4a53      	ldr	r2, [pc, #332]	; (8000f2c <HAL_DMA_Abort_IT+0x204>)
 8000de0:	4293      	cmp	r3, r2
 8000de2:	d102      	bne.n	8000dea <HAL_DMA_Abort_IT+0xc2>
 8000de4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000de8:	e01b      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000dea:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000dee:	e018      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000df0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000df4:	e015      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000df6:	2310      	movs	r3, #16
 8000df8:	e013      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000dfa:	2301      	movs	r3, #1
 8000dfc:	e011      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000dfe:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8000e02:	e00e      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000e04:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8000e08:	e00b      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000e0a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000e0e:	e008      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000e10:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000e14:	e005      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000e16:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000e1a:	e002      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000e1c:	2310      	movs	r3, #16
 8000e1e:	e000      	b.n	8000e22 <HAL_DMA_Abort_IT+0xfa>
 8000e20:	2301      	movs	r3, #1
 8000e22:	4a43      	ldr	r2, [pc, #268]	; (8000f30 <HAL_DMA_Abort_IT+0x208>)
 8000e24:	6053      	str	r3, [r2, #4]
 8000e26:	e057      	b.n	8000ed8 <HAL_DMA_Abort_IT+0x1b0>
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	4a36      	ldr	r2, [pc, #216]	; (8000f08 <HAL_DMA_Abort_IT+0x1e0>)
 8000e2e:	4293      	cmp	r3, r2
 8000e30:	d04f      	beq.n	8000ed2 <HAL_DMA_Abort_IT+0x1aa>
 8000e32:	687b      	ldr	r3, [r7, #4]
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	4a35      	ldr	r2, [pc, #212]	; (8000f0c <HAL_DMA_Abort_IT+0x1e4>)
 8000e38:	4293      	cmp	r3, r2
 8000e3a:	d048      	beq.n	8000ece <HAL_DMA_Abort_IT+0x1a6>
 8000e3c:	687b      	ldr	r3, [r7, #4]
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	4a33      	ldr	r2, [pc, #204]	; (8000f10 <HAL_DMA_Abort_IT+0x1e8>)
 8000e42:	4293      	cmp	r3, r2
 8000e44:	d040      	beq.n	8000ec8 <HAL_DMA_Abort_IT+0x1a0>
 8000e46:	687b      	ldr	r3, [r7, #4]
 8000e48:	681b      	ldr	r3, [r3, #0]
 8000e4a:	4a32      	ldr	r2, [pc, #200]	; (8000f14 <HAL_DMA_Abort_IT+0x1ec>)
 8000e4c:	4293      	cmp	r3, r2
 8000e4e:	d038      	beq.n	8000ec2 <HAL_DMA_Abort_IT+0x19a>
 8000e50:	687b      	ldr	r3, [r7, #4]
 8000e52:	681b      	ldr	r3, [r3, #0]
 8000e54:	4a30      	ldr	r2, [pc, #192]	; (8000f18 <HAL_DMA_Abort_IT+0x1f0>)
 8000e56:	4293      	cmp	r3, r2
 8000e58:	d030      	beq.n	8000ebc <HAL_DMA_Abort_IT+0x194>
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	681b      	ldr	r3, [r3, #0]
 8000e5e:	4a2f      	ldr	r2, [pc, #188]	; (8000f1c <HAL_DMA_Abort_IT+0x1f4>)
 8000e60:	4293      	cmp	r3, r2
 8000e62:	d028      	beq.n	8000eb6 <HAL_DMA_Abort_IT+0x18e>
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	681b      	ldr	r3, [r3, #0]
 8000e68:	4a26      	ldr	r2, [pc, #152]	; (8000f04 <HAL_DMA_Abort_IT+0x1dc>)
 8000e6a:	4293      	cmp	r3, r2
 8000e6c:	d020      	beq.n	8000eb0 <HAL_DMA_Abort_IT+0x188>
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	681b      	ldr	r3, [r3, #0]
 8000e72:	4a2b      	ldr	r2, [pc, #172]	; (8000f20 <HAL_DMA_Abort_IT+0x1f8>)
 8000e74:	4293      	cmp	r3, r2
 8000e76:	d019      	beq.n	8000eac <HAL_DMA_Abort_IT+0x184>
 8000e78:	687b      	ldr	r3, [r7, #4]
 8000e7a:	681b      	ldr	r3, [r3, #0]
 8000e7c:	4a29      	ldr	r2, [pc, #164]	; (8000f24 <HAL_DMA_Abort_IT+0x1fc>)
 8000e7e:	4293      	cmp	r3, r2
 8000e80:	d012      	beq.n	8000ea8 <HAL_DMA_Abort_IT+0x180>
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	4a28      	ldr	r2, [pc, #160]	; (8000f28 <HAL_DMA_Abort_IT+0x200>)
 8000e88:	4293      	cmp	r3, r2
 8000e8a:	d00a      	beq.n	8000ea2 <HAL_DMA_Abort_IT+0x17a>
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	4a26      	ldr	r2, [pc, #152]	; (8000f2c <HAL_DMA_Abort_IT+0x204>)
 8000e92:	4293      	cmp	r3, r2
 8000e94:	d102      	bne.n	8000e9c <HAL_DMA_Abort_IT+0x174>
 8000e96:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000e9a:	e01b      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000e9c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ea0:	e018      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ea2:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000ea6:	e015      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ea8:	2310      	movs	r3, #16
 8000eaa:	e013      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000eac:	2301      	movs	r3, #1
 8000eae:	e011      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000eb0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8000eb4:	e00e      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000eb6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8000eba:	e00b      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ebc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ec0:	e008      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ec2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000ec6:	e005      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ec8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000ecc:	e002      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ece:	2310      	movs	r3, #16
 8000ed0:	e000      	b.n	8000ed4 <HAL_DMA_Abort_IT+0x1ac>
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	4a17      	ldr	r2, [pc, #92]	; (8000f34 <HAL_DMA_Abort_IT+0x20c>)
 8000ed6:	6053      	str	r3, [r2, #4]
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	2201      	movs	r2, #1
 8000edc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8000ee0:	687b      	ldr	r3, [r7, #4]
 8000ee2:	2200      	movs	r2, #0
 8000ee4:	f883 2020 	strb.w	r2, [r3, #32]
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000eec:	2b00      	cmp	r3, #0
 8000eee:	d003      	beq.n	8000ef8 <HAL_DMA_Abort_IT+0x1d0>
 8000ef0:	687b      	ldr	r3, [r7, #4]
 8000ef2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000ef4:	6878      	ldr	r0, [r7, #4]
 8000ef6:	4798      	blx	r3
 8000ef8:	7bfb      	ldrb	r3, [r7, #15]
 8000efa:	4618      	mov	r0, r3
 8000efc:	3710      	adds	r7, #16
 8000efe:	46bd      	mov	sp, r7
 8000f00:	bd80      	pop	{r7, pc}
 8000f02:	bf00      	nop
 8000f04:	40020080 	.word	0x40020080
 8000f08:	40020008 	.word	0x40020008
 8000f0c:	4002001c 	.word	0x4002001c
 8000f10:	40020030 	.word	0x40020030
 8000f14:	40020044 	.word	0x40020044
 8000f18:	40020058 	.word	0x40020058
 8000f1c:	4002006c 	.word	0x4002006c
 8000f20:	40020408 	.word	0x40020408
 8000f24:	4002041c 	.word	0x4002041c
 8000f28:	40020430 	.word	0x40020430
 8000f2c:	40020444 	.word	0x40020444
 8000f30:	40020400 	.word	0x40020400
 8000f34:	40020000 	.word	0x40020000

08000f38 <HAL_GPIO_Init>:
 8000f38:	b480      	push	{r7}
 8000f3a:	b08b      	sub	sp, #44	; 0x2c
 8000f3c:	af00      	add	r7, sp, #0
 8000f3e:	6078      	str	r0, [r7, #4]
 8000f40:	6039      	str	r1, [r7, #0]
 8000f42:	2300      	movs	r3, #0
 8000f44:	627b      	str	r3, [r7, #36]	; 0x24
 8000f46:	2300      	movs	r3, #0
 8000f48:	623b      	str	r3, [r7, #32]
 8000f4a:	e133      	b.n	80011b4 <HAL_GPIO_Init+0x27c>
 8000f4c:	2201      	movs	r2, #1
 8000f4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000f50:	fa02 f303 	lsl.w	r3, r2, r3
 8000f54:	61fb      	str	r3, [r7, #28]
 8000f56:	683b      	ldr	r3, [r7, #0]
 8000f58:	681b      	ldr	r3, [r3, #0]
 8000f5a:	69fa      	ldr	r2, [r7, #28]
 8000f5c:	4013      	ands	r3, r2
 8000f5e:	61bb      	str	r3, [r7, #24]
 8000f60:	69ba      	ldr	r2, [r7, #24]
 8000f62:	69fb      	ldr	r3, [r7, #28]
 8000f64:	429a      	cmp	r2, r3
 8000f66:	f040 8122 	bne.w	80011ae <HAL_GPIO_Init+0x276>
 8000f6a:	683b      	ldr	r3, [r7, #0]
 8000f6c:	685b      	ldr	r3, [r3, #4]
 8000f6e:	2b12      	cmp	r3, #18
 8000f70:	d034      	beq.n	8000fdc <HAL_GPIO_Init+0xa4>
 8000f72:	2b12      	cmp	r3, #18
 8000f74:	d80d      	bhi.n	8000f92 <HAL_GPIO_Init+0x5a>
 8000f76:	2b02      	cmp	r3, #2
 8000f78:	d02b      	beq.n	8000fd2 <HAL_GPIO_Init+0x9a>
 8000f7a:	2b02      	cmp	r3, #2
 8000f7c:	d804      	bhi.n	8000f88 <HAL_GPIO_Init+0x50>
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	d031      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000f82:	2b01      	cmp	r3, #1
 8000f84:	d01c      	beq.n	8000fc0 <HAL_GPIO_Init+0x88>
 8000f86:	e048      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000f88:	2b03      	cmp	r3, #3
 8000f8a:	d043      	beq.n	8001014 <HAL_GPIO_Init+0xdc>
 8000f8c:	2b11      	cmp	r3, #17
 8000f8e:	d01b      	beq.n	8000fc8 <HAL_GPIO_Init+0x90>
 8000f90:	e043      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000f92:	4a8f      	ldr	r2, [pc, #572]	; (80011d0 <HAL_GPIO_Init+0x298>)
 8000f94:	4293      	cmp	r3, r2
 8000f96:	d026      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000f98:	4a8d      	ldr	r2, [pc, #564]	; (80011d0 <HAL_GPIO_Init+0x298>)
 8000f9a:	4293      	cmp	r3, r2
 8000f9c:	d806      	bhi.n	8000fac <HAL_GPIO_Init+0x74>
 8000f9e:	4a8d      	ldr	r2, [pc, #564]	; (80011d4 <HAL_GPIO_Init+0x29c>)
 8000fa0:	4293      	cmp	r3, r2
 8000fa2:	d020      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000fa4:	4a8c      	ldr	r2, [pc, #560]	; (80011d8 <HAL_GPIO_Init+0x2a0>)
 8000fa6:	4293      	cmp	r3, r2
 8000fa8:	d01d      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000faa:	e036      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000fac:	4a8b      	ldr	r2, [pc, #556]	; (80011dc <HAL_GPIO_Init+0x2a4>)
 8000fae:	4293      	cmp	r3, r2
 8000fb0:	d019      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000fb2:	4a8b      	ldr	r2, [pc, #556]	; (80011e0 <HAL_GPIO_Init+0x2a8>)
 8000fb4:	4293      	cmp	r3, r2
 8000fb6:	d016      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000fb8:	4a8a      	ldr	r2, [pc, #552]	; (80011e4 <HAL_GPIO_Init+0x2ac>)
 8000fba:	4293      	cmp	r3, r2
 8000fbc:	d013      	beq.n	8000fe6 <HAL_GPIO_Init+0xae>
 8000fbe:	e02c      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000fc0:	683b      	ldr	r3, [r7, #0]
 8000fc2:	68db      	ldr	r3, [r3, #12]
 8000fc4:	623b      	str	r3, [r7, #32]
 8000fc6:	e028      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000fc8:	683b      	ldr	r3, [r7, #0]
 8000fca:	68db      	ldr	r3, [r3, #12]
 8000fcc:	3304      	adds	r3, #4
 8000fce:	623b      	str	r3, [r7, #32]
 8000fd0:	e023      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000fd2:	683b      	ldr	r3, [r7, #0]
 8000fd4:	68db      	ldr	r3, [r3, #12]
 8000fd6:	3308      	adds	r3, #8
 8000fd8:	623b      	str	r3, [r7, #32]
 8000fda:	e01e      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000fdc:	683b      	ldr	r3, [r7, #0]
 8000fde:	68db      	ldr	r3, [r3, #12]
 8000fe0:	330c      	adds	r3, #12
 8000fe2:	623b      	str	r3, [r7, #32]
 8000fe4:	e019      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000fe6:	683b      	ldr	r3, [r7, #0]
 8000fe8:	689b      	ldr	r3, [r3, #8]
 8000fea:	2b00      	cmp	r3, #0
 8000fec:	d102      	bne.n	8000ff4 <HAL_GPIO_Init+0xbc>
 8000fee:	2304      	movs	r3, #4
 8000ff0:	623b      	str	r3, [r7, #32]
 8000ff2:	e012      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8000ff4:	683b      	ldr	r3, [r7, #0]
 8000ff6:	689b      	ldr	r3, [r3, #8]
 8000ff8:	2b01      	cmp	r3, #1
 8000ffa:	d105      	bne.n	8001008 <HAL_GPIO_Init+0xd0>
 8000ffc:	2308      	movs	r3, #8
 8000ffe:	623b      	str	r3, [r7, #32]
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	69fa      	ldr	r2, [r7, #28]
 8001004:	611a      	str	r2, [r3, #16]
 8001006:	e008      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8001008:	2308      	movs	r3, #8
 800100a:	623b      	str	r3, [r7, #32]
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	69fa      	ldr	r2, [r7, #28]
 8001010:	615a      	str	r2, [r3, #20]
 8001012:	e002      	b.n	800101a <HAL_GPIO_Init+0xe2>
 8001014:	2300      	movs	r3, #0
 8001016:	623b      	str	r3, [r7, #32]
 8001018:	bf00      	nop
 800101a:	69bb      	ldr	r3, [r7, #24]
 800101c:	2bff      	cmp	r3, #255	; 0xff
 800101e:	d801      	bhi.n	8001024 <HAL_GPIO_Init+0xec>
 8001020:	687b      	ldr	r3, [r7, #4]
 8001022:	e001      	b.n	8001028 <HAL_GPIO_Init+0xf0>
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	3304      	adds	r3, #4
 8001028:	617b      	str	r3, [r7, #20]
 800102a:	69bb      	ldr	r3, [r7, #24]
 800102c:	2bff      	cmp	r3, #255	; 0xff
 800102e:	d802      	bhi.n	8001036 <HAL_GPIO_Init+0xfe>
 8001030:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001032:	009b      	lsls	r3, r3, #2
 8001034:	e002      	b.n	800103c <HAL_GPIO_Init+0x104>
 8001036:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001038:	3b08      	subs	r3, #8
 800103a:	009b      	lsls	r3, r3, #2
 800103c:	613b      	str	r3, [r7, #16]
 800103e:	697b      	ldr	r3, [r7, #20]
 8001040:	681a      	ldr	r2, [r3, #0]
 8001042:	210f      	movs	r1, #15
 8001044:	693b      	ldr	r3, [r7, #16]
 8001046:	fa01 f303 	lsl.w	r3, r1, r3
 800104a:	43db      	mvns	r3, r3
 800104c:	401a      	ands	r2, r3
 800104e:	6a39      	ldr	r1, [r7, #32]
 8001050:	693b      	ldr	r3, [r7, #16]
 8001052:	fa01 f303 	lsl.w	r3, r1, r3
 8001056:	431a      	orrs	r2, r3
 8001058:	697b      	ldr	r3, [r7, #20]
 800105a:	601a      	str	r2, [r3, #0]
 800105c:	683b      	ldr	r3, [r7, #0]
 800105e:	685b      	ldr	r3, [r3, #4]
 8001060:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001064:	2b00      	cmp	r3, #0
 8001066:	f000 80a2 	beq.w	80011ae <HAL_GPIO_Init+0x276>
 800106a:	4b5f      	ldr	r3, [pc, #380]	; (80011e8 <HAL_GPIO_Init+0x2b0>)
 800106c:	699b      	ldr	r3, [r3, #24]
 800106e:	4a5e      	ldr	r2, [pc, #376]	; (80011e8 <HAL_GPIO_Init+0x2b0>)
 8001070:	f043 0301 	orr.w	r3, r3, #1
 8001074:	6193      	str	r3, [r2, #24]
 8001076:	4b5c      	ldr	r3, [pc, #368]	; (80011e8 <HAL_GPIO_Init+0x2b0>)
 8001078:	699b      	ldr	r3, [r3, #24]
 800107a:	f003 0301 	and.w	r3, r3, #1
 800107e:	60bb      	str	r3, [r7, #8]
 8001080:	68bb      	ldr	r3, [r7, #8]
 8001082:	4a5a      	ldr	r2, [pc, #360]	; (80011ec <HAL_GPIO_Init+0x2b4>)
 8001084:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001086:	089b      	lsrs	r3, r3, #2
 8001088:	3302      	adds	r3, #2
 800108a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800108e:	60fb      	str	r3, [r7, #12]
 8001090:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001092:	f003 0303 	and.w	r3, r3, #3
 8001096:	009b      	lsls	r3, r3, #2
 8001098:	220f      	movs	r2, #15
 800109a:	fa02 f303 	lsl.w	r3, r2, r3
 800109e:	43db      	mvns	r3, r3
 80010a0:	68fa      	ldr	r2, [r7, #12]
 80010a2:	4013      	ands	r3, r2
 80010a4:	60fb      	str	r3, [r7, #12]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	4a51      	ldr	r2, [pc, #324]	; (80011f0 <HAL_GPIO_Init+0x2b8>)
 80010aa:	4293      	cmp	r3, r2
 80010ac:	d01f      	beq.n	80010ee <HAL_GPIO_Init+0x1b6>
 80010ae:	687b      	ldr	r3, [r7, #4]
 80010b0:	4a50      	ldr	r2, [pc, #320]	; (80011f4 <HAL_GPIO_Init+0x2bc>)
 80010b2:	4293      	cmp	r3, r2
 80010b4:	d019      	beq.n	80010ea <HAL_GPIO_Init+0x1b2>
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	4a4f      	ldr	r2, [pc, #316]	; (80011f8 <HAL_GPIO_Init+0x2c0>)
 80010ba:	4293      	cmp	r3, r2
 80010bc:	d013      	beq.n	80010e6 <HAL_GPIO_Init+0x1ae>
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	4a4e      	ldr	r2, [pc, #312]	; (80011fc <HAL_GPIO_Init+0x2c4>)
 80010c2:	4293      	cmp	r3, r2
 80010c4:	d00d      	beq.n	80010e2 <HAL_GPIO_Init+0x1aa>
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	4a4d      	ldr	r2, [pc, #308]	; (8001200 <HAL_GPIO_Init+0x2c8>)
 80010ca:	4293      	cmp	r3, r2
 80010cc:	d007      	beq.n	80010de <HAL_GPIO_Init+0x1a6>
 80010ce:	687b      	ldr	r3, [r7, #4]
 80010d0:	4a4c      	ldr	r2, [pc, #304]	; (8001204 <HAL_GPIO_Init+0x2cc>)
 80010d2:	4293      	cmp	r3, r2
 80010d4:	d101      	bne.n	80010da <HAL_GPIO_Init+0x1a2>
 80010d6:	2305      	movs	r3, #5
 80010d8:	e00a      	b.n	80010f0 <HAL_GPIO_Init+0x1b8>
 80010da:	2306      	movs	r3, #6
 80010dc:	e008      	b.n	80010f0 <HAL_GPIO_Init+0x1b8>
 80010de:	2304      	movs	r3, #4
 80010e0:	e006      	b.n	80010f0 <HAL_GPIO_Init+0x1b8>
 80010e2:	2303      	movs	r3, #3
 80010e4:	e004      	b.n	80010f0 <HAL_GPIO_Init+0x1b8>
 80010e6:	2302      	movs	r3, #2
 80010e8:	e002      	b.n	80010f0 <HAL_GPIO_Init+0x1b8>
 80010ea:	2301      	movs	r3, #1
 80010ec:	e000      	b.n	80010f0 <HAL_GPIO_Init+0x1b8>
 80010ee:	2300      	movs	r3, #0
 80010f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80010f2:	f002 0203 	and.w	r2, r2, #3
 80010f6:	0092      	lsls	r2, r2, #2
 80010f8:	4093      	lsls	r3, r2
 80010fa:	68fa      	ldr	r2, [r7, #12]
 80010fc:	4313      	orrs	r3, r2
 80010fe:	60fb      	str	r3, [r7, #12]
 8001100:	493a      	ldr	r1, [pc, #232]	; (80011ec <HAL_GPIO_Init+0x2b4>)
 8001102:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001104:	089b      	lsrs	r3, r3, #2
 8001106:	3302      	adds	r3, #2
 8001108:	68fa      	ldr	r2, [r7, #12]
 800110a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800110e:	683b      	ldr	r3, [r7, #0]
 8001110:	685b      	ldr	r3, [r3, #4]
 8001112:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001116:	2b00      	cmp	r3, #0
 8001118:	d006      	beq.n	8001128 <HAL_GPIO_Init+0x1f0>
 800111a:	4b3b      	ldr	r3, [pc, #236]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 800111c:	681a      	ldr	r2, [r3, #0]
 800111e:	493a      	ldr	r1, [pc, #232]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001120:	69bb      	ldr	r3, [r7, #24]
 8001122:	4313      	orrs	r3, r2
 8001124:	600b      	str	r3, [r1, #0]
 8001126:	e006      	b.n	8001136 <HAL_GPIO_Init+0x1fe>
 8001128:	4b37      	ldr	r3, [pc, #220]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 800112a:	681a      	ldr	r2, [r3, #0]
 800112c:	69bb      	ldr	r3, [r7, #24]
 800112e:	43db      	mvns	r3, r3
 8001130:	4935      	ldr	r1, [pc, #212]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001132:	4013      	ands	r3, r2
 8001134:	600b      	str	r3, [r1, #0]
 8001136:	683b      	ldr	r3, [r7, #0]
 8001138:	685b      	ldr	r3, [r3, #4]
 800113a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800113e:	2b00      	cmp	r3, #0
 8001140:	d006      	beq.n	8001150 <HAL_GPIO_Init+0x218>
 8001142:	4b31      	ldr	r3, [pc, #196]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001144:	685a      	ldr	r2, [r3, #4]
 8001146:	4930      	ldr	r1, [pc, #192]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001148:	69bb      	ldr	r3, [r7, #24]
 800114a:	4313      	orrs	r3, r2
 800114c:	604b      	str	r3, [r1, #4]
 800114e:	e006      	b.n	800115e <HAL_GPIO_Init+0x226>
 8001150:	4b2d      	ldr	r3, [pc, #180]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001152:	685a      	ldr	r2, [r3, #4]
 8001154:	69bb      	ldr	r3, [r7, #24]
 8001156:	43db      	mvns	r3, r3
 8001158:	492b      	ldr	r1, [pc, #172]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 800115a:	4013      	ands	r3, r2
 800115c:	604b      	str	r3, [r1, #4]
 800115e:	683b      	ldr	r3, [r7, #0]
 8001160:	685b      	ldr	r3, [r3, #4]
 8001162:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001166:	2b00      	cmp	r3, #0
 8001168:	d006      	beq.n	8001178 <HAL_GPIO_Init+0x240>
 800116a:	4b27      	ldr	r3, [pc, #156]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 800116c:	689a      	ldr	r2, [r3, #8]
 800116e:	4926      	ldr	r1, [pc, #152]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001170:	69bb      	ldr	r3, [r7, #24]
 8001172:	4313      	orrs	r3, r2
 8001174:	608b      	str	r3, [r1, #8]
 8001176:	e006      	b.n	8001186 <HAL_GPIO_Init+0x24e>
 8001178:	4b23      	ldr	r3, [pc, #140]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 800117a:	689a      	ldr	r2, [r3, #8]
 800117c:	69bb      	ldr	r3, [r7, #24]
 800117e:	43db      	mvns	r3, r3
 8001180:	4921      	ldr	r1, [pc, #132]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001182:	4013      	ands	r3, r2
 8001184:	608b      	str	r3, [r1, #8]
 8001186:	683b      	ldr	r3, [r7, #0]
 8001188:	685b      	ldr	r3, [r3, #4]
 800118a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800118e:	2b00      	cmp	r3, #0
 8001190:	d006      	beq.n	80011a0 <HAL_GPIO_Init+0x268>
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001194:	68da      	ldr	r2, [r3, #12]
 8001196:	491c      	ldr	r1, [pc, #112]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 8001198:	69bb      	ldr	r3, [r7, #24]
 800119a:	4313      	orrs	r3, r2
 800119c:	60cb      	str	r3, [r1, #12]
 800119e:	e006      	b.n	80011ae <HAL_GPIO_Init+0x276>
 80011a0:	4b19      	ldr	r3, [pc, #100]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 80011a2:	68da      	ldr	r2, [r3, #12]
 80011a4:	69bb      	ldr	r3, [r7, #24]
 80011a6:	43db      	mvns	r3, r3
 80011a8:	4917      	ldr	r1, [pc, #92]	; (8001208 <HAL_GPIO_Init+0x2d0>)
 80011aa:	4013      	ands	r3, r2
 80011ac:	60cb      	str	r3, [r1, #12]
 80011ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011b0:	3301      	adds	r3, #1
 80011b2:	627b      	str	r3, [r7, #36]	; 0x24
 80011b4:	683b      	ldr	r3, [r7, #0]
 80011b6:	681a      	ldr	r2, [r3, #0]
 80011b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011ba:	fa22 f303 	lsr.w	r3, r2, r3
 80011be:	2b00      	cmp	r3, #0
 80011c0:	f47f aec4 	bne.w	8000f4c <HAL_GPIO_Init+0x14>
 80011c4:	bf00      	nop
 80011c6:	372c      	adds	r7, #44	; 0x2c
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bc80      	pop	{r7}
 80011cc:	4770      	bx	lr
 80011ce:	bf00      	nop
 80011d0:	10210000 	.word	0x10210000
 80011d4:	10110000 	.word	0x10110000
 80011d8:	10120000 	.word	0x10120000
 80011dc:	10310000 	.word	0x10310000
 80011e0:	10320000 	.word	0x10320000
 80011e4:	10220000 	.word	0x10220000
 80011e8:	40021000 	.word	0x40021000
 80011ec:	40010000 	.word	0x40010000
 80011f0:	40010800 	.word	0x40010800
 80011f4:	40010c00 	.word	0x40010c00
 80011f8:	40011000 	.word	0x40011000
 80011fc:	40011400 	.word	0x40011400
 8001200:	40011800 	.word	0x40011800
 8001204:	40011c00 	.word	0x40011c00
 8001208:	40010400 	.word	0x40010400

0800120c <HAL_GPIO_WritePin>:
 800120c:	b480      	push	{r7}
 800120e:	b083      	sub	sp, #12
 8001210:	af00      	add	r7, sp, #0
 8001212:	6078      	str	r0, [r7, #4]
 8001214:	460b      	mov	r3, r1
 8001216:	807b      	strh	r3, [r7, #2]
 8001218:	4613      	mov	r3, r2
 800121a:	707b      	strb	r3, [r7, #1]
 800121c:	787b      	ldrb	r3, [r7, #1]
 800121e:	2b00      	cmp	r3, #0
 8001220:	d003      	beq.n	800122a <HAL_GPIO_WritePin+0x1e>
 8001222:	887a      	ldrh	r2, [r7, #2]
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	611a      	str	r2, [r3, #16]
 8001228:	e003      	b.n	8001232 <HAL_GPIO_WritePin+0x26>
 800122a:	887b      	ldrh	r3, [r7, #2]
 800122c:	041a      	lsls	r2, r3, #16
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	611a      	str	r2, [r3, #16]
 8001232:	bf00      	nop
 8001234:	370c      	adds	r7, #12
 8001236:	46bd      	mov	sp, r7
 8001238:	bc80      	pop	{r7}
 800123a:	4770      	bx	lr

0800123c <HAL_GPIO_TogglePin>:
 800123c:	b480      	push	{r7}
 800123e:	b083      	sub	sp, #12
 8001240:	af00      	add	r7, sp, #0
 8001242:	6078      	str	r0, [r7, #4]
 8001244:	460b      	mov	r3, r1
 8001246:	807b      	strh	r3, [r7, #2]
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	68da      	ldr	r2, [r3, #12]
 800124c:	887b      	ldrh	r3, [r7, #2]
 800124e:	4013      	ands	r3, r2
 8001250:	2b00      	cmp	r3, #0
 8001252:	d003      	beq.n	800125c <HAL_GPIO_TogglePin+0x20>
 8001254:	887a      	ldrh	r2, [r7, #2]
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	615a      	str	r2, [r3, #20]
 800125a:	e002      	b.n	8001262 <HAL_GPIO_TogglePin+0x26>
 800125c:	887a      	ldrh	r2, [r7, #2]
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	611a      	str	r2, [r3, #16]
 8001262:	bf00      	nop
 8001264:	370c      	adds	r7, #12
 8001266:	46bd      	mov	sp, r7
 8001268:	bc80      	pop	{r7}
 800126a:	4770      	bx	lr

0800126c <HAL_GPIO_EXTI_IRQHandler>:
 800126c:	b580      	push	{r7, lr}
 800126e:	b082      	sub	sp, #8
 8001270:	af00      	add	r7, sp, #0
 8001272:	4603      	mov	r3, r0
 8001274:	80fb      	strh	r3, [r7, #6]
 8001276:	4b08      	ldr	r3, [pc, #32]	; (8001298 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001278:	695a      	ldr	r2, [r3, #20]
 800127a:	88fb      	ldrh	r3, [r7, #6]
 800127c:	4013      	ands	r3, r2
 800127e:	2b00      	cmp	r3, #0
 8001280:	d006      	beq.n	8001290 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001282:	4a05      	ldr	r2, [pc, #20]	; (8001298 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001284:	88fb      	ldrh	r3, [r7, #6]
 8001286:	6153      	str	r3, [r2, #20]
 8001288:	88fb      	ldrh	r3, [r7, #6]
 800128a:	4618      	mov	r0, r3
 800128c:	f007 f876 	bl	800837c <HAL_GPIO_EXTI_Callback>
 8001290:	bf00      	nop
 8001292:	3708      	adds	r7, #8
 8001294:	46bd      	mov	sp, r7
 8001296:	bd80      	pop	{r7, pc}
 8001298:	40010400 	.word	0x40010400

0800129c <HAL_RCC_OscConfig>:
 800129c:	b580      	push	{r7, lr}
 800129e:	b086      	sub	sp, #24
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	d101      	bne.n	80012ae <HAL_RCC_OscConfig+0x12>
 80012aa:	2301      	movs	r3, #1
 80012ac:	e26c      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	f003 0301 	and.w	r3, r3, #1
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	f000 8087 	beq.w	80013ca <HAL_RCC_OscConfig+0x12e>
 80012bc:	4b92      	ldr	r3, [pc, #584]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80012be:	685b      	ldr	r3, [r3, #4]
 80012c0:	f003 030c 	and.w	r3, r3, #12
 80012c4:	2b04      	cmp	r3, #4
 80012c6:	d00c      	beq.n	80012e2 <HAL_RCC_OscConfig+0x46>
 80012c8:	4b8f      	ldr	r3, [pc, #572]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80012ca:	685b      	ldr	r3, [r3, #4]
 80012cc:	f003 030c 	and.w	r3, r3, #12
 80012d0:	2b08      	cmp	r3, #8
 80012d2:	d112      	bne.n	80012fa <HAL_RCC_OscConfig+0x5e>
 80012d4:	4b8c      	ldr	r3, [pc, #560]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80012d6:	685b      	ldr	r3, [r3, #4]
 80012d8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80012dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80012e0:	d10b      	bne.n	80012fa <HAL_RCC_OscConfig+0x5e>
 80012e2:	4b89      	ldr	r3, [pc, #548]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80012e4:	681b      	ldr	r3, [r3, #0]
 80012e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80012ea:	2b00      	cmp	r3, #0
 80012ec:	d06c      	beq.n	80013c8 <HAL_RCC_OscConfig+0x12c>
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	685b      	ldr	r3, [r3, #4]
 80012f2:	2b00      	cmp	r3, #0
 80012f4:	d168      	bne.n	80013c8 <HAL_RCC_OscConfig+0x12c>
 80012f6:	2301      	movs	r3, #1
 80012f8:	e246      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	685b      	ldr	r3, [r3, #4]
 80012fe:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001302:	d106      	bne.n	8001312 <HAL_RCC_OscConfig+0x76>
 8001304:	4b80      	ldr	r3, [pc, #512]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	4a7f      	ldr	r2, [pc, #508]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800130a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800130e:	6013      	str	r3, [r2, #0]
 8001310:	e02e      	b.n	8001370 <HAL_RCC_OscConfig+0xd4>
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	685b      	ldr	r3, [r3, #4]
 8001316:	2b00      	cmp	r3, #0
 8001318:	d10c      	bne.n	8001334 <HAL_RCC_OscConfig+0x98>
 800131a:	4b7b      	ldr	r3, [pc, #492]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	4a7a      	ldr	r2, [pc, #488]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001320:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001324:	6013      	str	r3, [r2, #0]
 8001326:	4b78      	ldr	r3, [pc, #480]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001328:	681b      	ldr	r3, [r3, #0]
 800132a:	4a77      	ldr	r2, [pc, #476]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800132c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001330:	6013      	str	r3, [r2, #0]
 8001332:	e01d      	b.n	8001370 <HAL_RCC_OscConfig+0xd4>
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	685b      	ldr	r3, [r3, #4]
 8001338:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800133c:	d10c      	bne.n	8001358 <HAL_RCC_OscConfig+0xbc>
 800133e:	4b72      	ldr	r3, [pc, #456]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001340:	681b      	ldr	r3, [r3, #0]
 8001342:	4a71      	ldr	r2, [pc, #452]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001344:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001348:	6013      	str	r3, [r2, #0]
 800134a:	4b6f      	ldr	r3, [pc, #444]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800134c:	681b      	ldr	r3, [r3, #0]
 800134e:	4a6e      	ldr	r2, [pc, #440]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001350:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001354:	6013      	str	r3, [r2, #0]
 8001356:	e00b      	b.n	8001370 <HAL_RCC_OscConfig+0xd4>
 8001358:	4b6b      	ldr	r3, [pc, #428]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	4a6a      	ldr	r2, [pc, #424]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800135e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001362:	6013      	str	r3, [r2, #0]
 8001364:	4b68      	ldr	r3, [pc, #416]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	4a67      	ldr	r2, [pc, #412]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800136a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800136e:	6013      	str	r3, [r2, #0]
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	685b      	ldr	r3, [r3, #4]
 8001374:	2b00      	cmp	r3, #0
 8001376:	d013      	beq.n	80013a0 <HAL_RCC_OscConfig+0x104>
 8001378:	f7ff fb9c 	bl	8000ab4 <HAL_GetTick>
 800137c:	6138      	str	r0, [r7, #16]
 800137e:	e008      	b.n	8001392 <HAL_RCC_OscConfig+0xf6>
 8001380:	f7ff fb98 	bl	8000ab4 <HAL_GetTick>
 8001384:	4602      	mov	r2, r0
 8001386:	693b      	ldr	r3, [r7, #16]
 8001388:	1ad3      	subs	r3, r2, r3
 800138a:	2b64      	cmp	r3, #100	; 0x64
 800138c:	d901      	bls.n	8001392 <HAL_RCC_OscConfig+0xf6>
 800138e:	2303      	movs	r3, #3
 8001390:	e1fa      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001392:	4b5d      	ldr	r3, [pc, #372]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800139a:	2b00      	cmp	r3, #0
 800139c:	d0f0      	beq.n	8001380 <HAL_RCC_OscConfig+0xe4>
 800139e:	e014      	b.n	80013ca <HAL_RCC_OscConfig+0x12e>
 80013a0:	f7ff fb88 	bl	8000ab4 <HAL_GetTick>
 80013a4:	6138      	str	r0, [r7, #16]
 80013a6:	e008      	b.n	80013ba <HAL_RCC_OscConfig+0x11e>
 80013a8:	f7ff fb84 	bl	8000ab4 <HAL_GetTick>
 80013ac:	4602      	mov	r2, r0
 80013ae:	693b      	ldr	r3, [r7, #16]
 80013b0:	1ad3      	subs	r3, r2, r3
 80013b2:	2b64      	cmp	r3, #100	; 0x64
 80013b4:	d901      	bls.n	80013ba <HAL_RCC_OscConfig+0x11e>
 80013b6:	2303      	movs	r3, #3
 80013b8:	e1e6      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 80013ba:	4b53      	ldr	r3, [pc, #332]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80013bc:	681b      	ldr	r3, [r3, #0]
 80013be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d1f0      	bne.n	80013a8 <HAL_RCC_OscConfig+0x10c>
 80013c6:	e000      	b.n	80013ca <HAL_RCC_OscConfig+0x12e>
 80013c8:	bf00      	nop
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	f003 0302 	and.w	r3, r3, #2
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d063      	beq.n	800149e <HAL_RCC_OscConfig+0x202>
 80013d6:	4b4c      	ldr	r3, [pc, #304]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80013d8:	685b      	ldr	r3, [r3, #4]
 80013da:	f003 030c 	and.w	r3, r3, #12
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d00b      	beq.n	80013fa <HAL_RCC_OscConfig+0x15e>
 80013e2:	4b49      	ldr	r3, [pc, #292]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80013e4:	685b      	ldr	r3, [r3, #4]
 80013e6:	f003 030c 	and.w	r3, r3, #12
 80013ea:	2b08      	cmp	r3, #8
 80013ec:	d11c      	bne.n	8001428 <HAL_RCC_OscConfig+0x18c>
 80013ee:	4b46      	ldr	r3, [pc, #280]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80013f0:	685b      	ldr	r3, [r3, #4]
 80013f2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	d116      	bne.n	8001428 <HAL_RCC_OscConfig+0x18c>
 80013fa:	4b43      	ldr	r3, [pc, #268]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	f003 0302 	and.w	r3, r3, #2
 8001402:	2b00      	cmp	r3, #0
 8001404:	d005      	beq.n	8001412 <HAL_RCC_OscConfig+0x176>
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	691b      	ldr	r3, [r3, #16]
 800140a:	2b01      	cmp	r3, #1
 800140c:	d001      	beq.n	8001412 <HAL_RCC_OscConfig+0x176>
 800140e:	2301      	movs	r3, #1
 8001410:	e1ba      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001412:	4b3d      	ldr	r3, [pc, #244]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001414:	681b      	ldr	r3, [r3, #0]
 8001416:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	695b      	ldr	r3, [r3, #20]
 800141e:	00db      	lsls	r3, r3, #3
 8001420:	4939      	ldr	r1, [pc, #228]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001422:	4313      	orrs	r3, r2
 8001424:	600b      	str	r3, [r1, #0]
 8001426:	e03a      	b.n	800149e <HAL_RCC_OscConfig+0x202>
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	691b      	ldr	r3, [r3, #16]
 800142c:	2b00      	cmp	r3, #0
 800142e:	d020      	beq.n	8001472 <HAL_RCC_OscConfig+0x1d6>
 8001430:	4b36      	ldr	r3, [pc, #216]	; (800150c <HAL_RCC_OscConfig+0x270>)
 8001432:	2201      	movs	r2, #1
 8001434:	601a      	str	r2, [r3, #0]
 8001436:	f7ff fb3d 	bl	8000ab4 <HAL_GetTick>
 800143a:	6138      	str	r0, [r7, #16]
 800143c:	e008      	b.n	8001450 <HAL_RCC_OscConfig+0x1b4>
 800143e:	f7ff fb39 	bl	8000ab4 <HAL_GetTick>
 8001442:	4602      	mov	r2, r0
 8001444:	693b      	ldr	r3, [r7, #16]
 8001446:	1ad3      	subs	r3, r2, r3
 8001448:	2b02      	cmp	r3, #2
 800144a:	d901      	bls.n	8001450 <HAL_RCC_OscConfig+0x1b4>
 800144c:	2303      	movs	r3, #3
 800144e:	e19b      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001450:	4b2d      	ldr	r3, [pc, #180]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	f003 0302 	and.w	r3, r3, #2
 8001458:	2b00      	cmp	r3, #0
 800145a:	d0f0      	beq.n	800143e <HAL_RCC_OscConfig+0x1a2>
 800145c:	4b2a      	ldr	r3, [pc, #168]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	695b      	ldr	r3, [r3, #20]
 8001468:	00db      	lsls	r3, r3, #3
 800146a:	4927      	ldr	r1, [pc, #156]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 800146c:	4313      	orrs	r3, r2
 800146e:	600b      	str	r3, [r1, #0]
 8001470:	e015      	b.n	800149e <HAL_RCC_OscConfig+0x202>
 8001472:	4b26      	ldr	r3, [pc, #152]	; (800150c <HAL_RCC_OscConfig+0x270>)
 8001474:	2200      	movs	r2, #0
 8001476:	601a      	str	r2, [r3, #0]
 8001478:	f7ff fb1c 	bl	8000ab4 <HAL_GetTick>
 800147c:	6138      	str	r0, [r7, #16]
 800147e:	e008      	b.n	8001492 <HAL_RCC_OscConfig+0x1f6>
 8001480:	f7ff fb18 	bl	8000ab4 <HAL_GetTick>
 8001484:	4602      	mov	r2, r0
 8001486:	693b      	ldr	r3, [r7, #16]
 8001488:	1ad3      	subs	r3, r2, r3
 800148a:	2b02      	cmp	r3, #2
 800148c:	d901      	bls.n	8001492 <HAL_RCC_OscConfig+0x1f6>
 800148e:	2303      	movs	r3, #3
 8001490:	e17a      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001492:	4b1d      	ldr	r3, [pc, #116]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	f003 0302 	and.w	r3, r3, #2
 800149a:	2b00      	cmp	r3, #0
 800149c:	d1f0      	bne.n	8001480 <HAL_RCC_OscConfig+0x1e4>
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	681b      	ldr	r3, [r3, #0]
 80014a2:	f003 0308 	and.w	r3, r3, #8
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	d03a      	beq.n	8001520 <HAL_RCC_OscConfig+0x284>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	699b      	ldr	r3, [r3, #24]
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d019      	beq.n	80014e6 <HAL_RCC_OscConfig+0x24a>
 80014b2:	4b17      	ldr	r3, [pc, #92]	; (8001510 <HAL_RCC_OscConfig+0x274>)
 80014b4:	2201      	movs	r2, #1
 80014b6:	601a      	str	r2, [r3, #0]
 80014b8:	f7ff fafc 	bl	8000ab4 <HAL_GetTick>
 80014bc:	6138      	str	r0, [r7, #16]
 80014be:	e008      	b.n	80014d2 <HAL_RCC_OscConfig+0x236>
 80014c0:	f7ff faf8 	bl	8000ab4 <HAL_GetTick>
 80014c4:	4602      	mov	r2, r0
 80014c6:	693b      	ldr	r3, [r7, #16]
 80014c8:	1ad3      	subs	r3, r2, r3
 80014ca:	2b02      	cmp	r3, #2
 80014cc:	d901      	bls.n	80014d2 <HAL_RCC_OscConfig+0x236>
 80014ce:	2303      	movs	r3, #3
 80014d0:	e15a      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 80014d2:	4b0d      	ldr	r3, [pc, #52]	; (8001508 <HAL_RCC_OscConfig+0x26c>)
 80014d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80014d6:	f003 0302 	and.w	r3, r3, #2
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d0f0      	beq.n	80014c0 <HAL_RCC_OscConfig+0x224>
 80014de:	2001      	movs	r0, #1
 80014e0:	f000 faa8 	bl	8001a34 <RCC_Delay>
 80014e4:	e01c      	b.n	8001520 <HAL_RCC_OscConfig+0x284>
 80014e6:	4b0a      	ldr	r3, [pc, #40]	; (8001510 <HAL_RCC_OscConfig+0x274>)
 80014e8:	2200      	movs	r2, #0
 80014ea:	601a      	str	r2, [r3, #0]
 80014ec:	f7ff fae2 	bl	8000ab4 <HAL_GetTick>
 80014f0:	6138      	str	r0, [r7, #16]
 80014f2:	e00f      	b.n	8001514 <HAL_RCC_OscConfig+0x278>
 80014f4:	f7ff fade 	bl	8000ab4 <HAL_GetTick>
 80014f8:	4602      	mov	r2, r0
 80014fa:	693b      	ldr	r3, [r7, #16]
 80014fc:	1ad3      	subs	r3, r2, r3
 80014fe:	2b02      	cmp	r3, #2
 8001500:	d908      	bls.n	8001514 <HAL_RCC_OscConfig+0x278>
 8001502:	2303      	movs	r3, #3
 8001504:	e140      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001506:	bf00      	nop
 8001508:	40021000 	.word	0x40021000
 800150c:	42420000 	.word	0x42420000
 8001510:	42420480 	.word	0x42420480
 8001514:	4b9e      	ldr	r3, [pc, #632]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001518:	f003 0302 	and.w	r3, r3, #2
 800151c:	2b00      	cmp	r3, #0
 800151e:	d1e9      	bne.n	80014f4 <HAL_RCC_OscConfig+0x258>
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	681b      	ldr	r3, [r3, #0]
 8001524:	f003 0304 	and.w	r3, r3, #4
 8001528:	2b00      	cmp	r3, #0
 800152a:	f000 80a6 	beq.w	800167a <HAL_RCC_OscConfig+0x3de>
 800152e:	2300      	movs	r3, #0
 8001530:	75fb      	strb	r3, [r7, #23]
 8001532:	4b97      	ldr	r3, [pc, #604]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001534:	69db      	ldr	r3, [r3, #28]
 8001536:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800153a:	2b00      	cmp	r3, #0
 800153c:	d10d      	bne.n	800155a <HAL_RCC_OscConfig+0x2be>
 800153e:	4b94      	ldr	r3, [pc, #592]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001540:	69db      	ldr	r3, [r3, #28]
 8001542:	4a93      	ldr	r2, [pc, #588]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001544:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001548:	61d3      	str	r3, [r2, #28]
 800154a:	4b91      	ldr	r3, [pc, #580]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 800154c:	69db      	ldr	r3, [r3, #28]
 800154e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001552:	60bb      	str	r3, [r7, #8]
 8001554:	68bb      	ldr	r3, [r7, #8]
 8001556:	2301      	movs	r3, #1
 8001558:	75fb      	strb	r3, [r7, #23]
 800155a:	4b8e      	ldr	r3, [pc, #568]	; (8001794 <HAL_RCC_OscConfig+0x4f8>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001562:	2b00      	cmp	r3, #0
 8001564:	d118      	bne.n	8001598 <HAL_RCC_OscConfig+0x2fc>
 8001566:	4b8b      	ldr	r3, [pc, #556]	; (8001794 <HAL_RCC_OscConfig+0x4f8>)
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	4a8a      	ldr	r2, [pc, #552]	; (8001794 <HAL_RCC_OscConfig+0x4f8>)
 800156c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001570:	6013      	str	r3, [r2, #0]
 8001572:	f7ff fa9f 	bl	8000ab4 <HAL_GetTick>
 8001576:	6138      	str	r0, [r7, #16]
 8001578:	e008      	b.n	800158c <HAL_RCC_OscConfig+0x2f0>
 800157a:	f7ff fa9b 	bl	8000ab4 <HAL_GetTick>
 800157e:	4602      	mov	r2, r0
 8001580:	693b      	ldr	r3, [r7, #16]
 8001582:	1ad3      	subs	r3, r2, r3
 8001584:	2b64      	cmp	r3, #100	; 0x64
 8001586:	d901      	bls.n	800158c <HAL_RCC_OscConfig+0x2f0>
 8001588:	2303      	movs	r3, #3
 800158a:	e0fd      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 800158c:	4b81      	ldr	r3, [pc, #516]	; (8001794 <HAL_RCC_OscConfig+0x4f8>)
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001594:	2b00      	cmp	r3, #0
 8001596:	d0f0      	beq.n	800157a <HAL_RCC_OscConfig+0x2de>
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	68db      	ldr	r3, [r3, #12]
 800159c:	2b01      	cmp	r3, #1
 800159e:	d106      	bne.n	80015ae <HAL_RCC_OscConfig+0x312>
 80015a0:	4b7b      	ldr	r3, [pc, #492]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015a2:	6a1b      	ldr	r3, [r3, #32]
 80015a4:	4a7a      	ldr	r2, [pc, #488]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015a6:	f043 0301 	orr.w	r3, r3, #1
 80015aa:	6213      	str	r3, [r2, #32]
 80015ac:	e02d      	b.n	800160a <HAL_RCC_OscConfig+0x36e>
 80015ae:	687b      	ldr	r3, [r7, #4]
 80015b0:	68db      	ldr	r3, [r3, #12]
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	d10c      	bne.n	80015d0 <HAL_RCC_OscConfig+0x334>
 80015b6:	4b76      	ldr	r3, [pc, #472]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015b8:	6a1b      	ldr	r3, [r3, #32]
 80015ba:	4a75      	ldr	r2, [pc, #468]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015bc:	f023 0301 	bic.w	r3, r3, #1
 80015c0:	6213      	str	r3, [r2, #32]
 80015c2:	4b73      	ldr	r3, [pc, #460]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015c4:	6a1b      	ldr	r3, [r3, #32]
 80015c6:	4a72      	ldr	r2, [pc, #456]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015c8:	f023 0304 	bic.w	r3, r3, #4
 80015cc:	6213      	str	r3, [r2, #32]
 80015ce:	e01c      	b.n	800160a <HAL_RCC_OscConfig+0x36e>
 80015d0:	687b      	ldr	r3, [r7, #4]
 80015d2:	68db      	ldr	r3, [r3, #12]
 80015d4:	2b05      	cmp	r3, #5
 80015d6:	d10c      	bne.n	80015f2 <HAL_RCC_OscConfig+0x356>
 80015d8:	4b6d      	ldr	r3, [pc, #436]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015da:	6a1b      	ldr	r3, [r3, #32]
 80015dc:	4a6c      	ldr	r2, [pc, #432]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015de:	f043 0304 	orr.w	r3, r3, #4
 80015e2:	6213      	str	r3, [r2, #32]
 80015e4:	4b6a      	ldr	r3, [pc, #424]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015e6:	6a1b      	ldr	r3, [r3, #32]
 80015e8:	4a69      	ldr	r2, [pc, #420]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015ea:	f043 0301 	orr.w	r3, r3, #1
 80015ee:	6213      	str	r3, [r2, #32]
 80015f0:	e00b      	b.n	800160a <HAL_RCC_OscConfig+0x36e>
 80015f2:	4b67      	ldr	r3, [pc, #412]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015f4:	6a1b      	ldr	r3, [r3, #32]
 80015f6:	4a66      	ldr	r2, [pc, #408]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80015f8:	f023 0301 	bic.w	r3, r3, #1
 80015fc:	6213      	str	r3, [r2, #32]
 80015fe:	4b64      	ldr	r3, [pc, #400]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001600:	6a1b      	ldr	r3, [r3, #32]
 8001602:	4a63      	ldr	r2, [pc, #396]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001604:	f023 0304 	bic.w	r3, r3, #4
 8001608:	6213      	str	r3, [r2, #32]
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	68db      	ldr	r3, [r3, #12]
 800160e:	2b00      	cmp	r3, #0
 8001610:	d015      	beq.n	800163e <HAL_RCC_OscConfig+0x3a2>
 8001612:	f7ff fa4f 	bl	8000ab4 <HAL_GetTick>
 8001616:	6138      	str	r0, [r7, #16]
 8001618:	e00a      	b.n	8001630 <HAL_RCC_OscConfig+0x394>
 800161a:	f7ff fa4b 	bl	8000ab4 <HAL_GetTick>
 800161e:	4602      	mov	r2, r0
 8001620:	693b      	ldr	r3, [r7, #16]
 8001622:	1ad3      	subs	r3, r2, r3
 8001624:	f241 3288 	movw	r2, #5000	; 0x1388
 8001628:	4293      	cmp	r3, r2
 800162a:	d901      	bls.n	8001630 <HAL_RCC_OscConfig+0x394>
 800162c:	2303      	movs	r3, #3
 800162e:	e0ab      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001630:	4b57      	ldr	r3, [pc, #348]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001632:	6a1b      	ldr	r3, [r3, #32]
 8001634:	f003 0302 	and.w	r3, r3, #2
 8001638:	2b00      	cmp	r3, #0
 800163a:	d0ee      	beq.n	800161a <HAL_RCC_OscConfig+0x37e>
 800163c:	e014      	b.n	8001668 <HAL_RCC_OscConfig+0x3cc>
 800163e:	f7ff fa39 	bl	8000ab4 <HAL_GetTick>
 8001642:	6138      	str	r0, [r7, #16]
 8001644:	e00a      	b.n	800165c <HAL_RCC_OscConfig+0x3c0>
 8001646:	f7ff fa35 	bl	8000ab4 <HAL_GetTick>
 800164a:	4602      	mov	r2, r0
 800164c:	693b      	ldr	r3, [r7, #16]
 800164e:	1ad3      	subs	r3, r2, r3
 8001650:	f241 3288 	movw	r2, #5000	; 0x1388
 8001654:	4293      	cmp	r3, r2
 8001656:	d901      	bls.n	800165c <HAL_RCC_OscConfig+0x3c0>
 8001658:	2303      	movs	r3, #3
 800165a:	e095      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 800165c:	4b4c      	ldr	r3, [pc, #304]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 800165e:	6a1b      	ldr	r3, [r3, #32]
 8001660:	f003 0302 	and.w	r3, r3, #2
 8001664:	2b00      	cmp	r3, #0
 8001666:	d1ee      	bne.n	8001646 <HAL_RCC_OscConfig+0x3aa>
 8001668:	7dfb      	ldrb	r3, [r7, #23]
 800166a:	2b01      	cmp	r3, #1
 800166c:	d105      	bne.n	800167a <HAL_RCC_OscConfig+0x3de>
 800166e:	4b48      	ldr	r3, [pc, #288]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001670:	69db      	ldr	r3, [r3, #28]
 8001672:	4a47      	ldr	r2, [pc, #284]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001674:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001678:	61d3      	str	r3, [r2, #28]
 800167a:	687b      	ldr	r3, [r7, #4]
 800167c:	69db      	ldr	r3, [r3, #28]
 800167e:	2b00      	cmp	r3, #0
 8001680:	f000 8081 	beq.w	8001786 <HAL_RCC_OscConfig+0x4ea>
 8001684:	4b42      	ldr	r3, [pc, #264]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001686:	685b      	ldr	r3, [r3, #4]
 8001688:	f003 030c 	and.w	r3, r3, #12
 800168c:	2b08      	cmp	r3, #8
 800168e:	d061      	beq.n	8001754 <HAL_RCC_OscConfig+0x4b8>
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	69db      	ldr	r3, [r3, #28]
 8001694:	2b02      	cmp	r3, #2
 8001696:	d146      	bne.n	8001726 <HAL_RCC_OscConfig+0x48a>
 8001698:	4b3f      	ldr	r3, [pc, #252]	; (8001798 <HAL_RCC_OscConfig+0x4fc>)
 800169a:	2200      	movs	r2, #0
 800169c:	601a      	str	r2, [r3, #0]
 800169e:	f7ff fa09 	bl	8000ab4 <HAL_GetTick>
 80016a2:	6138      	str	r0, [r7, #16]
 80016a4:	e008      	b.n	80016b8 <HAL_RCC_OscConfig+0x41c>
 80016a6:	f7ff fa05 	bl	8000ab4 <HAL_GetTick>
 80016aa:	4602      	mov	r2, r0
 80016ac:	693b      	ldr	r3, [r7, #16]
 80016ae:	1ad3      	subs	r3, r2, r3
 80016b0:	2b02      	cmp	r3, #2
 80016b2:	d901      	bls.n	80016b8 <HAL_RCC_OscConfig+0x41c>
 80016b4:	2303      	movs	r3, #3
 80016b6:	e067      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 80016b8:	4b35      	ldr	r3, [pc, #212]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80016ba:	681b      	ldr	r3, [r3, #0]
 80016bc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d1f0      	bne.n	80016a6 <HAL_RCC_OscConfig+0x40a>
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	6a1b      	ldr	r3, [r3, #32]
 80016c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80016cc:	d108      	bne.n	80016e0 <HAL_RCC_OscConfig+0x444>
 80016ce:	4b30      	ldr	r3, [pc, #192]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80016d0:	685b      	ldr	r3, [r3, #4]
 80016d2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	689b      	ldr	r3, [r3, #8]
 80016da:	492d      	ldr	r1, [pc, #180]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80016dc:	4313      	orrs	r3, r2
 80016de:	604b      	str	r3, [r1, #4]
 80016e0:	4b2b      	ldr	r3, [pc, #172]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80016e2:	685b      	ldr	r3, [r3, #4]
 80016e4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	6a19      	ldr	r1, [r3, #32]
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80016f0:	430b      	orrs	r3, r1
 80016f2:	4927      	ldr	r1, [pc, #156]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 80016f4:	4313      	orrs	r3, r2
 80016f6:	604b      	str	r3, [r1, #4]
 80016f8:	4b27      	ldr	r3, [pc, #156]	; (8001798 <HAL_RCC_OscConfig+0x4fc>)
 80016fa:	2201      	movs	r2, #1
 80016fc:	601a      	str	r2, [r3, #0]
 80016fe:	f7ff f9d9 	bl	8000ab4 <HAL_GetTick>
 8001702:	6138      	str	r0, [r7, #16]
 8001704:	e008      	b.n	8001718 <HAL_RCC_OscConfig+0x47c>
 8001706:	f7ff f9d5 	bl	8000ab4 <HAL_GetTick>
 800170a:	4602      	mov	r2, r0
 800170c:	693b      	ldr	r3, [r7, #16]
 800170e:	1ad3      	subs	r3, r2, r3
 8001710:	2b02      	cmp	r3, #2
 8001712:	d901      	bls.n	8001718 <HAL_RCC_OscConfig+0x47c>
 8001714:	2303      	movs	r3, #3
 8001716:	e037      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001718:	4b1d      	ldr	r3, [pc, #116]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001720:	2b00      	cmp	r3, #0
 8001722:	d0f0      	beq.n	8001706 <HAL_RCC_OscConfig+0x46a>
 8001724:	e02f      	b.n	8001786 <HAL_RCC_OscConfig+0x4ea>
 8001726:	4b1c      	ldr	r3, [pc, #112]	; (8001798 <HAL_RCC_OscConfig+0x4fc>)
 8001728:	2200      	movs	r2, #0
 800172a:	601a      	str	r2, [r3, #0]
 800172c:	f7ff f9c2 	bl	8000ab4 <HAL_GetTick>
 8001730:	6138      	str	r0, [r7, #16]
 8001732:	e008      	b.n	8001746 <HAL_RCC_OscConfig+0x4aa>
 8001734:	f7ff f9be 	bl	8000ab4 <HAL_GetTick>
 8001738:	4602      	mov	r2, r0
 800173a:	693b      	ldr	r3, [r7, #16]
 800173c:	1ad3      	subs	r3, r2, r3
 800173e:	2b02      	cmp	r3, #2
 8001740:	d901      	bls.n	8001746 <HAL_RCC_OscConfig+0x4aa>
 8001742:	2303      	movs	r3, #3
 8001744:	e020      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001746:	4b12      	ldr	r3, [pc, #72]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001748:	681b      	ldr	r3, [r3, #0]
 800174a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800174e:	2b00      	cmp	r3, #0
 8001750:	d1f0      	bne.n	8001734 <HAL_RCC_OscConfig+0x498>
 8001752:	e018      	b.n	8001786 <HAL_RCC_OscConfig+0x4ea>
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	69db      	ldr	r3, [r3, #28]
 8001758:	2b01      	cmp	r3, #1
 800175a:	d101      	bne.n	8001760 <HAL_RCC_OscConfig+0x4c4>
 800175c:	2301      	movs	r3, #1
 800175e:	e013      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001760:	4b0b      	ldr	r3, [pc, #44]	; (8001790 <HAL_RCC_OscConfig+0x4f4>)
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	60fb      	str	r3, [r7, #12]
 8001766:	68fb      	ldr	r3, [r7, #12]
 8001768:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	6a1b      	ldr	r3, [r3, #32]
 8001770:	429a      	cmp	r2, r3
 8001772:	d106      	bne.n	8001782 <HAL_RCC_OscConfig+0x4e6>
 8001774:	68fb      	ldr	r3, [r7, #12]
 8001776:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800177e:	429a      	cmp	r2, r3
 8001780:	d001      	beq.n	8001786 <HAL_RCC_OscConfig+0x4ea>
 8001782:	2301      	movs	r3, #1
 8001784:	e000      	b.n	8001788 <HAL_RCC_OscConfig+0x4ec>
 8001786:	2300      	movs	r3, #0
 8001788:	4618      	mov	r0, r3
 800178a:	3718      	adds	r7, #24
 800178c:	46bd      	mov	sp, r7
 800178e:	bd80      	pop	{r7, pc}
 8001790:	40021000 	.word	0x40021000
 8001794:	40007000 	.word	0x40007000
 8001798:	42420060 	.word	0x42420060

0800179c <HAL_RCC_ClockConfig>:
 800179c:	b580      	push	{r7, lr}
 800179e:	b084      	sub	sp, #16
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	6078      	str	r0, [r7, #4]
 80017a4:	6039      	str	r1, [r7, #0]
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	2b00      	cmp	r3, #0
 80017aa:	d101      	bne.n	80017b0 <HAL_RCC_ClockConfig+0x14>
 80017ac:	2301      	movs	r3, #1
 80017ae:	e0d0      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 80017b0:	4b6a      	ldr	r3, [pc, #424]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	f003 0307 	and.w	r3, r3, #7
 80017b8:	683a      	ldr	r2, [r7, #0]
 80017ba:	429a      	cmp	r2, r3
 80017bc:	d910      	bls.n	80017e0 <HAL_RCC_ClockConfig+0x44>
 80017be:	4b67      	ldr	r3, [pc, #412]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80017c0:	681b      	ldr	r3, [r3, #0]
 80017c2:	f023 0207 	bic.w	r2, r3, #7
 80017c6:	4965      	ldr	r1, [pc, #404]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80017c8:	683b      	ldr	r3, [r7, #0]
 80017ca:	4313      	orrs	r3, r2
 80017cc:	600b      	str	r3, [r1, #0]
 80017ce:	4b63      	ldr	r3, [pc, #396]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	f003 0307 	and.w	r3, r3, #7
 80017d6:	683a      	ldr	r2, [r7, #0]
 80017d8:	429a      	cmp	r2, r3
 80017da:	d001      	beq.n	80017e0 <HAL_RCC_ClockConfig+0x44>
 80017dc:	2301      	movs	r3, #1
 80017de:	e0b8      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	f003 0302 	and.w	r3, r3, #2
 80017e8:	2b00      	cmp	r3, #0
 80017ea:	d020      	beq.n	800182e <HAL_RCC_ClockConfig+0x92>
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	f003 0304 	and.w	r3, r3, #4
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d005      	beq.n	8001804 <HAL_RCC_ClockConfig+0x68>
 80017f8:	4b59      	ldr	r3, [pc, #356]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 80017fa:	685b      	ldr	r3, [r3, #4]
 80017fc:	4a58      	ldr	r2, [pc, #352]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 80017fe:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001802:	6053      	str	r3, [r2, #4]
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	f003 0308 	and.w	r3, r3, #8
 800180c:	2b00      	cmp	r3, #0
 800180e:	d005      	beq.n	800181c <HAL_RCC_ClockConfig+0x80>
 8001810:	4b53      	ldr	r3, [pc, #332]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001812:	685b      	ldr	r3, [r3, #4]
 8001814:	4a52      	ldr	r2, [pc, #328]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001816:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800181a:	6053      	str	r3, [r2, #4]
 800181c:	4b50      	ldr	r3, [pc, #320]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 800181e:	685b      	ldr	r3, [r3, #4]
 8001820:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	689b      	ldr	r3, [r3, #8]
 8001828:	494d      	ldr	r1, [pc, #308]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 800182a:	4313      	orrs	r3, r2
 800182c:	604b      	str	r3, [r1, #4]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	f003 0301 	and.w	r3, r3, #1
 8001836:	2b00      	cmp	r3, #0
 8001838:	d040      	beq.n	80018bc <HAL_RCC_ClockConfig+0x120>
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	685b      	ldr	r3, [r3, #4]
 800183e:	2b01      	cmp	r3, #1
 8001840:	d107      	bne.n	8001852 <HAL_RCC_ClockConfig+0xb6>
 8001842:	4b47      	ldr	r3, [pc, #284]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800184a:	2b00      	cmp	r3, #0
 800184c:	d115      	bne.n	800187a <HAL_RCC_ClockConfig+0xde>
 800184e:	2301      	movs	r3, #1
 8001850:	e07f      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	685b      	ldr	r3, [r3, #4]
 8001856:	2b02      	cmp	r3, #2
 8001858:	d107      	bne.n	800186a <HAL_RCC_ClockConfig+0xce>
 800185a:	4b41      	ldr	r3, [pc, #260]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001862:	2b00      	cmp	r3, #0
 8001864:	d109      	bne.n	800187a <HAL_RCC_ClockConfig+0xde>
 8001866:	2301      	movs	r3, #1
 8001868:	e073      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 800186a:	4b3d      	ldr	r3, [pc, #244]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	f003 0302 	and.w	r3, r3, #2
 8001872:	2b00      	cmp	r3, #0
 8001874:	d101      	bne.n	800187a <HAL_RCC_ClockConfig+0xde>
 8001876:	2301      	movs	r3, #1
 8001878:	e06b      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 800187a:	4b39      	ldr	r3, [pc, #228]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 800187c:	685b      	ldr	r3, [r3, #4]
 800187e:	f023 0203 	bic.w	r2, r3, #3
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	4936      	ldr	r1, [pc, #216]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001888:	4313      	orrs	r3, r2
 800188a:	604b      	str	r3, [r1, #4]
 800188c:	f7ff f912 	bl	8000ab4 <HAL_GetTick>
 8001890:	60f8      	str	r0, [r7, #12]
 8001892:	e00a      	b.n	80018aa <HAL_RCC_ClockConfig+0x10e>
 8001894:	f7ff f90e 	bl	8000ab4 <HAL_GetTick>
 8001898:	4602      	mov	r2, r0
 800189a:	68fb      	ldr	r3, [r7, #12]
 800189c:	1ad3      	subs	r3, r2, r3
 800189e:	f241 3288 	movw	r2, #5000	; 0x1388
 80018a2:	4293      	cmp	r3, r2
 80018a4:	d901      	bls.n	80018aa <HAL_RCC_ClockConfig+0x10e>
 80018a6:	2303      	movs	r3, #3
 80018a8:	e053      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 80018aa:	4b2d      	ldr	r3, [pc, #180]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 80018ac:	685b      	ldr	r3, [r3, #4]
 80018ae:	f003 020c 	and.w	r2, r3, #12
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	685b      	ldr	r3, [r3, #4]
 80018b6:	009b      	lsls	r3, r3, #2
 80018b8:	429a      	cmp	r2, r3
 80018ba:	d1eb      	bne.n	8001894 <HAL_RCC_ClockConfig+0xf8>
 80018bc:	4b27      	ldr	r3, [pc, #156]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	f003 0307 	and.w	r3, r3, #7
 80018c4:	683a      	ldr	r2, [r7, #0]
 80018c6:	429a      	cmp	r2, r3
 80018c8:	d210      	bcs.n	80018ec <HAL_RCC_ClockConfig+0x150>
 80018ca:	4b24      	ldr	r3, [pc, #144]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	f023 0207 	bic.w	r2, r3, #7
 80018d2:	4922      	ldr	r1, [pc, #136]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80018d4:	683b      	ldr	r3, [r7, #0]
 80018d6:	4313      	orrs	r3, r2
 80018d8:	600b      	str	r3, [r1, #0]
 80018da:	4b20      	ldr	r3, [pc, #128]	; (800195c <HAL_RCC_ClockConfig+0x1c0>)
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	f003 0307 	and.w	r3, r3, #7
 80018e2:	683a      	ldr	r2, [r7, #0]
 80018e4:	429a      	cmp	r2, r3
 80018e6:	d001      	beq.n	80018ec <HAL_RCC_ClockConfig+0x150>
 80018e8:	2301      	movs	r3, #1
 80018ea:	e032      	b.n	8001952 <HAL_RCC_ClockConfig+0x1b6>
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	f003 0304 	and.w	r3, r3, #4
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d008      	beq.n	800190a <HAL_RCC_ClockConfig+0x16e>
 80018f8:	4b19      	ldr	r3, [pc, #100]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 80018fa:	685b      	ldr	r3, [r3, #4]
 80018fc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	68db      	ldr	r3, [r3, #12]
 8001904:	4916      	ldr	r1, [pc, #88]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001906:	4313      	orrs	r3, r2
 8001908:	604b      	str	r3, [r1, #4]
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f003 0308 	and.w	r3, r3, #8
 8001912:	2b00      	cmp	r3, #0
 8001914:	d009      	beq.n	800192a <HAL_RCC_ClockConfig+0x18e>
 8001916:	4b12      	ldr	r3, [pc, #72]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001918:	685b      	ldr	r3, [r3, #4]
 800191a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	691b      	ldr	r3, [r3, #16]
 8001922:	00db      	lsls	r3, r3, #3
 8001924:	490e      	ldr	r1, [pc, #56]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001926:	4313      	orrs	r3, r2
 8001928:	604b      	str	r3, [r1, #4]
 800192a:	f000 f821 	bl	8001970 <HAL_RCC_GetSysClockFreq>
 800192e:	4601      	mov	r1, r0
 8001930:	4b0b      	ldr	r3, [pc, #44]	; (8001960 <HAL_RCC_ClockConfig+0x1c4>)
 8001932:	685b      	ldr	r3, [r3, #4]
 8001934:	091b      	lsrs	r3, r3, #4
 8001936:	f003 030f 	and.w	r3, r3, #15
 800193a:	4a0a      	ldr	r2, [pc, #40]	; (8001964 <HAL_RCC_ClockConfig+0x1c8>)
 800193c:	5cd3      	ldrb	r3, [r2, r3]
 800193e:	fa21 f303 	lsr.w	r3, r1, r3
 8001942:	4a09      	ldr	r2, [pc, #36]	; (8001968 <HAL_RCC_ClockConfig+0x1cc>)
 8001944:	6013      	str	r3, [r2, #0]
 8001946:	4b09      	ldr	r3, [pc, #36]	; (800196c <HAL_RCC_ClockConfig+0x1d0>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	4618      	mov	r0, r3
 800194c:	f7ff f870 	bl	8000a30 <HAL_InitTick>
 8001950:	2300      	movs	r3, #0
 8001952:	4618      	mov	r0, r3
 8001954:	3710      	adds	r7, #16
 8001956:	46bd      	mov	sp, r7
 8001958:	bd80      	pop	{r7, pc}
 800195a:	bf00      	nop
 800195c:	40022000 	.word	0x40022000
 8001960:	40021000 	.word	0x40021000
 8001964:	08030564 	.word	0x08030564
 8001968:	20000010 	.word	0x20000010
 800196c:	20000000 	.word	0x20000000

08001970 <HAL_RCC_GetSysClockFreq>:
 8001970:	b490      	push	{r4, r7}
 8001972:	b08a      	sub	sp, #40	; 0x28
 8001974:	af00      	add	r7, sp, #0
 8001976:	4b2a      	ldr	r3, [pc, #168]	; (8001a20 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001978:	1d3c      	adds	r4, r7, #4
 800197a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800197c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001980:	4b28      	ldr	r3, [pc, #160]	; (8001a24 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001982:	881b      	ldrh	r3, [r3, #0]
 8001984:	803b      	strh	r3, [r7, #0]
 8001986:	2300      	movs	r3, #0
 8001988:	61fb      	str	r3, [r7, #28]
 800198a:	2300      	movs	r3, #0
 800198c:	61bb      	str	r3, [r7, #24]
 800198e:	2300      	movs	r3, #0
 8001990:	627b      	str	r3, [r7, #36]	; 0x24
 8001992:	2300      	movs	r3, #0
 8001994:	617b      	str	r3, [r7, #20]
 8001996:	2300      	movs	r3, #0
 8001998:	623b      	str	r3, [r7, #32]
 800199a:	4b23      	ldr	r3, [pc, #140]	; (8001a28 <HAL_RCC_GetSysClockFreq+0xb8>)
 800199c:	685b      	ldr	r3, [r3, #4]
 800199e:	61fb      	str	r3, [r7, #28]
 80019a0:	69fb      	ldr	r3, [r7, #28]
 80019a2:	f003 030c 	and.w	r3, r3, #12
 80019a6:	2b04      	cmp	r3, #4
 80019a8:	d002      	beq.n	80019b0 <HAL_RCC_GetSysClockFreq+0x40>
 80019aa:	2b08      	cmp	r3, #8
 80019ac:	d003      	beq.n	80019b6 <HAL_RCC_GetSysClockFreq+0x46>
 80019ae:	e02d      	b.n	8001a0c <HAL_RCC_GetSysClockFreq+0x9c>
 80019b0:	4b1e      	ldr	r3, [pc, #120]	; (8001a2c <HAL_RCC_GetSysClockFreq+0xbc>)
 80019b2:	623b      	str	r3, [r7, #32]
 80019b4:	e02d      	b.n	8001a12 <HAL_RCC_GetSysClockFreq+0xa2>
 80019b6:	69fb      	ldr	r3, [r7, #28]
 80019b8:	0c9b      	lsrs	r3, r3, #18
 80019ba:	f003 030f 	and.w	r3, r3, #15
 80019be:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80019c2:	4413      	add	r3, r2
 80019c4:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80019c8:	617b      	str	r3, [r7, #20]
 80019ca:	69fb      	ldr	r3, [r7, #28]
 80019cc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019d0:	2b00      	cmp	r3, #0
 80019d2:	d013      	beq.n	80019fc <HAL_RCC_GetSysClockFreq+0x8c>
 80019d4:	4b14      	ldr	r3, [pc, #80]	; (8001a28 <HAL_RCC_GetSysClockFreq+0xb8>)
 80019d6:	685b      	ldr	r3, [r3, #4]
 80019d8:	0c5b      	lsrs	r3, r3, #17
 80019da:	f003 0301 	and.w	r3, r3, #1
 80019de:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80019e2:	4413      	add	r3, r2
 80019e4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80019e8:	61bb      	str	r3, [r7, #24]
 80019ea:	697b      	ldr	r3, [r7, #20]
 80019ec:	4a0f      	ldr	r2, [pc, #60]	; (8001a2c <HAL_RCC_GetSysClockFreq+0xbc>)
 80019ee:	fb02 f203 	mul.w	r2, r2, r3
 80019f2:	69bb      	ldr	r3, [r7, #24]
 80019f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80019f8:	627b      	str	r3, [r7, #36]	; 0x24
 80019fa:	e004      	b.n	8001a06 <HAL_RCC_GetSysClockFreq+0x96>
 80019fc:	697b      	ldr	r3, [r7, #20]
 80019fe:	4a0c      	ldr	r2, [pc, #48]	; (8001a30 <HAL_RCC_GetSysClockFreq+0xc0>)
 8001a00:	fb02 f303 	mul.w	r3, r2, r3
 8001a04:	627b      	str	r3, [r7, #36]	; 0x24
 8001a06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a08:	623b      	str	r3, [r7, #32]
 8001a0a:	e002      	b.n	8001a12 <HAL_RCC_GetSysClockFreq+0xa2>
 8001a0c:	4b07      	ldr	r3, [pc, #28]	; (8001a2c <HAL_RCC_GetSysClockFreq+0xbc>)
 8001a0e:	623b      	str	r3, [r7, #32]
 8001a10:	bf00      	nop
 8001a12:	6a3b      	ldr	r3, [r7, #32]
 8001a14:	4618      	mov	r0, r3
 8001a16:	3728      	adds	r7, #40	; 0x28
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bc90      	pop	{r4, r7}
 8001a1c:	4770      	bx	lr
 8001a1e:	bf00      	nop
 8001a20:	0800955c 	.word	0x0800955c
 8001a24:	0800956c 	.word	0x0800956c
 8001a28:	40021000 	.word	0x40021000
 8001a2c:	007a1200 	.word	0x007a1200
 8001a30:	003d0900 	.word	0x003d0900

08001a34 <RCC_Delay>:
 8001a34:	b480      	push	{r7}
 8001a36:	b085      	sub	sp, #20
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	6078      	str	r0, [r7, #4]
 8001a3c:	4b0a      	ldr	r3, [pc, #40]	; (8001a68 <RCC_Delay+0x34>)
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	4a0a      	ldr	r2, [pc, #40]	; (8001a6c <RCC_Delay+0x38>)
 8001a42:	fba2 2303 	umull	r2, r3, r2, r3
 8001a46:	0a5b      	lsrs	r3, r3, #9
 8001a48:	687a      	ldr	r2, [r7, #4]
 8001a4a:	fb02 f303 	mul.w	r3, r2, r3
 8001a4e:	60fb      	str	r3, [r7, #12]
 8001a50:	bf00      	nop
 8001a52:	68fb      	ldr	r3, [r7, #12]
 8001a54:	1e5a      	subs	r2, r3, #1
 8001a56:	60fa      	str	r2, [r7, #12]
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d1f9      	bne.n	8001a50 <RCC_Delay+0x1c>
 8001a5c:	bf00      	nop
 8001a5e:	3714      	adds	r7, #20
 8001a60:	46bd      	mov	sp, r7
 8001a62:	bc80      	pop	{r7}
 8001a64:	4770      	bx	lr
 8001a66:	bf00      	nop
 8001a68:	20000010 	.word	0x20000010
 8001a6c:	10624dd3 	.word	0x10624dd3

08001a70 <HAL_UART_IRQHandler>:
 8001a70:	b580      	push	{r7, lr}
 8001a72:	b088      	sub	sp, #32
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	6078      	str	r0, [r7, #4]
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	681b      	ldr	r3, [r3, #0]
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	61fb      	str	r3, [r7, #28]
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	68db      	ldr	r3, [r3, #12]
 8001a86:	61bb      	str	r3, [r7, #24]
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	681b      	ldr	r3, [r3, #0]
 8001a8c:	695b      	ldr	r3, [r3, #20]
 8001a8e:	617b      	str	r3, [r7, #20]
 8001a90:	2300      	movs	r3, #0
 8001a92:	613b      	str	r3, [r7, #16]
 8001a94:	2300      	movs	r3, #0
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	69fb      	ldr	r3, [r7, #28]
 8001a9a:	f003 030f 	and.w	r3, r3, #15
 8001a9e:	613b      	str	r3, [r7, #16]
 8001aa0:	693b      	ldr	r3, [r7, #16]
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d10d      	bne.n	8001ac2 <HAL_UART_IRQHandler+0x52>
 8001aa6:	69fb      	ldr	r3, [r7, #28]
 8001aa8:	f003 0320 	and.w	r3, r3, #32
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d008      	beq.n	8001ac2 <HAL_UART_IRQHandler+0x52>
 8001ab0:	69bb      	ldr	r3, [r7, #24]
 8001ab2:	f003 0320 	and.w	r3, r3, #32
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d003      	beq.n	8001ac2 <HAL_UART_IRQHandler+0x52>
 8001aba:	6878      	ldr	r0, [r7, #4]
 8001abc:	f000 f984 	bl	8001dc8 <UART_Receive_IT>
 8001ac0:	e0cc      	b.n	8001c5c <HAL_UART_IRQHandler+0x1ec>
 8001ac2:	693b      	ldr	r3, [r7, #16]
 8001ac4:	2b00      	cmp	r3, #0
 8001ac6:	f000 80ab 	beq.w	8001c20 <HAL_UART_IRQHandler+0x1b0>
 8001aca:	697b      	ldr	r3, [r7, #20]
 8001acc:	f003 0301 	and.w	r3, r3, #1
 8001ad0:	2b00      	cmp	r3, #0
 8001ad2:	d105      	bne.n	8001ae0 <HAL_UART_IRQHandler+0x70>
 8001ad4:	69bb      	ldr	r3, [r7, #24]
 8001ad6:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	f000 80a0 	beq.w	8001c20 <HAL_UART_IRQHandler+0x1b0>
 8001ae0:	69fb      	ldr	r3, [r7, #28]
 8001ae2:	f003 0301 	and.w	r3, r3, #1
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	d00a      	beq.n	8001b00 <HAL_UART_IRQHandler+0x90>
 8001aea:	69bb      	ldr	r3, [r7, #24]
 8001aec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d005      	beq.n	8001b00 <HAL_UART_IRQHandler+0x90>
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001af8:	f043 0201 	orr.w	r2, r3, #1
 8001afc:	687b      	ldr	r3, [r7, #4]
 8001afe:	63da      	str	r2, [r3, #60]	; 0x3c
 8001b00:	69fb      	ldr	r3, [r7, #28]
 8001b02:	f003 0304 	and.w	r3, r3, #4
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d00a      	beq.n	8001b20 <HAL_UART_IRQHandler+0xb0>
 8001b0a:	697b      	ldr	r3, [r7, #20]
 8001b0c:	f003 0301 	and.w	r3, r3, #1
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d005      	beq.n	8001b20 <HAL_UART_IRQHandler+0xb0>
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001b18:	f043 0202 	orr.w	r2, r3, #2
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	63da      	str	r2, [r3, #60]	; 0x3c
 8001b20:	69fb      	ldr	r3, [r7, #28]
 8001b22:	f003 0302 	and.w	r3, r3, #2
 8001b26:	2b00      	cmp	r3, #0
 8001b28:	d00a      	beq.n	8001b40 <HAL_UART_IRQHandler+0xd0>
 8001b2a:	697b      	ldr	r3, [r7, #20]
 8001b2c:	f003 0301 	and.w	r3, r3, #1
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	d005      	beq.n	8001b40 <HAL_UART_IRQHandler+0xd0>
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001b38:	f043 0204 	orr.w	r2, r3, #4
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	63da      	str	r2, [r3, #60]	; 0x3c
 8001b40:	69fb      	ldr	r3, [r7, #28]
 8001b42:	f003 0308 	and.w	r3, r3, #8
 8001b46:	2b00      	cmp	r3, #0
 8001b48:	d00a      	beq.n	8001b60 <HAL_UART_IRQHandler+0xf0>
 8001b4a:	697b      	ldr	r3, [r7, #20]
 8001b4c:	f003 0301 	and.w	r3, r3, #1
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d005      	beq.n	8001b60 <HAL_UART_IRQHandler+0xf0>
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001b58:	f043 0208 	orr.w	r2, r3, #8
 8001b5c:	687b      	ldr	r3, [r7, #4]
 8001b5e:	63da      	str	r2, [r3, #60]	; 0x3c
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001b64:	2b00      	cmp	r3, #0
 8001b66:	d078      	beq.n	8001c5a <HAL_UART_IRQHandler+0x1ea>
 8001b68:	69fb      	ldr	r3, [r7, #28]
 8001b6a:	f003 0320 	and.w	r3, r3, #32
 8001b6e:	2b00      	cmp	r3, #0
 8001b70:	d007      	beq.n	8001b82 <HAL_UART_IRQHandler+0x112>
 8001b72:	69bb      	ldr	r3, [r7, #24]
 8001b74:	f003 0320 	and.w	r3, r3, #32
 8001b78:	2b00      	cmp	r3, #0
 8001b7a:	d002      	beq.n	8001b82 <HAL_UART_IRQHandler+0x112>
 8001b7c:	6878      	ldr	r0, [r7, #4]
 8001b7e:	f000 f923 	bl	8001dc8 <UART_Receive_IT>
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	695b      	ldr	r3, [r3, #20]
 8001b88:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	bf14      	ite	ne
 8001b90:	2301      	movne	r3, #1
 8001b92:	2300      	moveq	r3, #0
 8001b94:	b2db      	uxtb	r3, r3
 8001b96:	60fb      	str	r3, [r7, #12]
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001b9c:	f003 0308 	and.w	r3, r3, #8
 8001ba0:	2b00      	cmp	r3, #0
 8001ba2:	d102      	bne.n	8001baa <HAL_UART_IRQHandler+0x13a>
 8001ba4:	68fb      	ldr	r3, [r7, #12]
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d031      	beq.n	8001c0e <HAL_UART_IRQHandler+0x19e>
 8001baa:	6878      	ldr	r0, [r7, #4]
 8001bac:	f000 f86e 	bl	8001c8c <UART_EndRxTransfer>
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	681b      	ldr	r3, [r3, #0]
 8001bb4:	695b      	ldr	r3, [r3, #20]
 8001bb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001bba:	2b00      	cmp	r3, #0
 8001bbc:	d023      	beq.n	8001c06 <HAL_UART_IRQHandler+0x196>
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	681b      	ldr	r3, [r3, #0]
 8001bc2:	695a      	ldr	r2, [r3, #20]
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001bcc:	615a      	str	r2, [r3, #20]
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001bd2:	2b00      	cmp	r3, #0
 8001bd4:	d013      	beq.n	8001bfe <HAL_UART_IRQHandler+0x18e>
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001bda:	4a22      	ldr	r2, [pc, #136]	; (8001c64 <HAL_UART_IRQHandler+0x1f4>)
 8001bdc:	635a      	str	r2, [r3, #52]	; 0x34
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001be2:	4618      	mov	r0, r3
 8001be4:	f7ff f8a0 	bl	8000d28 <HAL_DMA_Abort_IT>
 8001be8:	4603      	mov	r3, r0
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d016      	beq.n	8001c1c <HAL_UART_IRQHandler+0x1ac>
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001bf2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001bf4:	687a      	ldr	r2, [r7, #4]
 8001bf6:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8001bf8:	4610      	mov	r0, r2
 8001bfa:	4798      	blx	r3
 8001bfc:	e00e      	b.n	8001c1c <HAL_UART_IRQHandler+0x1ac>
 8001bfe:	6878      	ldr	r0, [r7, #4]
 8001c00:	f000 f83b 	bl	8001c7a <HAL_UART_ErrorCallback>
 8001c04:	e00a      	b.n	8001c1c <HAL_UART_IRQHandler+0x1ac>
 8001c06:	6878      	ldr	r0, [r7, #4]
 8001c08:	f000 f837 	bl	8001c7a <HAL_UART_ErrorCallback>
 8001c0c:	e006      	b.n	8001c1c <HAL_UART_IRQHandler+0x1ac>
 8001c0e:	6878      	ldr	r0, [r7, #4]
 8001c10:	f000 f833 	bl	8001c7a <HAL_UART_ErrorCallback>
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	2200      	movs	r2, #0
 8001c18:	63da      	str	r2, [r3, #60]	; 0x3c
 8001c1a:	e01e      	b.n	8001c5a <HAL_UART_IRQHandler+0x1ea>
 8001c1c:	bf00      	nop
 8001c1e:	e01c      	b.n	8001c5a <HAL_UART_IRQHandler+0x1ea>
 8001c20:	69fb      	ldr	r3, [r7, #28]
 8001c22:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001c26:	2b00      	cmp	r3, #0
 8001c28:	d008      	beq.n	8001c3c <HAL_UART_IRQHandler+0x1cc>
 8001c2a:	69bb      	ldr	r3, [r7, #24]
 8001c2c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001c30:	2b00      	cmp	r3, #0
 8001c32:	d003      	beq.n	8001c3c <HAL_UART_IRQHandler+0x1cc>
 8001c34:	6878      	ldr	r0, [r7, #4]
 8001c36:	f000 f85a 	bl	8001cee <UART_Transmit_IT>
 8001c3a:	e00f      	b.n	8001c5c <HAL_UART_IRQHandler+0x1ec>
 8001c3c:	69fb      	ldr	r3, [r7, #28]
 8001c3e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d00a      	beq.n	8001c5c <HAL_UART_IRQHandler+0x1ec>
 8001c46:	69bb      	ldr	r3, [r7, #24]
 8001c48:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c4c:	2b00      	cmp	r3, #0
 8001c4e:	d005      	beq.n	8001c5c <HAL_UART_IRQHandler+0x1ec>
 8001c50:	6878      	ldr	r0, [r7, #4]
 8001c52:	f000 f8a1 	bl	8001d98 <UART_EndTransmit_IT>
 8001c56:	bf00      	nop
 8001c58:	e000      	b.n	8001c5c <HAL_UART_IRQHandler+0x1ec>
 8001c5a:	bf00      	nop
 8001c5c:	3720      	adds	r7, #32
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bd80      	pop	{r7, pc}
 8001c62:	bf00      	nop
 8001c64:	08001cc7 	.word	0x08001cc7

08001c68 <HAL_UART_TxCpltCallback>:
 8001c68:	b480      	push	{r7}
 8001c6a:	b083      	sub	sp, #12
 8001c6c:	af00      	add	r7, sp, #0
 8001c6e:	6078      	str	r0, [r7, #4]
 8001c70:	bf00      	nop
 8001c72:	370c      	adds	r7, #12
 8001c74:	46bd      	mov	sp, r7
 8001c76:	bc80      	pop	{r7}
 8001c78:	4770      	bx	lr

08001c7a <HAL_UART_ErrorCallback>:
 8001c7a:	b480      	push	{r7}
 8001c7c:	b083      	sub	sp, #12
 8001c7e:	af00      	add	r7, sp, #0
 8001c80:	6078      	str	r0, [r7, #4]
 8001c82:	bf00      	nop
 8001c84:	370c      	adds	r7, #12
 8001c86:	46bd      	mov	sp, r7
 8001c88:	bc80      	pop	{r7}
 8001c8a:	4770      	bx	lr

08001c8c <UART_EndRxTransfer>:
 8001c8c:	b480      	push	{r7}
 8001c8e:	b083      	sub	sp, #12
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	6078      	str	r0, [r7, #4]
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	68da      	ldr	r2, [r3, #12]
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8001ca2:	60da      	str	r2, [r3, #12]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	695a      	ldr	r2, [r3, #20]
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	f022 0201 	bic.w	r2, r2, #1
 8001cb2:	615a      	str	r2, [r3, #20]
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	2220      	movs	r2, #32
 8001cb8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8001cbc:	bf00      	nop
 8001cbe:	370c      	adds	r7, #12
 8001cc0:	46bd      	mov	sp, r7
 8001cc2:	bc80      	pop	{r7}
 8001cc4:	4770      	bx	lr

08001cc6 <UART_DMAAbortOnError>:
 8001cc6:	b580      	push	{r7, lr}
 8001cc8:	b084      	sub	sp, #16
 8001cca:	af00      	add	r7, sp, #0
 8001ccc:	6078      	str	r0, [r7, #4]
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cd2:	60fb      	str	r3, [r7, #12]
 8001cd4:	68fb      	ldr	r3, [r7, #12]
 8001cd6:	2200      	movs	r2, #0
 8001cd8:	85da      	strh	r2, [r3, #46]	; 0x2e
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	2200      	movs	r2, #0
 8001cde:	84da      	strh	r2, [r3, #38]	; 0x26
 8001ce0:	68f8      	ldr	r0, [r7, #12]
 8001ce2:	f7ff ffca 	bl	8001c7a <HAL_UART_ErrorCallback>
 8001ce6:	bf00      	nop
 8001ce8:	3710      	adds	r7, #16
 8001cea:	46bd      	mov	sp, r7
 8001cec:	bd80      	pop	{r7, pc}

08001cee <UART_Transmit_IT>:
 8001cee:	b480      	push	{r7}
 8001cf0:	b085      	sub	sp, #20
 8001cf2:	af00      	add	r7, sp, #0
 8001cf4:	6078      	str	r0, [r7, #4]
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8001cfc:	b2db      	uxtb	r3, r3
 8001cfe:	2b21      	cmp	r3, #33	; 0x21
 8001d00:	d144      	bne.n	8001d8c <UART_Transmit_IT+0x9e>
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	689b      	ldr	r3, [r3, #8]
 8001d06:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001d0a:	d11a      	bne.n	8001d42 <UART_Transmit_IT+0x54>
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	6a1b      	ldr	r3, [r3, #32]
 8001d10:	60fb      	str	r3, [r7, #12]
 8001d12:	68fb      	ldr	r3, [r7, #12]
 8001d14:	881b      	ldrh	r3, [r3, #0]
 8001d16:	461a      	mov	r2, r3
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001d20:	605a      	str	r2, [r3, #4]
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	691b      	ldr	r3, [r3, #16]
 8001d26:	2b00      	cmp	r3, #0
 8001d28:	d105      	bne.n	8001d36 <UART_Transmit_IT+0x48>
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	6a1b      	ldr	r3, [r3, #32]
 8001d2e:	1c9a      	adds	r2, r3, #2
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	621a      	str	r2, [r3, #32]
 8001d34:	e00e      	b.n	8001d54 <UART_Transmit_IT+0x66>
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	6a1b      	ldr	r3, [r3, #32]
 8001d3a:	1c5a      	adds	r2, r3, #1
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	621a      	str	r2, [r3, #32]
 8001d40:	e008      	b.n	8001d54 <UART_Transmit_IT+0x66>
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	6a1b      	ldr	r3, [r3, #32]
 8001d46:	1c59      	adds	r1, r3, #1
 8001d48:	687a      	ldr	r2, [r7, #4]
 8001d4a:	6211      	str	r1, [r2, #32]
 8001d4c:	781a      	ldrb	r2, [r3, #0]
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	605a      	str	r2, [r3, #4]
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001d58:	b29b      	uxth	r3, r3
 8001d5a:	3b01      	subs	r3, #1
 8001d5c:	b29b      	uxth	r3, r3
 8001d5e:	687a      	ldr	r2, [r7, #4]
 8001d60:	4619      	mov	r1, r3
 8001d62:	84d1      	strh	r1, [r2, #38]	; 0x26
 8001d64:	2b00      	cmp	r3, #0
 8001d66:	d10f      	bne.n	8001d88 <UART_Transmit_IT+0x9a>
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	68da      	ldr	r2, [r3, #12]
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	681b      	ldr	r3, [r3, #0]
 8001d72:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001d76:	60da      	str	r2, [r3, #12]
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	68da      	ldr	r2, [r3, #12]
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	681b      	ldr	r3, [r3, #0]
 8001d82:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d86:	60da      	str	r2, [r3, #12]
 8001d88:	2300      	movs	r3, #0
 8001d8a:	e000      	b.n	8001d8e <UART_Transmit_IT+0xa0>
 8001d8c:	2302      	movs	r3, #2
 8001d8e:	4618      	mov	r0, r3
 8001d90:	3714      	adds	r7, #20
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bc80      	pop	{r7}
 8001d96:	4770      	bx	lr

08001d98 <UART_EndTransmit_IT>:
 8001d98:	b580      	push	{r7, lr}
 8001d9a:	b082      	sub	sp, #8
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	68da      	ldr	r2, [r3, #12]
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8001dae:	60da      	str	r2, [r3, #12]
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	2220      	movs	r2, #32
 8001db4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8001db8:	6878      	ldr	r0, [r7, #4]
 8001dba:	f7ff ff55 	bl	8001c68 <HAL_UART_TxCpltCallback>
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	4618      	mov	r0, r3
 8001dc2:	3708      	adds	r7, #8
 8001dc4:	46bd      	mov	sp, r7
 8001dc6:	bd80      	pop	{r7, pc}

08001dc8 <UART_Receive_IT>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b084      	sub	sp, #16
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	6078      	str	r0, [r7, #4]
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8001dd6:	b2db      	uxtb	r3, r3
 8001dd8:	2b22      	cmp	r3, #34	; 0x22
 8001dda:	d171      	bne.n	8001ec0 <UART_Receive_IT+0xf8>
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	689b      	ldr	r3, [r3, #8]
 8001de0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001de4:	d123      	bne.n	8001e2e <UART_Receive_IT+0x66>
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001dea:	60fb      	str	r3, [r7, #12]
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	691b      	ldr	r3, [r3, #16]
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	d10e      	bne.n	8001e12 <UART_Receive_IT+0x4a>
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	685b      	ldr	r3, [r3, #4]
 8001dfa:	b29b      	uxth	r3, r3
 8001dfc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001e00:	b29a      	uxth	r2, r3
 8001e02:	68fb      	ldr	r3, [r7, #12]
 8001e04:	801a      	strh	r2, [r3, #0]
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e0a:	1c9a      	adds	r2, r3, #2
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	629a      	str	r2, [r3, #40]	; 0x28
 8001e10:	e029      	b.n	8001e66 <UART_Receive_IT+0x9e>
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	685b      	ldr	r3, [r3, #4]
 8001e18:	b29b      	uxth	r3, r3
 8001e1a:	b2db      	uxtb	r3, r3
 8001e1c:	b29a      	uxth	r2, r3
 8001e1e:	68fb      	ldr	r3, [r7, #12]
 8001e20:	801a      	strh	r2, [r3, #0]
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e26:	1c5a      	adds	r2, r3, #1
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	629a      	str	r2, [r3, #40]	; 0x28
 8001e2c:	e01b      	b.n	8001e66 <UART_Receive_IT+0x9e>
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	691b      	ldr	r3, [r3, #16]
 8001e32:	2b00      	cmp	r3, #0
 8001e34:	d10a      	bne.n	8001e4c <UART_Receive_IT+0x84>
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	6858      	ldr	r0, [r3, #4]
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e40:	1c59      	adds	r1, r3, #1
 8001e42:	687a      	ldr	r2, [r7, #4]
 8001e44:	6291      	str	r1, [r2, #40]	; 0x28
 8001e46:	b2c2      	uxtb	r2, r0
 8001e48:	701a      	strb	r2, [r3, #0]
 8001e4a:	e00c      	b.n	8001e66 <UART_Receive_IT+0x9e>
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	685b      	ldr	r3, [r3, #4]
 8001e52:	b2da      	uxtb	r2, r3
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e58:	1c58      	adds	r0, r3, #1
 8001e5a:	6879      	ldr	r1, [r7, #4]
 8001e5c:	6288      	str	r0, [r1, #40]	; 0x28
 8001e5e:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8001e62:	b2d2      	uxtb	r2, r2
 8001e64:	701a      	strb	r2, [r3, #0]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8001e6a:	b29b      	uxth	r3, r3
 8001e6c:	3b01      	subs	r3, #1
 8001e6e:	b29b      	uxth	r3, r3
 8001e70:	687a      	ldr	r2, [r7, #4]
 8001e72:	4619      	mov	r1, r3
 8001e74:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d120      	bne.n	8001ebc <UART_Receive_IT+0xf4>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	68da      	ldr	r2, [r3, #12]
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	f022 0220 	bic.w	r2, r2, #32
 8001e88:	60da      	str	r2, [r3, #12]
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	68da      	ldr	r2, [r3, #12]
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001e98:	60da      	str	r2, [r3, #12]
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	695a      	ldr	r2, [r3, #20]
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	f022 0201 	bic.w	r2, r2, #1
 8001ea8:	615a      	str	r2, [r3, #20]
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	2220      	movs	r2, #32
 8001eae:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8001eb2:	6878      	ldr	r0, [r7, #4]
 8001eb4:	f006 fae0 	bl	8008478 <HAL_UART_RxCpltCallback>
 8001eb8:	2300      	movs	r3, #0
 8001eba:	e002      	b.n	8001ec2 <UART_Receive_IT+0xfa>
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	e000      	b.n	8001ec2 <UART_Receive_IT+0xfa>
 8001ec0:	2302      	movs	r3, #2
 8001ec2:	4618      	mov	r0, r3
 8001ec4:	3710      	adds	r7, #16
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	bd80      	pop	{r7, pc}
	...

08001ecc <MX_GPIO_Init>:
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b088      	sub	sp, #32
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	f107 0310 	add.w	r3, r7, #16
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	601a      	str	r2, [r3, #0]
 8001eda:	605a      	str	r2, [r3, #4]
 8001edc:	609a      	str	r2, [r3, #8]
 8001ede:	60da      	str	r2, [r3, #12]
 8001ee0:	4b46      	ldr	r3, [pc, #280]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001ee2:	699b      	ldr	r3, [r3, #24]
 8001ee4:	4a45      	ldr	r2, [pc, #276]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001ee6:	f043 0320 	orr.w	r3, r3, #32
 8001eea:	6193      	str	r3, [r2, #24]
 8001eec:	4b43      	ldr	r3, [pc, #268]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001eee:	699b      	ldr	r3, [r3, #24]
 8001ef0:	f003 0320 	and.w	r3, r3, #32
 8001ef4:	60fb      	str	r3, [r7, #12]
 8001ef6:	68fb      	ldr	r3, [r7, #12]
 8001ef8:	4b40      	ldr	r3, [pc, #256]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001efa:	699b      	ldr	r3, [r3, #24]
 8001efc:	4a3f      	ldr	r2, [pc, #252]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001efe:	f043 0304 	orr.w	r3, r3, #4
 8001f02:	6193      	str	r3, [r2, #24]
 8001f04:	4b3d      	ldr	r3, [pc, #244]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001f06:	699b      	ldr	r3, [r3, #24]
 8001f08:	f003 0304 	and.w	r3, r3, #4
 8001f0c:	60bb      	str	r3, [r7, #8]
 8001f0e:	68bb      	ldr	r3, [r7, #8]
 8001f10:	4b3a      	ldr	r3, [pc, #232]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001f12:	699b      	ldr	r3, [r3, #24]
 8001f14:	4a39      	ldr	r2, [pc, #228]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001f16:	f043 0310 	orr.w	r3, r3, #16
 8001f1a:	6193      	str	r3, [r2, #24]
 8001f1c:	4b37      	ldr	r3, [pc, #220]	; (8001ffc <MX_GPIO_Init+0x130>)
 8001f1e:	699b      	ldr	r3, [r3, #24]
 8001f20:	f003 0310 	and.w	r3, r3, #16
 8001f24:	607b      	str	r3, [r7, #4]
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	2200      	movs	r2, #0
 8001f2a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001f2e:	4834      	ldr	r0, [pc, #208]	; (8002000 <MX_GPIO_Init+0x134>)
 8001f30:	f7ff f96c 	bl	800120c <HAL_GPIO_WritePin>
 8001f34:	2200      	movs	r2, #0
 8001f36:	2104      	movs	r1, #4
 8001f38:	4832      	ldr	r0, [pc, #200]	; (8002004 <MX_GPIO_Init+0x138>)
 8001f3a:	f7ff f967 	bl	800120c <HAL_GPIO_WritePin>
 8001f3e:	2301      	movs	r3, #1
 8001f40:	613b      	str	r3, [r7, #16]
 8001f42:	4b31      	ldr	r3, [pc, #196]	; (8002008 <MX_GPIO_Init+0x13c>)
 8001f44:	617b      	str	r3, [r7, #20]
 8001f46:	2302      	movs	r3, #2
 8001f48:	61bb      	str	r3, [r7, #24]
 8001f4a:	f107 0310 	add.w	r3, r7, #16
 8001f4e:	4619      	mov	r1, r3
 8001f50:	482b      	ldr	r0, [pc, #172]	; (8002000 <MX_GPIO_Init+0x134>)
 8001f52:	f7fe fff1 	bl	8000f38 <HAL_GPIO_Init>
 8001f56:	2320      	movs	r3, #32
 8001f58:	613b      	str	r3, [r7, #16]
 8001f5a:	4b2c      	ldr	r3, [pc, #176]	; (800200c <MX_GPIO_Init+0x140>)
 8001f5c:	617b      	str	r3, [r7, #20]
 8001f5e:	2301      	movs	r3, #1
 8001f60:	61bb      	str	r3, [r7, #24]
 8001f62:	f107 0310 	add.w	r3, r7, #16
 8001f66:	4619      	mov	r1, r3
 8001f68:	4829      	ldr	r0, [pc, #164]	; (8002010 <MX_GPIO_Init+0x144>)
 8001f6a:	f7fe ffe5 	bl	8000f38 <HAL_GPIO_Init>
 8001f6e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001f72:	613b      	str	r3, [r7, #16]
 8001f74:	2301      	movs	r3, #1
 8001f76:	617b      	str	r3, [r7, #20]
 8001f78:	2300      	movs	r3, #0
 8001f7a:	61bb      	str	r3, [r7, #24]
 8001f7c:	2302      	movs	r3, #2
 8001f7e:	61fb      	str	r3, [r7, #28]
 8001f80:	f107 0310 	add.w	r3, r7, #16
 8001f84:	4619      	mov	r1, r3
 8001f86:	481e      	ldr	r0, [pc, #120]	; (8002000 <MX_GPIO_Init+0x134>)
 8001f88:	f7fe ffd6 	bl	8000f38 <HAL_GPIO_Init>
 8001f8c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001f90:	613b      	str	r3, [r7, #16]
 8001f92:	4b1e      	ldr	r3, [pc, #120]	; (800200c <MX_GPIO_Init+0x140>)
 8001f94:	617b      	str	r3, [r7, #20]
 8001f96:	2301      	movs	r3, #1
 8001f98:	61bb      	str	r3, [r7, #24]
 8001f9a:	f107 0310 	add.w	r3, r7, #16
 8001f9e:	4619      	mov	r1, r3
 8001fa0:	4817      	ldr	r0, [pc, #92]	; (8002000 <MX_GPIO_Init+0x134>)
 8001fa2:	f7fe ffc9 	bl	8000f38 <HAL_GPIO_Init>
 8001fa6:	2304      	movs	r3, #4
 8001fa8:	613b      	str	r3, [r7, #16]
 8001faa:	2301      	movs	r3, #1
 8001fac:	617b      	str	r3, [r7, #20]
 8001fae:	2300      	movs	r3, #0
 8001fb0:	61bb      	str	r3, [r7, #24]
 8001fb2:	2302      	movs	r3, #2
 8001fb4:	61fb      	str	r3, [r7, #28]
 8001fb6:	f107 0310 	add.w	r3, r7, #16
 8001fba:	4619      	mov	r1, r3
 8001fbc:	4811      	ldr	r0, [pc, #68]	; (8002004 <MX_GPIO_Init+0x138>)
 8001fbe:	f7fe ffbb 	bl	8000f38 <HAL_GPIO_Init>
 8001fc2:	2200      	movs	r2, #0
 8001fc4:	2101      	movs	r1, #1
 8001fc6:	2006      	movs	r0, #6
 8001fc8:	f7fe fe77 	bl	8000cba <HAL_NVIC_SetPriority>
 8001fcc:	2006      	movs	r0, #6
 8001fce:	f7fe fe90 	bl	8000cf2 <HAL_NVIC_EnableIRQ>
 8001fd2:	2201      	movs	r2, #1
 8001fd4:	2101      	movs	r1, #1
 8001fd6:	2017      	movs	r0, #23
 8001fd8:	f7fe fe6f 	bl	8000cba <HAL_NVIC_SetPriority>
 8001fdc:	2017      	movs	r0, #23
 8001fde:	f7fe fe88 	bl	8000cf2 <HAL_NVIC_EnableIRQ>
 8001fe2:	2202      	movs	r2, #2
 8001fe4:	2101      	movs	r1, #1
 8001fe6:	2028      	movs	r0, #40	; 0x28
 8001fe8:	f7fe fe67 	bl	8000cba <HAL_NVIC_SetPriority>
 8001fec:	2028      	movs	r0, #40	; 0x28
 8001fee:	f7fe fe80 	bl	8000cf2 <HAL_NVIC_EnableIRQ>
 8001ff2:	bf00      	nop
 8001ff4:	3720      	adds	r7, #32
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	bd80      	pop	{r7, pc}
 8001ffa:	bf00      	nop
 8001ffc:	40021000 	.word	0x40021000
 8002000:	40010800 	.word	0x40010800
 8002004:	40011400 	.word	0x40011400
 8002008:	10110000 	.word	0x10110000
 800200c:	10210000 	.word	0x10210000
 8002010:	40011000 	.word	0x40011000

08002014 <LCD_WR_REG>:
//默认为竖屏
_lcd_dev lcddev;

//写寄存器函数
//data:寄存器值
void LCD_WR_REG(uint16_t data) {
 8002014:	b480      	push	{r7}
 8002016:	b083      	sub	sp, #12
 8002018:	af00      	add	r7, sp, #0
 800201a:	4603      	mov	r3, r0
 800201c:	80fb      	strh	r3, [r7, #6]
	LCD_RS_CLR;  //写地址
 800201e:	4b0d      	ldr	r3, [pc, #52]	; (8002054 <LCD_WR_REG+0x40>)
 8002020:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002024:	615a      	str	r2, [r3, #20]
	LCD_CS_CLR;
 8002026:	4b0b      	ldr	r3, [pc, #44]	; (8002054 <LCD_WR_REG+0x40>)
 8002028:	f44f 7200 	mov.w	r2, #512	; 0x200
 800202c:	615a      	str	r2, [r3, #20]
	DATAOUT(data);
 800202e:	4a0a      	ldr	r2, [pc, #40]	; (8002058 <LCD_WR_REG+0x44>)
 8002030:	88fb      	ldrh	r3, [r7, #6]
 8002032:	60d3      	str	r3, [r2, #12]
	LCD_WR_CLR;
 8002034:	4b07      	ldr	r3, [pc, #28]	; (8002054 <LCD_WR_REG+0x40>)
 8002036:	2280      	movs	r2, #128	; 0x80
 8002038:	615a      	str	r2, [r3, #20]
	LCD_WR_SET;
 800203a:	4b06      	ldr	r3, [pc, #24]	; (8002054 <LCD_WR_REG+0x40>)
 800203c:	2280      	movs	r2, #128	; 0x80
 800203e:	611a      	str	r2, [r3, #16]
	LCD_CS_SET;
 8002040:	4b04      	ldr	r3, [pc, #16]	; (8002054 <LCD_WR_REG+0x40>)
 8002042:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002046:	611a      	str	r2, [r3, #16]
}
 8002048:	bf00      	nop
 800204a:	370c      	adds	r7, #12
 800204c:	46bd      	mov	sp, r7
 800204e:	bc80      	pop	{r7}
 8002050:	4770      	bx	lr
 8002052:	bf00      	nop
 8002054:	40011000 	.word	0x40011000
 8002058:	40010c00 	.word	0x40010c00

0800205c <LCD_WR_DATAX>:
//写数据函数
//可以替代LCD_WR_DATAX宏,拿时间换空间.
//data:寄存器值
void LCD_WR_DATAX(uint16_t data) {
 800205c:	b480      	push	{r7}
 800205e:	b083      	sub	sp, #12
 8002060:	af00      	add	r7, sp, #0
 8002062:	4603      	mov	r3, r0
 8002064:	80fb      	strh	r3, [r7, #6]
	LCD_RS_SET;
 8002066:	4b0d      	ldr	r3, [pc, #52]	; (800209c <LCD_WR_DATAX+0x40>)
 8002068:	f44f 7280 	mov.w	r2, #256	; 0x100
 800206c:	611a      	str	r2, [r3, #16]
	LCD_CS_CLR;
 800206e:	4b0b      	ldr	r3, [pc, #44]	; (800209c <LCD_WR_DATAX+0x40>)
 8002070:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002074:	615a      	str	r2, [r3, #20]
	DATAOUT(data);
 8002076:	4a0a      	ldr	r2, [pc, #40]	; (80020a0 <LCD_WR_DATAX+0x44>)
 8002078:	88fb      	ldrh	r3, [r7, #6]
 800207a:	60d3      	str	r3, [r2, #12]
	LCD_WR_CLR;
 800207c:	4b07      	ldr	r3, [pc, #28]	; (800209c <LCD_WR_DATAX+0x40>)
 800207e:	2280      	movs	r2, #128	; 0x80
 8002080:	615a      	str	r2, [r3, #20]
	LCD_WR_SET;
 8002082:	4b06      	ldr	r3, [pc, #24]	; (800209c <LCD_WR_DATAX+0x40>)
 8002084:	2280      	movs	r2, #128	; 0x80
 8002086:	611a      	str	r2, [r3, #16]
	LCD_CS_SET;
 8002088:	4b04      	ldr	r3, [pc, #16]	; (800209c <LCD_WR_DATAX+0x40>)
 800208a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800208e:	611a      	str	r2, [r3, #16]
}
 8002090:	bf00      	nop
 8002092:	370c      	adds	r7, #12
 8002094:	46bd      	mov	sp, r7
 8002096:	bc80      	pop	{r7}
 8002098:	4770      	bx	lr
 800209a:	bf00      	nop
 800209c:	40011000 	.word	0x40011000
 80020a0:	40010c00 	.word	0x40010c00

080020a4 <LCD_RD_DATA>:
//读LCD数据
//返回值:读到的值
uint16_t LCD_RD_DATA(void) {
 80020a4:	b580      	push	{r7, lr}
 80020a6:	b082      	sub	sp, #8
 80020a8:	af00      	add	r7, sp, #0
	uint16_t t;
	GPIOB->CRL = 0X88888888; //PB0-7  上拉输入
 80020aa:	4b1d      	ldr	r3, [pc, #116]	; (8002120 <LCD_RD_DATA+0x7c>)
 80020ac:	f04f 3288 	mov.w	r2, #2290649224	; 0x88888888
 80020b0:	601a      	str	r2, [r3, #0]
	GPIOB->CRH = 0X88888888; //PB8-15 上拉输入
 80020b2:	4b1b      	ldr	r3, [pc, #108]	; (8002120 <LCD_RD_DATA+0x7c>)
 80020b4:	f04f 3288 	mov.w	r2, #2290649224	; 0x88888888
 80020b8:	605a      	str	r2, [r3, #4]
	GPIOB->ODR = 0X0000;     //全部输出0
 80020ba:	4b19      	ldr	r3, [pc, #100]	; (8002120 <LCD_RD_DATA+0x7c>)
 80020bc:	2200      	movs	r2, #0
 80020be:	60da      	str	r2, [r3, #12]

	LCD_RS_SET;
 80020c0:	4b18      	ldr	r3, [pc, #96]	; (8002124 <LCD_RD_DATA+0x80>)
 80020c2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80020c6:	611a      	str	r2, [r3, #16]
	LCD_CS_CLR;
 80020c8:	4b16      	ldr	r3, [pc, #88]	; (8002124 <LCD_RD_DATA+0x80>)
 80020ca:	f44f 7200 	mov.w	r2, #512	; 0x200
 80020ce:	615a      	str	r2, [r3, #20]
	//读取数据(读寄存器时,并不需要读2次)
	LCD_RD_CLR;
 80020d0:	4b14      	ldr	r3, [pc, #80]	; (8002124 <LCD_RD_DATA+0x80>)
 80020d2:	2240      	movs	r2, #64	; 0x40
 80020d4:	615a      	str	r2, [r3, #20]
	if (lcddev.id == 0X8989)
 80020d6:	4b14      	ldr	r3, [pc, #80]	; (8002128 <LCD_RD_DATA+0x84>)
 80020d8:	889b      	ldrh	r3, [r3, #4]
 80020da:	f648 1289 	movw	r2, #35209	; 0x8989
 80020de:	4293      	cmp	r3, r2
 80020e0:	d102      	bne.n	80020e8 <LCD_RD_DATA+0x44>
		HAL_Delay(1); // delay_us(2);//FOR 8989,延时2us
 80020e2:	2001      	movs	r0, #1
 80020e4:	f7fe fcf0 	bl	8000ac8 <HAL_Delay>
	t = DATAIN
 80020e8:	4b0d      	ldr	r3, [pc, #52]	; (8002120 <LCD_RD_DATA+0x7c>)
 80020ea:	689b      	ldr	r3, [r3, #8]
 80020ec:	80fb      	strh	r3, [r7, #6]
	;
	LCD_RD_SET;
 80020ee:	4b0d      	ldr	r3, [pc, #52]	; (8002124 <LCD_RD_DATA+0x80>)
 80020f0:	2240      	movs	r2, #64	; 0x40
 80020f2:	611a      	str	r2, [r3, #16]
	LCD_CS_SET;
 80020f4:	4b0b      	ldr	r3, [pc, #44]	; (8002124 <LCD_RD_DATA+0x80>)
 80020f6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80020fa:	611a      	str	r2, [r3, #16]

	GPIOB->CRL = 0X33333333; //PB0-7  上拉输出
 80020fc:	4b08      	ldr	r3, [pc, #32]	; (8002120 <LCD_RD_DATA+0x7c>)
 80020fe:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 8002102:	601a      	str	r2, [r3, #0]
	GPIOB->CRH = 0X33333333; //PB8-15 上拉输出
 8002104:	4b06      	ldr	r3, [pc, #24]	; (8002120 <LCD_RD_DATA+0x7c>)
 8002106:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 800210a:	605a      	str	r2, [r3, #4]
	GPIOB->ODR = 0XFFFF;    //全部输出高
 800210c:	4b04      	ldr	r3, [pc, #16]	; (8002120 <LCD_RD_DATA+0x7c>)
 800210e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002112:	60da      	str	r2, [r3, #12]
	return t;
 8002114:	88fb      	ldrh	r3, [r7, #6]
}
 8002116:	4618      	mov	r0, r3
 8002118:	3708      	adds	r7, #8
 800211a:	46bd      	mov	sp, r7
 800211c:	bd80      	pop	{r7, pc}
 800211e:	bf00      	nop
 8002120:	40010c00 	.word	0x40010c00
 8002124:	40011000 	.word	0x40011000
 8002128:	200000a8 	.word	0x200000a8

0800212c <LCD_WriteReg>:
//写寄存器
//LCD_Reg:寄存器编号
//LCD_RegValue:要写入的值
void LCD_WriteReg(uint16_t LCD_Reg, uint16_t LCD_RegValue) {
 800212c:	b580      	push	{r7, lr}
 800212e:	b082      	sub	sp, #8
 8002130:	af00      	add	r7, sp, #0
 8002132:	4603      	mov	r3, r0
 8002134:	460a      	mov	r2, r1
 8002136:	80fb      	strh	r3, [r7, #6]
 8002138:	4613      	mov	r3, r2
 800213a:	80bb      	strh	r3, [r7, #4]
	LCD_WR_REG(LCD_Reg);
 800213c:	88fb      	ldrh	r3, [r7, #6]
 800213e:	4618      	mov	r0, r3
 8002140:	f7ff ff68 	bl	8002014 <LCD_WR_REG>
	LCD_WR_DATA(LCD_RegValue);
 8002144:	4b0c      	ldr	r3, [pc, #48]	; (8002178 <LCD_WriteReg+0x4c>)
 8002146:	f44f 7280 	mov.w	r2, #256	; 0x100
 800214a:	611a      	str	r2, [r3, #16]
 800214c:	4b0a      	ldr	r3, [pc, #40]	; (8002178 <LCD_WriteReg+0x4c>)
 800214e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002152:	615a      	str	r2, [r3, #20]
 8002154:	4a09      	ldr	r2, [pc, #36]	; (800217c <LCD_WriteReg+0x50>)
 8002156:	88bb      	ldrh	r3, [r7, #4]
 8002158:	60d3      	str	r3, [r2, #12]
 800215a:	4b07      	ldr	r3, [pc, #28]	; (8002178 <LCD_WriteReg+0x4c>)
 800215c:	2280      	movs	r2, #128	; 0x80
 800215e:	615a      	str	r2, [r3, #20]
 8002160:	4b05      	ldr	r3, [pc, #20]	; (8002178 <LCD_WriteReg+0x4c>)
 8002162:	2280      	movs	r2, #128	; 0x80
 8002164:	611a      	str	r2, [r3, #16]
 8002166:	4b04      	ldr	r3, [pc, #16]	; (8002178 <LCD_WriteReg+0x4c>)
 8002168:	f44f 7200 	mov.w	r2, #512	; 0x200
 800216c:	611a      	str	r2, [r3, #16]
}
 800216e:	bf00      	nop
 8002170:	3708      	adds	r7, #8
 8002172:	46bd      	mov	sp, r7
 8002174:	bd80      	pop	{r7, pc}
 8002176:	bf00      	nop
 8002178:	40011000 	.word	0x40011000
 800217c:	40010c00 	.word	0x40010c00

08002180 <LCD_ReadReg>:
//读寄存器
//LCD_Reg:寄存器编号
//返回值:读到的值
uint16_t LCD_ReadReg(uint16_t LCD_Reg) {
 8002180:	b580      	push	{r7, lr}
 8002182:	b082      	sub	sp, #8
 8002184:	af00      	add	r7, sp, #0
 8002186:	4603      	mov	r3, r0
 8002188:	80fb      	strh	r3, [r7, #6]
	LCD_WR_REG(LCD_Reg);  //写入要读的寄存器号
 800218a:	88fb      	ldrh	r3, [r7, #6]
 800218c:	4618      	mov	r0, r3
 800218e:	f7ff ff41 	bl	8002014 <LCD_WR_REG>
	return LCD_RD_DATA();
 8002192:	f7ff ff87 	bl	80020a4 <LCD_RD_DATA>
 8002196:	4603      	mov	r3, r0
}
 8002198:	4618      	mov	r0, r3
 800219a:	3708      	adds	r7, #8
 800219c:	46bd      	mov	sp, r7
 800219e:	bd80      	pop	{r7, pc}

080021a0 <LCD_WriteRAM_Prepare>:
//开始写GRAM
void LCD_WriteRAM_Prepare(void) {
 80021a0:	b580      	push	{r7, lr}
 80021a2:	af00      	add	r7, sp, #0
	LCD_WR_REG(lcddev.wramcmd);
 80021a4:	4b03      	ldr	r3, [pc, #12]	; (80021b4 <LCD_WriteRAM_Prepare+0x14>)
 80021a6:	891b      	ldrh	r3, [r3, #8]
 80021a8:	4618      	mov	r0, r3
 80021aa:	f7ff ff33 	bl	8002014 <LCD_WR_REG>
}
 80021ae:	bf00      	nop
 80021b0:	bd80      	pop	{r7, pc}
 80021b2:	bf00      	nop
 80021b4:	200000a8 	.word	0x200000a8

080021b8 <LCD_SetCursor>:
		LCD_WriteReg(0X07, 0x0);	//关闭显示
}
//设置光标位置
//Xpos:横坐标
//Ypos:纵坐标
void LCD_SetCursor(uint16_t Xpos, uint16_t Ypos) {
 80021b8:	b580      	push	{r7, lr}
 80021ba:	b082      	sub	sp, #8
 80021bc:	af00      	add	r7, sp, #0
 80021be:	4603      	mov	r3, r0
 80021c0:	460a      	mov	r2, r1
 80021c2:	80fb      	strh	r3, [r7, #6]
 80021c4:	4613      	mov	r3, r2
 80021c6:	80bb      	strh	r3, [r7, #4]
	if (lcddev.id == 0X9341 || lcddev.id == 0X5310) {
 80021c8:	4b73      	ldr	r3, [pc, #460]	; (8002398 <LCD_SetCursor+0x1e0>)
 80021ca:	889b      	ldrh	r3, [r3, #4]
 80021cc:	f249 3241 	movw	r2, #37697	; 0x9341
 80021d0:	4293      	cmp	r3, r2
 80021d2:	d005      	beq.n	80021e0 <LCD_SetCursor+0x28>
 80021d4:	4b70      	ldr	r3, [pc, #448]	; (8002398 <LCD_SetCursor+0x1e0>)
 80021d6:	889b      	ldrh	r3, [r3, #4]
 80021d8:	f245 3210 	movw	r2, #21264	; 0x5310
 80021dc:	4293      	cmp	r3, r2
 80021de:	d164      	bne.n	80022aa <LCD_SetCursor+0xf2>
		LCD_WR_REG(lcddev.setxcmd);
 80021e0:	4b6d      	ldr	r3, [pc, #436]	; (8002398 <LCD_SetCursor+0x1e0>)
 80021e2:	895b      	ldrh	r3, [r3, #10]
 80021e4:	4618      	mov	r0, r3
 80021e6:	f7ff ff15 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Xpos >> 8);
 80021ea:	4b6c      	ldr	r3, [pc, #432]	; (800239c <LCD_SetCursor+0x1e4>)
 80021ec:	f44f 7280 	mov.w	r2, #256	; 0x100
 80021f0:	611a      	str	r2, [r3, #16]
 80021f2:	4b6a      	ldr	r3, [pc, #424]	; (800239c <LCD_SetCursor+0x1e4>)
 80021f4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80021f8:	615a      	str	r2, [r3, #20]
 80021fa:	88fb      	ldrh	r3, [r7, #6]
 80021fc:	0a1b      	lsrs	r3, r3, #8
 80021fe:	b29a      	uxth	r2, r3
 8002200:	4b67      	ldr	r3, [pc, #412]	; (80023a0 <LCD_SetCursor+0x1e8>)
 8002202:	60da      	str	r2, [r3, #12]
 8002204:	4b65      	ldr	r3, [pc, #404]	; (800239c <LCD_SetCursor+0x1e4>)
 8002206:	2280      	movs	r2, #128	; 0x80
 8002208:	615a      	str	r2, [r3, #20]
 800220a:	4b64      	ldr	r3, [pc, #400]	; (800239c <LCD_SetCursor+0x1e4>)
 800220c:	2280      	movs	r2, #128	; 0x80
 800220e:	611a      	str	r2, [r3, #16]
 8002210:	4b62      	ldr	r3, [pc, #392]	; (800239c <LCD_SetCursor+0x1e4>)
 8002212:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002216:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(Xpos & 0XFF);
 8002218:	4b60      	ldr	r3, [pc, #384]	; (800239c <LCD_SetCursor+0x1e4>)
 800221a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800221e:	611a      	str	r2, [r3, #16]
 8002220:	4b5e      	ldr	r3, [pc, #376]	; (800239c <LCD_SetCursor+0x1e4>)
 8002222:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002226:	615a      	str	r2, [r3, #20]
 8002228:	88fb      	ldrh	r3, [r7, #6]
 800222a:	4a5d      	ldr	r2, [pc, #372]	; (80023a0 <LCD_SetCursor+0x1e8>)
 800222c:	b2db      	uxtb	r3, r3
 800222e:	60d3      	str	r3, [r2, #12]
 8002230:	4b5a      	ldr	r3, [pc, #360]	; (800239c <LCD_SetCursor+0x1e4>)
 8002232:	2280      	movs	r2, #128	; 0x80
 8002234:	615a      	str	r2, [r3, #20]
 8002236:	4b59      	ldr	r3, [pc, #356]	; (800239c <LCD_SetCursor+0x1e4>)
 8002238:	2280      	movs	r2, #128	; 0x80
 800223a:	611a      	str	r2, [r3, #16]
 800223c:	4b57      	ldr	r3, [pc, #348]	; (800239c <LCD_SetCursor+0x1e4>)
 800223e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002242:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8002244:	4b54      	ldr	r3, [pc, #336]	; (8002398 <LCD_SetCursor+0x1e0>)
 8002246:	899b      	ldrh	r3, [r3, #12]
 8002248:	4618      	mov	r0, r3
 800224a:	f7ff fee3 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Ypos >> 8);
 800224e:	4b53      	ldr	r3, [pc, #332]	; (800239c <LCD_SetCursor+0x1e4>)
 8002250:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002254:	611a      	str	r2, [r3, #16]
 8002256:	4b51      	ldr	r3, [pc, #324]	; (800239c <LCD_SetCursor+0x1e4>)
 8002258:	f44f 7200 	mov.w	r2, #512	; 0x200
 800225c:	615a      	str	r2, [r3, #20]
 800225e:	88bb      	ldrh	r3, [r7, #4]
 8002260:	0a1b      	lsrs	r3, r3, #8
 8002262:	b29a      	uxth	r2, r3
 8002264:	4b4e      	ldr	r3, [pc, #312]	; (80023a0 <LCD_SetCursor+0x1e8>)
 8002266:	60da      	str	r2, [r3, #12]
 8002268:	4b4c      	ldr	r3, [pc, #304]	; (800239c <LCD_SetCursor+0x1e4>)
 800226a:	2280      	movs	r2, #128	; 0x80
 800226c:	615a      	str	r2, [r3, #20]
 800226e:	4b4b      	ldr	r3, [pc, #300]	; (800239c <LCD_SetCursor+0x1e4>)
 8002270:	2280      	movs	r2, #128	; 0x80
 8002272:	611a      	str	r2, [r3, #16]
 8002274:	4b49      	ldr	r3, [pc, #292]	; (800239c <LCD_SetCursor+0x1e4>)
 8002276:	f44f 7200 	mov.w	r2, #512	; 0x200
 800227a:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(Ypos & 0XFF);
 800227c:	4b47      	ldr	r3, [pc, #284]	; (800239c <LCD_SetCursor+0x1e4>)
 800227e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002282:	611a      	str	r2, [r3, #16]
 8002284:	4b45      	ldr	r3, [pc, #276]	; (800239c <LCD_SetCursor+0x1e4>)
 8002286:	f44f 7200 	mov.w	r2, #512	; 0x200
 800228a:	615a      	str	r2, [r3, #20]
 800228c:	88bb      	ldrh	r3, [r7, #4]
 800228e:	4a44      	ldr	r2, [pc, #272]	; (80023a0 <LCD_SetCursor+0x1e8>)
 8002290:	b2db      	uxtb	r3, r3
 8002292:	60d3      	str	r3, [r2, #12]
 8002294:	4b41      	ldr	r3, [pc, #260]	; (800239c <LCD_SetCursor+0x1e4>)
 8002296:	2280      	movs	r2, #128	; 0x80
 8002298:	615a      	str	r2, [r3, #20]
 800229a:	4b40      	ldr	r3, [pc, #256]	; (800239c <LCD_SetCursor+0x1e4>)
 800229c:	2280      	movs	r2, #128	; 0x80
 800229e:	611a      	str	r2, [r3, #16]
 80022a0:	4b3e      	ldr	r3, [pc, #248]	; (800239c <LCD_SetCursor+0x1e4>)
 80022a2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80022a6:	611a      	str	r2, [r3, #16]
		if (lcddev.dir == 1)
			Xpos = lcddev.width - 1 - Xpos;	//横屏其实就是调转x,y坐标
		LCD_WriteReg(lcddev.setxcmd, Xpos);
		LCD_WriteReg(lcddev.setycmd, Ypos);
	}
}
 80022a8:	e248      	b.n	800273c <LCD_SetCursor+0x584>
	} else if (lcddev.id == 0X6804) {
 80022aa:	4b3b      	ldr	r3, [pc, #236]	; (8002398 <LCD_SetCursor+0x1e0>)
 80022ac:	889b      	ldrh	r3, [r3, #4]
 80022ae:	f646 0204 	movw	r2, #26628	; 0x6804
 80022b2:	4293      	cmp	r3, r2
 80022b4:	d176      	bne.n	80023a4 <LCD_SetCursor+0x1ec>
		if (lcddev.dir == 1)
 80022b6:	4b38      	ldr	r3, [pc, #224]	; (8002398 <LCD_SetCursor+0x1e0>)
 80022b8:	799b      	ldrb	r3, [r3, #6]
 80022ba:	2b01      	cmp	r3, #1
 80022bc:	d106      	bne.n	80022cc <LCD_SetCursor+0x114>
			Xpos = lcddev.width - 1 - Xpos;	//横屏时处理
 80022be:	4b36      	ldr	r3, [pc, #216]	; (8002398 <LCD_SetCursor+0x1e0>)
 80022c0:	881a      	ldrh	r2, [r3, #0]
 80022c2:	88fb      	ldrh	r3, [r7, #6]
 80022c4:	1ad3      	subs	r3, r2, r3
 80022c6:	b29b      	uxth	r3, r3
 80022c8:	3b01      	subs	r3, #1
 80022ca:	80fb      	strh	r3, [r7, #6]
		LCD_WR_REG(lcddev.setxcmd);
 80022cc:	4b32      	ldr	r3, [pc, #200]	; (8002398 <LCD_SetCursor+0x1e0>)
 80022ce:	895b      	ldrh	r3, [r3, #10]
 80022d0:	4618      	mov	r0, r3
 80022d2:	f7ff fe9f 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Xpos >> 8);
 80022d6:	4b31      	ldr	r3, [pc, #196]	; (800239c <LCD_SetCursor+0x1e4>)
 80022d8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80022dc:	611a      	str	r2, [r3, #16]
 80022de:	4b2f      	ldr	r3, [pc, #188]	; (800239c <LCD_SetCursor+0x1e4>)
 80022e0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80022e4:	615a      	str	r2, [r3, #20]
 80022e6:	88fb      	ldrh	r3, [r7, #6]
 80022e8:	0a1b      	lsrs	r3, r3, #8
 80022ea:	b29a      	uxth	r2, r3
 80022ec:	4b2c      	ldr	r3, [pc, #176]	; (80023a0 <LCD_SetCursor+0x1e8>)
 80022ee:	60da      	str	r2, [r3, #12]
 80022f0:	4b2a      	ldr	r3, [pc, #168]	; (800239c <LCD_SetCursor+0x1e4>)
 80022f2:	2280      	movs	r2, #128	; 0x80
 80022f4:	615a      	str	r2, [r3, #20]
 80022f6:	4b29      	ldr	r3, [pc, #164]	; (800239c <LCD_SetCursor+0x1e4>)
 80022f8:	2280      	movs	r2, #128	; 0x80
 80022fa:	611a      	str	r2, [r3, #16]
 80022fc:	4b27      	ldr	r3, [pc, #156]	; (800239c <LCD_SetCursor+0x1e4>)
 80022fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002302:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(Xpos & 0XFF);
 8002304:	4b25      	ldr	r3, [pc, #148]	; (800239c <LCD_SetCursor+0x1e4>)
 8002306:	f44f 7280 	mov.w	r2, #256	; 0x100
 800230a:	611a      	str	r2, [r3, #16]
 800230c:	4b23      	ldr	r3, [pc, #140]	; (800239c <LCD_SetCursor+0x1e4>)
 800230e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002312:	615a      	str	r2, [r3, #20]
 8002314:	88fb      	ldrh	r3, [r7, #6]
 8002316:	4a22      	ldr	r2, [pc, #136]	; (80023a0 <LCD_SetCursor+0x1e8>)
 8002318:	b2db      	uxtb	r3, r3
 800231a:	60d3      	str	r3, [r2, #12]
 800231c:	4b1f      	ldr	r3, [pc, #124]	; (800239c <LCD_SetCursor+0x1e4>)
 800231e:	2280      	movs	r2, #128	; 0x80
 8002320:	615a      	str	r2, [r3, #20]
 8002322:	4b1e      	ldr	r3, [pc, #120]	; (800239c <LCD_SetCursor+0x1e4>)
 8002324:	2280      	movs	r2, #128	; 0x80
 8002326:	611a      	str	r2, [r3, #16]
 8002328:	4b1c      	ldr	r3, [pc, #112]	; (800239c <LCD_SetCursor+0x1e4>)
 800232a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800232e:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8002330:	4b19      	ldr	r3, [pc, #100]	; (8002398 <LCD_SetCursor+0x1e0>)
 8002332:	899b      	ldrh	r3, [r3, #12]
 8002334:	4618      	mov	r0, r3
 8002336:	f7ff fe6d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Ypos >> 8);
 800233a:	4b18      	ldr	r3, [pc, #96]	; (800239c <LCD_SetCursor+0x1e4>)
 800233c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002340:	611a      	str	r2, [r3, #16]
 8002342:	4b16      	ldr	r3, [pc, #88]	; (800239c <LCD_SetCursor+0x1e4>)
 8002344:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002348:	615a      	str	r2, [r3, #20]
 800234a:	88bb      	ldrh	r3, [r7, #4]
 800234c:	0a1b      	lsrs	r3, r3, #8
 800234e:	b29a      	uxth	r2, r3
 8002350:	4b13      	ldr	r3, [pc, #76]	; (80023a0 <LCD_SetCursor+0x1e8>)
 8002352:	60da      	str	r2, [r3, #12]
 8002354:	4b11      	ldr	r3, [pc, #68]	; (800239c <LCD_SetCursor+0x1e4>)
 8002356:	2280      	movs	r2, #128	; 0x80
 8002358:	615a      	str	r2, [r3, #20]
 800235a:	4b10      	ldr	r3, [pc, #64]	; (800239c <LCD_SetCursor+0x1e4>)
 800235c:	2280      	movs	r2, #128	; 0x80
 800235e:	611a      	str	r2, [r3, #16]
 8002360:	4b0e      	ldr	r3, [pc, #56]	; (800239c <LCD_SetCursor+0x1e4>)
 8002362:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002366:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(Ypos & 0XFF);
 8002368:	4b0c      	ldr	r3, [pc, #48]	; (800239c <LCD_SetCursor+0x1e4>)
 800236a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800236e:	611a      	str	r2, [r3, #16]
 8002370:	4b0a      	ldr	r3, [pc, #40]	; (800239c <LCD_SetCursor+0x1e4>)
 8002372:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002376:	615a      	str	r2, [r3, #20]
 8002378:	88bb      	ldrh	r3, [r7, #4]
 800237a:	4a09      	ldr	r2, [pc, #36]	; (80023a0 <LCD_SetCursor+0x1e8>)
 800237c:	b2db      	uxtb	r3, r3
 800237e:	60d3      	str	r3, [r2, #12]
 8002380:	4b06      	ldr	r3, [pc, #24]	; (800239c <LCD_SetCursor+0x1e4>)
 8002382:	2280      	movs	r2, #128	; 0x80
 8002384:	615a      	str	r2, [r3, #20]
 8002386:	4b05      	ldr	r3, [pc, #20]	; (800239c <LCD_SetCursor+0x1e4>)
 8002388:	2280      	movs	r2, #128	; 0x80
 800238a:	611a      	str	r2, [r3, #16]
 800238c:	4b03      	ldr	r3, [pc, #12]	; (800239c <LCD_SetCursor+0x1e4>)
 800238e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002392:	611a      	str	r2, [r3, #16]
}
 8002394:	e1d2      	b.n	800273c <LCD_SetCursor+0x584>
 8002396:	bf00      	nop
 8002398:	200000a8 	.word	0x200000a8
 800239c:	40011000 	.word	0x40011000
 80023a0:	40010c00 	.word	0x40010c00
	} else if (lcddev.id == 0X1963) {
 80023a4:	4b99      	ldr	r3, [pc, #612]	; (800260c <LCD_SetCursor+0x454>)
 80023a6:	889b      	ldrh	r3, [r3, #4]
 80023a8:	f641 1263 	movw	r2, #6499	; 0x1963
 80023ac:	4293      	cmp	r3, r2
 80023ae:	f040 8133 	bne.w	8002618 <LCD_SetCursor+0x460>
		if (lcddev.dir == 0)	//x坐标需要变换
 80023b2:	4b96      	ldr	r3, [pc, #600]	; (800260c <LCD_SetCursor+0x454>)
 80023b4:	799b      	ldrb	r3, [r3, #6]
 80023b6:	2b00      	cmp	r3, #0
 80023b8:	d163      	bne.n	8002482 <LCD_SetCursor+0x2ca>
			Xpos = lcddev.width - 1 - Xpos;
 80023ba:	4b94      	ldr	r3, [pc, #592]	; (800260c <LCD_SetCursor+0x454>)
 80023bc:	881a      	ldrh	r2, [r3, #0]
 80023be:	88fb      	ldrh	r3, [r7, #6]
 80023c0:	1ad3      	subs	r3, r2, r3
 80023c2:	b29b      	uxth	r3, r3
 80023c4:	3b01      	subs	r3, #1
 80023c6:	80fb      	strh	r3, [r7, #6]
			LCD_WR_REG(lcddev.setxcmd);
 80023c8:	4b90      	ldr	r3, [pc, #576]	; (800260c <LCD_SetCursor+0x454>)
 80023ca:	895b      	ldrh	r3, [r3, #10]
 80023cc:	4618      	mov	r0, r3
 80023ce:	f7ff fe21 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 80023d2:	4b8f      	ldr	r3, [pc, #572]	; (8002610 <LCD_SetCursor+0x458>)
 80023d4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80023d8:	611a      	str	r2, [r3, #16]
 80023da:	4b8d      	ldr	r3, [pc, #564]	; (8002610 <LCD_SetCursor+0x458>)
 80023dc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80023e0:	615a      	str	r2, [r3, #20]
 80023e2:	4b8c      	ldr	r3, [pc, #560]	; (8002614 <LCD_SetCursor+0x45c>)
 80023e4:	2200      	movs	r2, #0
 80023e6:	60da      	str	r2, [r3, #12]
 80023e8:	4b89      	ldr	r3, [pc, #548]	; (8002610 <LCD_SetCursor+0x458>)
 80023ea:	2280      	movs	r2, #128	; 0x80
 80023ec:	615a      	str	r2, [r3, #20]
 80023ee:	4b88      	ldr	r3, [pc, #544]	; (8002610 <LCD_SetCursor+0x458>)
 80023f0:	2280      	movs	r2, #128	; 0x80
 80023f2:	611a      	str	r2, [r3, #16]
 80023f4:	4b86      	ldr	r3, [pc, #536]	; (8002610 <LCD_SetCursor+0x458>)
 80023f6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80023fa:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA(0);
 80023fc:	4b84      	ldr	r3, [pc, #528]	; (8002610 <LCD_SetCursor+0x458>)
 80023fe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002402:	611a      	str	r2, [r3, #16]
 8002404:	4b82      	ldr	r3, [pc, #520]	; (8002610 <LCD_SetCursor+0x458>)
 8002406:	f44f 7200 	mov.w	r2, #512	; 0x200
 800240a:	615a      	str	r2, [r3, #20]
 800240c:	4b81      	ldr	r3, [pc, #516]	; (8002614 <LCD_SetCursor+0x45c>)
 800240e:	2200      	movs	r2, #0
 8002410:	60da      	str	r2, [r3, #12]
 8002412:	4b7f      	ldr	r3, [pc, #508]	; (8002610 <LCD_SetCursor+0x458>)
 8002414:	2280      	movs	r2, #128	; 0x80
 8002416:	615a      	str	r2, [r3, #20]
 8002418:	4b7d      	ldr	r3, [pc, #500]	; (8002610 <LCD_SetCursor+0x458>)
 800241a:	2280      	movs	r2, #128	; 0x80
 800241c:	611a      	str	r2, [r3, #16]
 800241e:	4b7c      	ldr	r3, [pc, #496]	; (8002610 <LCD_SetCursor+0x458>)
 8002420:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002424:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA(Xpos >> 8);
 8002426:	4b7a      	ldr	r3, [pc, #488]	; (8002610 <LCD_SetCursor+0x458>)
 8002428:	f44f 7280 	mov.w	r2, #256	; 0x100
 800242c:	611a      	str	r2, [r3, #16]
 800242e:	4b78      	ldr	r3, [pc, #480]	; (8002610 <LCD_SetCursor+0x458>)
 8002430:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002434:	615a      	str	r2, [r3, #20]
 8002436:	88fb      	ldrh	r3, [r7, #6]
 8002438:	0a1b      	lsrs	r3, r3, #8
 800243a:	b29a      	uxth	r2, r3
 800243c:	4b75      	ldr	r3, [pc, #468]	; (8002614 <LCD_SetCursor+0x45c>)
 800243e:	60da      	str	r2, [r3, #12]
 8002440:	4b73      	ldr	r3, [pc, #460]	; (8002610 <LCD_SetCursor+0x458>)
 8002442:	2280      	movs	r2, #128	; 0x80
 8002444:	615a      	str	r2, [r3, #20]
 8002446:	4b72      	ldr	r3, [pc, #456]	; (8002610 <LCD_SetCursor+0x458>)
 8002448:	2280      	movs	r2, #128	; 0x80
 800244a:	611a      	str	r2, [r3, #16]
 800244c:	4b70      	ldr	r3, [pc, #448]	; (8002610 <LCD_SetCursor+0x458>)
 800244e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002452:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA(Xpos & 0XFF);
 8002454:	4b6e      	ldr	r3, [pc, #440]	; (8002610 <LCD_SetCursor+0x458>)
 8002456:	f44f 7280 	mov.w	r2, #256	; 0x100
 800245a:	611a      	str	r2, [r3, #16]
 800245c:	4b6c      	ldr	r3, [pc, #432]	; (8002610 <LCD_SetCursor+0x458>)
 800245e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002462:	615a      	str	r2, [r3, #20]
 8002464:	88fb      	ldrh	r3, [r7, #6]
 8002466:	4a6b      	ldr	r2, [pc, #428]	; (8002614 <LCD_SetCursor+0x45c>)
 8002468:	b2db      	uxtb	r3, r3
 800246a:	60d3      	str	r3, [r2, #12]
 800246c:	4b68      	ldr	r3, [pc, #416]	; (8002610 <LCD_SetCursor+0x458>)
 800246e:	2280      	movs	r2, #128	; 0x80
 8002470:	615a      	str	r2, [r3, #20]
 8002472:	4b67      	ldr	r3, [pc, #412]	; (8002610 <LCD_SetCursor+0x458>)
 8002474:	2280      	movs	r2, #128	; 0x80
 8002476:	611a      	str	r2, [r3, #16]
 8002478:	4b65      	ldr	r3, [pc, #404]	; (8002610 <LCD_SetCursor+0x458>)
 800247a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800247e:	611a      	str	r2, [r3, #16]
 8002480:	e061      	b.n	8002546 <LCD_SetCursor+0x38e>
			LCD_WR_REG(lcddev.setxcmd);
 8002482:	4b62      	ldr	r3, [pc, #392]	; (800260c <LCD_SetCursor+0x454>)
 8002484:	895b      	ldrh	r3, [r3, #10]
 8002486:	4618      	mov	r0, r3
 8002488:	f7ff fdc4 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(Xpos >> 8);
 800248c:	4b60      	ldr	r3, [pc, #384]	; (8002610 <LCD_SetCursor+0x458>)
 800248e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002492:	611a      	str	r2, [r3, #16]
 8002494:	4b5e      	ldr	r3, [pc, #376]	; (8002610 <LCD_SetCursor+0x458>)
 8002496:	f44f 7200 	mov.w	r2, #512	; 0x200
 800249a:	615a      	str	r2, [r3, #20]
 800249c:	88fb      	ldrh	r3, [r7, #6]
 800249e:	0a1b      	lsrs	r3, r3, #8
 80024a0:	b29a      	uxth	r2, r3
 80024a2:	4b5c      	ldr	r3, [pc, #368]	; (8002614 <LCD_SetCursor+0x45c>)
 80024a4:	60da      	str	r2, [r3, #12]
 80024a6:	4b5a      	ldr	r3, [pc, #360]	; (8002610 <LCD_SetCursor+0x458>)
 80024a8:	2280      	movs	r2, #128	; 0x80
 80024aa:	615a      	str	r2, [r3, #20]
 80024ac:	4b58      	ldr	r3, [pc, #352]	; (8002610 <LCD_SetCursor+0x458>)
 80024ae:	2280      	movs	r2, #128	; 0x80
 80024b0:	611a      	str	r2, [r3, #16]
 80024b2:	4b57      	ldr	r3, [pc, #348]	; (8002610 <LCD_SetCursor+0x458>)
 80024b4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80024b8:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA(Xpos & 0XFF);
 80024ba:	4b55      	ldr	r3, [pc, #340]	; (8002610 <LCD_SetCursor+0x458>)
 80024bc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024c0:	611a      	str	r2, [r3, #16]
 80024c2:	4b53      	ldr	r3, [pc, #332]	; (8002610 <LCD_SetCursor+0x458>)
 80024c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80024c8:	615a      	str	r2, [r3, #20]
 80024ca:	88fb      	ldrh	r3, [r7, #6]
 80024cc:	4a51      	ldr	r2, [pc, #324]	; (8002614 <LCD_SetCursor+0x45c>)
 80024ce:	b2db      	uxtb	r3, r3
 80024d0:	60d3      	str	r3, [r2, #12]
 80024d2:	4b4f      	ldr	r3, [pc, #316]	; (8002610 <LCD_SetCursor+0x458>)
 80024d4:	2280      	movs	r2, #128	; 0x80
 80024d6:	615a      	str	r2, [r3, #20]
 80024d8:	4b4d      	ldr	r3, [pc, #308]	; (8002610 <LCD_SetCursor+0x458>)
 80024da:	2280      	movs	r2, #128	; 0x80
 80024dc:	611a      	str	r2, [r3, #16]
 80024de:	4b4c      	ldr	r3, [pc, #304]	; (8002610 <LCD_SetCursor+0x458>)
 80024e0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80024e4:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA((lcddev.width - 1) >> 8);
 80024e6:	4b4a      	ldr	r3, [pc, #296]	; (8002610 <LCD_SetCursor+0x458>)
 80024e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024ec:	611a      	str	r2, [r3, #16]
 80024ee:	4b48      	ldr	r3, [pc, #288]	; (8002610 <LCD_SetCursor+0x458>)
 80024f0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80024f4:	615a      	str	r2, [r3, #20]
 80024f6:	4b45      	ldr	r3, [pc, #276]	; (800260c <LCD_SetCursor+0x454>)
 80024f8:	881b      	ldrh	r3, [r3, #0]
 80024fa:	3b01      	subs	r3, #1
 80024fc:	121a      	asrs	r2, r3, #8
 80024fe:	4b45      	ldr	r3, [pc, #276]	; (8002614 <LCD_SetCursor+0x45c>)
 8002500:	60da      	str	r2, [r3, #12]
 8002502:	4b43      	ldr	r3, [pc, #268]	; (8002610 <LCD_SetCursor+0x458>)
 8002504:	2280      	movs	r2, #128	; 0x80
 8002506:	615a      	str	r2, [r3, #20]
 8002508:	4b41      	ldr	r3, [pc, #260]	; (8002610 <LCD_SetCursor+0x458>)
 800250a:	2280      	movs	r2, #128	; 0x80
 800250c:	611a      	str	r2, [r3, #16]
 800250e:	4b40      	ldr	r3, [pc, #256]	; (8002610 <LCD_SetCursor+0x458>)
 8002510:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002514:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA((lcddev.width - 1) & 0XFF);
 8002516:	4b3e      	ldr	r3, [pc, #248]	; (8002610 <LCD_SetCursor+0x458>)
 8002518:	f44f 7280 	mov.w	r2, #256	; 0x100
 800251c:	611a      	str	r2, [r3, #16]
 800251e:	4b3c      	ldr	r3, [pc, #240]	; (8002610 <LCD_SetCursor+0x458>)
 8002520:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002524:	615a      	str	r2, [r3, #20]
 8002526:	4b39      	ldr	r3, [pc, #228]	; (800260c <LCD_SetCursor+0x454>)
 8002528:	881b      	ldrh	r3, [r3, #0]
 800252a:	3b01      	subs	r3, #1
 800252c:	4a39      	ldr	r2, [pc, #228]	; (8002614 <LCD_SetCursor+0x45c>)
 800252e:	b2db      	uxtb	r3, r3
 8002530:	60d3      	str	r3, [r2, #12]
 8002532:	4b37      	ldr	r3, [pc, #220]	; (8002610 <LCD_SetCursor+0x458>)
 8002534:	2280      	movs	r2, #128	; 0x80
 8002536:	615a      	str	r2, [r3, #20]
 8002538:	4b35      	ldr	r3, [pc, #212]	; (8002610 <LCD_SetCursor+0x458>)
 800253a:	2280      	movs	r2, #128	; 0x80
 800253c:	611a      	str	r2, [r3, #16]
 800253e:	4b34      	ldr	r3, [pc, #208]	; (8002610 <LCD_SetCursor+0x458>)
 8002540:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002544:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8002546:	4b31      	ldr	r3, [pc, #196]	; (800260c <LCD_SetCursor+0x454>)
 8002548:	899b      	ldrh	r3, [r3, #12]
 800254a:	4618      	mov	r0, r3
 800254c:	f7ff fd62 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Ypos >> 8);
 8002550:	4b2f      	ldr	r3, [pc, #188]	; (8002610 <LCD_SetCursor+0x458>)
 8002552:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002556:	611a      	str	r2, [r3, #16]
 8002558:	4b2d      	ldr	r3, [pc, #180]	; (8002610 <LCD_SetCursor+0x458>)
 800255a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800255e:	615a      	str	r2, [r3, #20]
 8002560:	88bb      	ldrh	r3, [r7, #4]
 8002562:	0a1b      	lsrs	r3, r3, #8
 8002564:	b29a      	uxth	r2, r3
 8002566:	4b2b      	ldr	r3, [pc, #172]	; (8002614 <LCD_SetCursor+0x45c>)
 8002568:	60da      	str	r2, [r3, #12]
 800256a:	4b29      	ldr	r3, [pc, #164]	; (8002610 <LCD_SetCursor+0x458>)
 800256c:	2280      	movs	r2, #128	; 0x80
 800256e:	615a      	str	r2, [r3, #20]
 8002570:	4b27      	ldr	r3, [pc, #156]	; (8002610 <LCD_SetCursor+0x458>)
 8002572:	2280      	movs	r2, #128	; 0x80
 8002574:	611a      	str	r2, [r3, #16]
 8002576:	4b26      	ldr	r3, [pc, #152]	; (8002610 <LCD_SetCursor+0x458>)
 8002578:	f44f 7200 	mov.w	r2, #512	; 0x200
 800257c:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(Ypos & 0XFF);
 800257e:	4b24      	ldr	r3, [pc, #144]	; (8002610 <LCD_SetCursor+0x458>)
 8002580:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002584:	611a      	str	r2, [r3, #16]
 8002586:	4b22      	ldr	r3, [pc, #136]	; (8002610 <LCD_SetCursor+0x458>)
 8002588:	f44f 7200 	mov.w	r2, #512	; 0x200
 800258c:	615a      	str	r2, [r3, #20]
 800258e:	88bb      	ldrh	r3, [r7, #4]
 8002590:	4a20      	ldr	r2, [pc, #128]	; (8002614 <LCD_SetCursor+0x45c>)
 8002592:	b2db      	uxtb	r3, r3
 8002594:	60d3      	str	r3, [r2, #12]
 8002596:	4b1e      	ldr	r3, [pc, #120]	; (8002610 <LCD_SetCursor+0x458>)
 8002598:	2280      	movs	r2, #128	; 0x80
 800259a:	615a      	str	r2, [r3, #20]
 800259c:	4b1c      	ldr	r3, [pc, #112]	; (8002610 <LCD_SetCursor+0x458>)
 800259e:	2280      	movs	r2, #128	; 0x80
 80025a0:	611a      	str	r2, [r3, #16]
 80025a2:	4b1b      	ldr	r3, [pc, #108]	; (8002610 <LCD_SetCursor+0x458>)
 80025a4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80025a8:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA((lcddev.height - 1) >> 8);
 80025aa:	4b19      	ldr	r3, [pc, #100]	; (8002610 <LCD_SetCursor+0x458>)
 80025ac:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025b0:	611a      	str	r2, [r3, #16]
 80025b2:	4b17      	ldr	r3, [pc, #92]	; (8002610 <LCD_SetCursor+0x458>)
 80025b4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80025b8:	615a      	str	r2, [r3, #20]
 80025ba:	4b14      	ldr	r3, [pc, #80]	; (800260c <LCD_SetCursor+0x454>)
 80025bc:	885b      	ldrh	r3, [r3, #2]
 80025be:	3b01      	subs	r3, #1
 80025c0:	121a      	asrs	r2, r3, #8
 80025c2:	4b14      	ldr	r3, [pc, #80]	; (8002614 <LCD_SetCursor+0x45c>)
 80025c4:	60da      	str	r2, [r3, #12]
 80025c6:	4b12      	ldr	r3, [pc, #72]	; (8002610 <LCD_SetCursor+0x458>)
 80025c8:	2280      	movs	r2, #128	; 0x80
 80025ca:	615a      	str	r2, [r3, #20]
 80025cc:	4b10      	ldr	r3, [pc, #64]	; (8002610 <LCD_SetCursor+0x458>)
 80025ce:	2280      	movs	r2, #128	; 0x80
 80025d0:	611a      	str	r2, [r3, #16]
 80025d2:	4b0f      	ldr	r3, [pc, #60]	; (8002610 <LCD_SetCursor+0x458>)
 80025d4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80025d8:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA((lcddev.height - 1) & 0XFF);
 80025da:	4b0d      	ldr	r3, [pc, #52]	; (8002610 <LCD_SetCursor+0x458>)
 80025dc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025e0:	611a      	str	r2, [r3, #16]
 80025e2:	4b0b      	ldr	r3, [pc, #44]	; (8002610 <LCD_SetCursor+0x458>)
 80025e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80025e8:	615a      	str	r2, [r3, #20]
 80025ea:	4b08      	ldr	r3, [pc, #32]	; (800260c <LCD_SetCursor+0x454>)
 80025ec:	885b      	ldrh	r3, [r3, #2]
 80025ee:	3b01      	subs	r3, #1
 80025f0:	4a08      	ldr	r2, [pc, #32]	; (8002614 <LCD_SetCursor+0x45c>)
 80025f2:	b2db      	uxtb	r3, r3
 80025f4:	60d3      	str	r3, [r2, #12]
 80025f6:	4b06      	ldr	r3, [pc, #24]	; (8002610 <LCD_SetCursor+0x458>)
 80025f8:	2280      	movs	r2, #128	; 0x80
 80025fa:	615a      	str	r2, [r3, #20]
 80025fc:	4b04      	ldr	r3, [pc, #16]	; (8002610 <LCD_SetCursor+0x458>)
 80025fe:	2280      	movs	r2, #128	; 0x80
 8002600:	611a      	str	r2, [r3, #16]
 8002602:	4b03      	ldr	r3, [pc, #12]	; (8002610 <LCD_SetCursor+0x458>)
 8002604:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002608:	611a      	str	r2, [r3, #16]
}
 800260a:	e097      	b.n	800273c <LCD_SetCursor+0x584>
 800260c:	200000a8 	.word	0x200000a8
 8002610:	40011000 	.word	0x40011000
 8002614:	40010c00 	.word	0x40010c00
	} else if (lcddev.id == 0X5510) {
 8002618:	4b4a      	ldr	r3, [pc, #296]	; (8002744 <LCD_SetCursor+0x58c>)
 800261a:	889b      	ldrh	r3, [r3, #4]
 800261c:	f245 5210 	movw	r2, #21776	; 0x5510
 8002620:	4293      	cmp	r3, r2
 8002622:	d172      	bne.n	800270a <LCD_SetCursor+0x552>
		LCD_WR_REG(lcddev.setxcmd);
 8002624:	4b47      	ldr	r3, [pc, #284]	; (8002744 <LCD_SetCursor+0x58c>)
 8002626:	895b      	ldrh	r3, [r3, #10]
 8002628:	4618      	mov	r0, r3
 800262a:	f7ff fcf3 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Xpos >> 8);
 800262e:	4b46      	ldr	r3, [pc, #280]	; (8002748 <LCD_SetCursor+0x590>)
 8002630:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002634:	611a      	str	r2, [r3, #16]
 8002636:	4b44      	ldr	r3, [pc, #272]	; (8002748 <LCD_SetCursor+0x590>)
 8002638:	f44f 7200 	mov.w	r2, #512	; 0x200
 800263c:	615a      	str	r2, [r3, #20]
 800263e:	88fb      	ldrh	r3, [r7, #6]
 8002640:	0a1b      	lsrs	r3, r3, #8
 8002642:	b29a      	uxth	r2, r3
 8002644:	4b41      	ldr	r3, [pc, #260]	; (800274c <LCD_SetCursor+0x594>)
 8002646:	60da      	str	r2, [r3, #12]
 8002648:	4b3f      	ldr	r3, [pc, #252]	; (8002748 <LCD_SetCursor+0x590>)
 800264a:	2280      	movs	r2, #128	; 0x80
 800264c:	615a      	str	r2, [r3, #20]
 800264e:	4b3e      	ldr	r3, [pc, #248]	; (8002748 <LCD_SetCursor+0x590>)
 8002650:	2280      	movs	r2, #128	; 0x80
 8002652:	611a      	str	r2, [r3, #16]
 8002654:	4b3c      	ldr	r3, [pc, #240]	; (8002748 <LCD_SetCursor+0x590>)
 8002656:	f44f 7200 	mov.w	r2, #512	; 0x200
 800265a:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setxcmd + 1);
 800265c:	4b39      	ldr	r3, [pc, #228]	; (8002744 <LCD_SetCursor+0x58c>)
 800265e:	895b      	ldrh	r3, [r3, #10]
 8002660:	3301      	adds	r3, #1
 8002662:	b29b      	uxth	r3, r3
 8002664:	4618      	mov	r0, r3
 8002666:	f7ff fcd5 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Xpos & 0XFF);
 800266a:	4b37      	ldr	r3, [pc, #220]	; (8002748 <LCD_SetCursor+0x590>)
 800266c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002670:	611a      	str	r2, [r3, #16]
 8002672:	4b35      	ldr	r3, [pc, #212]	; (8002748 <LCD_SetCursor+0x590>)
 8002674:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002678:	615a      	str	r2, [r3, #20]
 800267a:	88fb      	ldrh	r3, [r7, #6]
 800267c:	4a33      	ldr	r2, [pc, #204]	; (800274c <LCD_SetCursor+0x594>)
 800267e:	b2db      	uxtb	r3, r3
 8002680:	60d3      	str	r3, [r2, #12]
 8002682:	4b31      	ldr	r3, [pc, #196]	; (8002748 <LCD_SetCursor+0x590>)
 8002684:	2280      	movs	r2, #128	; 0x80
 8002686:	615a      	str	r2, [r3, #20]
 8002688:	4b2f      	ldr	r3, [pc, #188]	; (8002748 <LCD_SetCursor+0x590>)
 800268a:	2280      	movs	r2, #128	; 0x80
 800268c:	611a      	str	r2, [r3, #16]
 800268e:	4b2e      	ldr	r3, [pc, #184]	; (8002748 <LCD_SetCursor+0x590>)
 8002690:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002694:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8002696:	4b2b      	ldr	r3, [pc, #172]	; (8002744 <LCD_SetCursor+0x58c>)
 8002698:	899b      	ldrh	r3, [r3, #12]
 800269a:	4618      	mov	r0, r3
 800269c:	f7ff fcba 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Ypos >> 8);
 80026a0:	4b29      	ldr	r3, [pc, #164]	; (8002748 <LCD_SetCursor+0x590>)
 80026a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026a6:	611a      	str	r2, [r3, #16]
 80026a8:	4b27      	ldr	r3, [pc, #156]	; (8002748 <LCD_SetCursor+0x590>)
 80026aa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80026ae:	615a      	str	r2, [r3, #20]
 80026b0:	88bb      	ldrh	r3, [r7, #4]
 80026b2:	0a1b      	lsrs	r3, r3, #8
 80026b4:	b29a      	uxth	r2, r3
 80026b6:	4b25      	ldr	r3, [pc, #148]	; (800274c <LCD_SetCursor+0x594>)
 80026b8:	60da      	str	r2, [r3, #12]
 80026ba:	4b23      	ldr	r3, [pc, #140]	; (8002748 <LCD_SetCursor+0x590>)
 80026bc:	2280      	movs	r2, #128	; 0x80
 80026be:	615a      	str	r2, [r3, #20]
 80026c0:	4b21      	ldr	r3, [pc, #132]	; (8002748 <LCD_SetCursor+0x590>)
 80026c2:	2280      	movs	r2, #128	; 0x80
 80026c4:	611a      	str	r2, [r3, #16]
 80026c6:	4b20      	ldr	r3, [pc, #128]	; (8002748 <LCD_SetCursor+0x590>)
 80026c8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80026cc:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd + 1);
 80026ce:	4b1d      	ldr	r3, [pc, #116]	; (8002744 <LCD_SetCursor+0x58c>)
 80026d0:	899b      	ldrh	r3, [r3, #12]
 80026d2:	3301      	adds	r3, #1
 80026d4:	b29b      	uxth	r3, r3
 80026d6:	4618      	mov	r0, r3
 80026d8:	f7ff fc9c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(Ypos & 0XFF);
 80026dc:	4b1a      	ldr	r3, [pc, #104]	; (8002748 <LCD_SetCursor+0x590>)
 80026de:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026e2:	611a      	str	r2, [r3, #16]
 80026e4:	4b18      	ldr	r3, [pc, #96]	; (8002748 <LCD_SetCursor+0x590>)
 80026e6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80026ea:	615a      	str	r2, [r3, #20]
 80026ec:	88bb      	ldrh	r3, [r7, #4]
 80026ee:	4a17      	ldr	r2, [pc, #92]	; (800274c <LCD_SetCursor+0x594>)
 80026f0:	b2db      	uxtb	r3, r3
 80026f2:	60d3      	str	r3, [r2, #12]
 80026f4:	4b14      	ldr	r3, [pc, #80]	; (8002748 <LCD_SetCursor+0x590>)
 80026f6:	2280      	movs	r2, #128	; 0x80
 80026f8:	615a      	str	r2, [r3, #20]
 80026fa:	4b13      	ldr	r3, [pc, #76]	; (8002748 <LCD_SetCursor+0x590>)
 80026fc:	2280      	movs	r2, #128	; 0x80
 80026fe:	611a      	str	r2, [r3, #16]
 8002700:	4b11      	ldr	r3, [pc, #68]	; (8002748 <LCD_SetCursor+0x590>)
 8002702:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002706:	611a      	str	r2, [r3, #16]
}
 8002708:	e018      	b.n	800273c <LCD_SetCursor+0x584>
		if (lcddev.dir == 1)
 800270a:	4b0e      	ldr	r3, [pc, #56]	; (8002744 <LCD_SetCursor+0x58c>)
 800270c:	799b      	ldrb	r3, [r3, #6]
 800270e:	2b01      	cmp	r3, #1
 8002710:	d106      	bne.n	8002720 <LCD_SetCursor+0x568>
			Xpos = lcddev.width - 1 - Xpos;	//横屏其实就是调转x,y坐标
 8002712:	4b0c      	ldr	r3, [pc, #48]	; (8002744 <LCD_SetCursor+0x58c>)
 8002714:	881a      	ldrh	r2, [r3, #0]
 8002716:	88fb      	ldrh	r3, [r7, #6]
 8002718:	1ad3      	subs	r3, r2, r3
 800271a:	b29b      	uxth	r3, r3
 800271c:	3b01      	subs	r3, #1
 800271e:	80fb      	strh	r3, [r7, #6]
		LCD_WriteReg(lcddev.setxcmd, Xpos);
 8002720:	4b08      	ldr	r3, [pc, #32]	; (8002744 <LCD_SetCursor+0x58c>)
 8002722:	895b      	ldrh	r3, [r3, #10]
 8002724:	88fa      	ldrh	r2, [r7, #6]
 8002726:	4611      	mov	r1, r2
 8002728:	4618      	mov	r0, r3
 800272a:	f7ff fcff 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(lcddev.setycmd, Ypos);
 800272e:	4b05      	ldr	r3, [pc, #20]	; (8002744 <LCD_SetCursor+0x58c>)
 8002730:	899b      	ldrh	r3, [r3, #12]
 8002732:	88ba      	ldrh	r2, [r7, #4]
 8002734:	4611      	mov	r1, r2
 8002736:	4618      	mov	r0, r3
 8002738:	f7ff fcf8 	bl	800212c <LCD_WriteReg>
}
 800273c:	bf00      	nop
 800273e:	3708      	adds	r7, #8
 8002740:	46bd      	mov	sp, r7
 8002742:	bd80      	pop	{r7, pc}
 8002744:	200000a8 	.word	0x200000a8
 8002748:	40011000 	.word	0x40011000
 800274c:	40010c00 	.word	0x40010c00

08002750 <LCD_Scan_Dir>:
//设置LCD的自动扫描方向
//注意:其他函数可能会受到此函数设置的影响(尤其是9341/6804这两个奇葩),
//所以,一般设置为L2R_U2D即可,如果设置为其他扫描方式,可能导致显示不正常.
//dir:0~7,代表8个方向(具体定义见lcd.h)
//9320/9325/9328/4531/4535/1505/b505/5408/9341/5310/5510/1963等IC已经实际测试	   	   
void LCD_Scan_Dir(uint8_t dir) {
 8002750:	b580      	push	{r7, lr}
 8002752:	b084      	sub	sp, #16
 8002754:	af00      	add	r7, sp, #0
 8002756:	4603      	mov	r3, r0
 8002758:	71fb      	strb	r3, [r7, #7]
	uint16_t regval = 0;
 800275a:	2300      	movs	r3, #0
 800275c:	81fb      	strh	r3, [r7, #14]
	uint16_t dirreg = 0;
 800275e:	2300      	movs	r3, #0
 8002760:	81bb      	strh	r3, [r7, #12]
	uint16_t temp;
	if ((lcddev.dir == 1 && lcddev.id != 0X6804 && lcddev.id != 0X1963)
 8002762:	4b78      	ldr	r3, [pc, #480]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002764:	799b      	ldrb	r3, [r3, #6]
 8002766:	2b01      	cmp	r3, #1
 8002768:	d10b      	bne.n	8002782 <LCD_Scan_Dir+0x32>
 800276a:	4b76      	ldr	r3, [pc, #472]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800276c:	889b      	ldrh	r3, [r3, #4]
 800276e:	f646 0204 	movw	r2, #26628	; 0x6804
 8002772:	4293      	cmp	r3, r2
 8002774:	d005      	beq.n	8002782 <LCD_Scan_Dir+0x32>
 8002776:	4b73      	ldr	r3, [pc, #460]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002778:	889b      	ldrh	r3, [r3, #4]
 800277a:	f641 1263 	movw	r2, #6499	; 0x1963
 800277e:	4293      	cmp	r3, r2
 8002780:	d109      	bne.n	8002796 <LCD_Scan_Dir+0x46>
			|| (lcddev.dir == 0 && lcddev.id == 0X1963))//横屏时，对6804和1963不改变扫描方向！竖屏时1963改变方向
 8002782:	4b70      	ldr	r3, [pc, #448]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002784:	799b      	ldrb	r3, [r3, #6]
 8002786:	2b00      	cmp	r3, #0
 8002788:	d134      	bne.n	80027f4 <LCD_Scan_Dir+0xa4>
 800278a:	4b6e      	ldr	r3, [pc, #440]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800278c:	889b      	ldrh	r3, [r3, #4]
 800278e:	f641 1263 	movw	r2, #6499	; 0x1963
 8002792:	4293      	cmp	r3, r2
 8002794:	d12e      	bne.n	80027f4 <LCD_Scan_Dir+0xa4>
			{
		switch (dir)	//方向转换
 8002796:	79fb      	ldrb	r3, [r7, #7]
 8002798:	2b07      	cmp	r3, #7
 800279a:	d82b      	bhi.n	80027f4 <LCD_Scan_Dir+0xa4>
 800279c:	a201      	add	r2, pc, #4	; (adr r2, 80027a4 <LCD_Scan_Dir+0x54>)
 800279e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027a2:	bf00      	nop
 80027a4:	080027c5 	.word	0x080027c5
 80027a8:	080027cb 	.word	0x080027cb
 80027ac:	080027d1 	.word	0x080027d1
 80027b0:	080027d7 	.word	0x080027d7
 80027b4:	080027dd 	.word	0x080027dd
 80027b8:	080027e3 	.word	0x080027e3
 80027bc:	080027e9 	.word	0x080027e9
 80027c0:	080027ef 	.word	0x080027ef
		{
		case 0:
			dir = 6;
 80027c4:	2306      	movs	r3, #6
 80027c6:	71fb      	strb	r3, [r7, #7]
			break;
 80027c8:	e014      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 1:
			dir = 7;
 80027ca:	2307      	movs	r3, #7
 80027cc:	71fb      	strb	r3, [r7, #7]
			break;
 80027ce:	e011      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 2:
			dir = 4;
 80027d0:	2304      	movs	r3, #4
 80027d2:	71fb      	strb	r3, [r7, #7]
			break;
 80027d4:	e00e      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 3:
			dir = 5;
 80027d6:	2305      	movs	r3, #5
 80027d8:	71fb      	strb	r3, [r7, #7]
			break;
 80027da:	e00b      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 4:
			dir = 1;
 80027dc:	2301      	movs	r3, #1
 80027de:	71fb      	strb	r3, [r7, #7]
			break;
 80027e0:	e008      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 5:
			dir = 0;
 80027e2:	2300      	movs	r3, #0
 80027e4:	71fb      	strb	r3, [r7, #7]
			break;
 80027e6:	e005      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 6:
			dir = 3;
 80027e8:	2303      	movs	r3, #3
 80027ea:	71fb      	strb	r3, [r7, #7]
			break;
 80027ec:	e002      	b.n	80027f4 <LCD_Scan_Dir+0xa4>
		case 7:
			dir = 2;
 80027ee:	2302      	movs	r3, #2
 80027f0:	71fb      	strb	r3, [r7, #7]
			break;
 80027f2:	bf00      	nop
		}
	}
	if (lcddev.id == 0x9341 || lcddev.id == 0X6804 || lcddev.id == 0X5310
 80027f4:	4b53      	ldr	r3, [pc, #332]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 80027f6:	889b      	ldrh	r3, [r3, #4]
 80027f8:	f249 3241 	movw	r2, #37697	; 0x9341
 80027fc:	4293      	cmp	r3, r2
 80027fe:	d018      	beq.n	8002832 <LCD_Scan_Dir+0xe2>
 8002800:	4b50      	ldr	r3, [pc, #320]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002802:	889b      	ldrh	r3, [r3, #4]
 8002804:	f646 0204 	movw	r2, #26628	; 0x6804
 8002808:	4293      	cmp	r3, r2
 800280a:	d012      	beq.n	8002832 <LCD_Scan_Dir+0xe2>
 800280c:	4b4d      	ldr	r3, [pc, #308]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800280e:	889b      	ldrh	r3, [r3, #4]
 8002810:	f245 3210 	movw	r2, #21264	; 0x5310
 8002814:	4293      	cmp	r3, r2
 8002816:	d00c      	beq.n	8002832 <LCD_Scan_Dir+0xe2>
			|| lcddev.id == 0X5510 || lcddev.id == 0X1963)//9341/6804/5310/5510/1963,特殊处理
 8002818:	4b4a      	ldr	r3, [pc, #296]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800281a:	889b      	ldrh	r3, [r3, #4]
 800281c:	f245 5210 	movw	r2, #21776	; 0x5510
 8002820:	4293      	cmp	r3, r2
 8002822:	d006      	beq.n	8002832 <LCD_Scan_Dir+0xe2>
 8002824:	4b47      	ldr	r3, [pc, #284]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002826:	889b      	ldrh	r3, [r3, #4]
 8002828:	f641 1263 	movw	r2, #6499	; 0x1963
 800282c:	4293      	cmp	r3, r2
 800282e:	f040 8250 	bne.w	8002cd2 <LCD_Scan_Dir+0x582>
					{
		switch (dir) {
 8002832:	79fb      	ldrb	r3, [r7, #7]
 8002834:	2b07      	cmp	r3, #7
 8002836:	d836      	bhi.n	80028a6 <LCD_Scan_Dir+0x156>
 8002838:	a201      	add	r2, pc, #4	; (adr r2, 8002840 <LCD_Scan_Dir+0xf0>)
 800283a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800283e:	bf00      	nop
 8002840:	080028a7 	.word	0x080028a7
 8002844:	08002861 	.word	0x08002861
 8002848:	0800286b 	.word	0x0800286b
 800284c:	08002875 	.word	0x08002875
 8002850:	0800287f 	.word	0x0800287f
 8002854:	08002889 	.word	0x08002889
 8002858:	08002893 	.word	0x08002893
 800285c:	0800289d 	.word	0x0800289d
		case L2R_U2D:	//从左到右,从上到下
			regval |= (0 << 7) | (0 << 6) | (0 << 5);
			break;
		case L2R_D2U:	//从左到右,从下到上
			regval |= (1 << 7) | (0 << 6) | (0 << 5);
 8002860:	89fb      	ldrh	r3, [r7, #14]
 8002862:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002866:	81fb      	strh	r3, [r7, #14]
			break;
 8002868:	e01d      	b.n	80028a6 <LCD_Scan_Dir+0x156>
		case R2L_U2D:	//从右到左,从上到下
			regval |= (0 << 7) | (1 << 6) | (0 << 5);
 800286a:	89fb      	ldrh	r3, [r7, #14]
 800286c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002870:	81fb      	strh	r3, [r7, #14]
			break;
 8002872:	e018      	b.n	80028a6 <LCD_Scan_Dir+0x156>
		case R2L_D2U:	//从右到左,从下到上
			regval |= (1 << 7) | (1 << 6) | (0 << 5);
 8002874:	89fb      	ldrh	r3, [r7, #14]
 8002876:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800287a:	81fb      	strh	r3, [r7, #14]
			break;
 800287c:	e013      	b.n	80028a6 <LCD_Scan_Dir+0x156>
		case U2D_L2R:	//从上到下,从左到右
			regval |= (0 << 7) | (0 << 6) | (1 << 5);
 800287e:	89fb      	ldrh	r3, [r7, #14]
 8002880:	f043 0320 	orr.w	r3, r3, #32
 8002884:	81fb      	strh	r3, [r7, #14]
			break;
 8002886:	e00e      	b.n	80028a6 <LCD_Scan_Dir+0x156>
		case U2D_R2L:	//从上到下,从右到左
			regval |= (0 << 7) | (1 << 6) | (1 << 5);
 8002888:	89fb      	ldrh	r3, [r7, #14]
 800288a:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 800288e:	81fb      	strh	r3, [r7, #14]
			break;
 8002890:	e009      	b.n	80028a6 <LCD_Scan_Dir+0x156>
		case D2U_L2R:	//从下到上,从左到右
			regval |= (1 << 7) | (0 << 6) | (1 << 5);
 8002892:	89fb      	ldrh	r3, [r7, #14]
 8002894:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8002898:	81fb      	strh	r3, [r7, #14]
			break;
 800289a:	e004      	b.n	80028a6 <LCD_Scan_Dir+0x156>
		case D2U_R2L:	//从下到上,从右到左
			regval |= (1 << 7) | (1 << 6) | (1 << 5);
 800289c:	89fb      	ldrh	r3, [r7, #14]
 800289e:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 80028a2:	81fb      	strh	r3, [r7, #14]
			break;
 80028a4:	bf00      	nop
		}
		if (lcddev.id == 0X5510)
 80028a6:	4b27      	ldr	r3, [pc, #156]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 80028a8:	889b      	ldrh	r3, [r3, #4]
 80028aa:	f245 5210 	movw	r2, #21776	; 0x5510
 80028ae:	4293      	cmp	r3, r2
 80028b0:	d103      	bne.n	80028ba <LCD_Scan_Dir+0x16a>
			dirreg = 0X3600;
 80028b2:	f44f 5358 	mov.w	r3, #13824	; 0x3600
 80028b6:	81bb      	strh	r3, [r7, #12]
 80028b8:	e001      	b.n	80028be <LCD_Scan_Dir+0x16e>
		else
			dirreg = 0X36;
 80028ba:	2336      	movs	r3, #54	; 0x36
 80028bc:	81bb      	strh	r3, [r7, #12]
		if ((lcddev.id != 0X5310) && (lcddev.id != 0X5510) && (lcddev.id != 0X1963))
 80028be:	4b21      	ldr	r3, [pc, #132]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 80028c0:	889b      	ldrh	r3, [r3, #4]
 80028c2:	f245 3210 	movw	r2, #21264	; 0x5310
 80028c6:	4293      	cmp	r3, r2
 80028c8:	d00f      	beq.n	80028ea <LCD_Scan_Dir+0x19a>
 80028ca:	4b1e      	ldr	r3, [pc, #120]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 80028cc:	889b      	ldrh	r3, [r3, #4]
 80028ce:	f245 5210 	movw	r2, #21776	; 0x5510
 80028d2:	4293      	cmp	r3, r2
 80028d4:	d009      	beq.n	80028ea <LCD_Scan_Dir+0x19a>
 80028d6:	4b1b      	ldr	r3, [pc, #108]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 80028d8:	889b      	ldrh	r3, [r3, #4]
 80028da:	f641 1263 	movw	r2, #6499	; 0x1963
 80028de:	4293      	cmp	r3, r2
 80028e0:	d003      	beq.n	80028ea <LCD_Scan_Dir+0x19a>
			regval |= 0X08;	//5310/5510/1963不需要BGR
 80028e2:	89fb      	ldrh	r3, [r7, #14]
 80028e4:	f043 0308 	orr.w	r3, r3, #8
 80028e8:	81fb      	strh	r3, [r7, #14]
		if (lcddev.id == 0X6804)
 80028ea:	4b16      	ldr	r3, [pc, #88]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 80028ec:	889b      	ldrh	r3, [r3, #4]
 80028ee:	f646 0204 	movw	r2, #26628	; 0x6804
 80028f2:	4293      	cmp	r3, r2
 80028f4:	d103      	bne.n	80028fe <LCD_Scan_Dir+0x1ae>
			regval |= 0x02;	//6804的BIT6和9341的反了
 80028f6:	89fb      	ldrh	r3, [r7, #14]
 80028f8:	f043 0302 	orr.w	r3, r3, #2
 80028fc:	81fb      	strh	r3, [r7, #14]
		LCD_WriteReg(dirreg, regval);
 80028fe:	89fa      	ldrh	r2, [r7, #14]
 8002900:	89bb      	ldrh	r3, [r7, #12]
 8002902:	4611      	mov	r1, r2
 8002904:	4618      	mov	r0, r3
 8002906:	f7ff fc11 	bl	800212c <LCD_WriteReg>
		if (lcddev.id != 0X1963)	//1963不做坐标处理
 800290a:	4b0e      	ldr	r3, [pc, #56]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800290c:	889b      	ldrh	r3, [r3, #4]
 800290e:	f641 1263 	movw	r2, #6499	; 0x1963
 8002912:	4293      	cmp	r3, r2
 8002914:	d028      	beq.n	8002968 <LCD_Scan_Dir+0x218>
				{
			if (regval & 0X20) {
 8002916:	89fb      	ldrh	r3, [r7, #14]
 8002918:	f003 0320 	and.w	r3, r3, #32
 800291c:	2b00      	cmp	r3, #0
 800291e:	d013      	beq.n	8002948 <LCD_Scan_Dir+0x1f8>
				if (lcddev.width < lcddev.height)	//交换X,Y
 8002920:	4b08      	ldr	r3, [pc, #32]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002922:	881a      	ldrh	r2, [r3, #0]
 8002924:	4b07      	ldr	r3, [pc, #28]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002926:	885b      	ldrh	r3, [r3, #2]
 8002928:	429a      	cmp	r2, r3
 800292a:	d21d      	bcs.n	8002968 <LCD_Scan_Dir+0x218>
						{
					temp = lcddev.width;
 800292c:	4b05      	ldr	r3, [pc, #20]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800292e:	881b      	ldrh	r3, [r3, #0]
 8002930:	817b      	strh	r3, [r7, #10]
					lcddev.width = lcddev.height;
 8002932:	4b04      	ldr	r3, [pc, #16]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002934:	885a      	ldrh	r2, [r3, #2]
 8002936:	4b03      	ldr	r3, [pc, #12]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 8002938:	801a      	strh	r2, [r3, #0]
					lcddev.height = temp;
 800293a:	4a02      	ldr	r2, [pc, #8]	; (8002944 <LCD_Scan_Dir+0x1f4>)
 800293c:	897b      	ldrh	r3, [r7, #10]
 800293e:	8053      	strh	r3, [r2, #2]
 8002940:	e012      	b.n	8002968 <LCD_Scan_Dir+0x218>
 8002942:	bf00      	nop
 8002944:	200000a8 	.word	0x200000a8
				}
			} else {
				if (lcddev.width > lcddev.height)	//交换X,Y
 8002948:	4b7f      	ldr	r3, [pc, #508]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 800294a:	881a      	ldrh	r2, [r3, #0]
 800294c:	4b7e      	ldr	r3, [pc, #504]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 800294e:	885b      	ldrh	r3, [r3, #2]
 8002950:	429a      	cmp	r2, r3
 8002952:	d909      	bls.n	8002968 <LCD_Scan_Dir+0x218>
						{
					temp = lcddev.width;
 8002954:	4b7c      	ldr	r3, [pc, #496]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002956:	881b      	ldrh	r3, [r3, #0]
 8002958:	817b      	strh	r3, [r7, #10]
					lcddev.width = lcddev.height;
 800295a:	4b7b      	ldr	r3, [pc, #492]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 800295c:	885a      	ldrh	r2, [r3, #2]
 800295e:	4b7a      	ldr	r3, [pc, #488]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002960:	801a      	strh	r2, [r3, #0]
					lcddev.height = temp;
 8002962:	4a79      	ldr	r2, [pc, #484]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002964:	897b      	ldrh	r3, [r7, #10]
 8002966:	8053      	strh	r3, [r2, #2]
				}
			}
		}
		if (lcddev.id == 0X5510) {
 8002968:	4b77      	ldr	r3, [pc, #476]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 800296a:	889b      	ldrh	r3, [r3, #4]
 800296c:	f245 5210 	movw	r2, #21776	; 0x5510
 8002970:	4293      	cmp	r3, r2
 8002972:	f040 80ef 	bne.w	8002b54 <LCD_Scan_Dir+0x404>
			LCD_WR_REG(lcddev.setxcmd);
 8002976:	4b74      	ldr	r3, [pc, #464]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002978:	895b      	ldrh	r3, [r3, #10]
 800297a:	4618      	mov	r0, r3
 800297c:	f7ff fb4a 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 8002980:	4b72      	ldr	r3, [pc, #456]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002982:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002986:	611a      	str	r2, [r3, #16]
 8002988:	4b70      	ldr	r3, [pc, #448]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 800298a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800298e:	615a      	str	r2, [r3, #20]
 8002990:	4b6f      	ldr	r3, [pc, #444]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002992:	2200      	movs	r2, #0
 8002994:	60da      	str	r2, [r3, #12]
 8002996:	4b6d      	ldr	r3, [pc, #436]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002998:	2280      	movs	r2, #128	; 0x80
 800299a:	615a      	str	r2, [r3, #20]
 800299c:	4b6b      	ldr	r3, [pc, #428]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 800299e:	2280      	movs	r2, #128	; 0x80
 80029a0:	611a      	str	r2, [r3, #16]
 80029a2:	4b6a      	ldr	r3, [pc, #424]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029a4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80029a8:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setxcmd + 1);
 80029aa:	4b67      	ldr	r3, [pc, #412]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 80029ac:	895b      	ldrh	r3, [r3, #10]
 80029ae:	3301      	adds	r3, #1
 80029b0:	b29b      	uxth	r3, r3
 80029b2:	4618      	mov	r0, r3
 80029b4:	f7ff fb2e 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 80029b8:	4b64      	ldr	r3, [pc, #400]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029ba:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029be:	611a      	str	r2, [r3, #16]
 80029c0:	4b62      	ldr	r3, [pc, #392]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029c2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80029c6:	615a      	str	r2, [r3, #20]
 80029c8:	4b61      	ldr	r3, [pc, #388]	; (8002b50 <LCD_Scan_Dir+0x400>)
 80029ca:	2200      	movs	r2, #0
 80029cc:	60da      	str	r2, [r3, #12]
 80029ce:	4b5f      	ldr	r3, [pc, #380]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029d0:	2280      	movs	r2, #128	; 0x80
 80029d2:	615a      	str	r2, [r3, #20]
 80029d4:	4b5d      	ldr	r3, [pc, #372]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029d6:	2280      	movs	r2, #128	; 0x80
 80029d8:	611a      	str	r2, [r3, #16]
 80029da:	4b5c      	ldr	r3, [pc, #368]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029dc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80029e0:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setxcmd + 2);
 80029e2:	4b59      	ldr	r3, [pc, #356]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 80029e4:	895b      	ldrh	r3, [r3, #10]
 80029e6:	3302      	adds	r3, #2
 80029e8:	b29b      	uxth	r3, r3
 80029ea:	4618      	mov	r0, r3
 80029ec:	f7ff fb12 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA((lcddev.width - 1) >> 8);
 80029f0:	4b56      	ldr	r3, [pc, #344]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029f2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029f6:	611a      	str	r2, [r3, #16]
 80029f8:	4b54      	ldr	r3, [pc, #336]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 80029fa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80029fe:	615a      	str	r2, [r3, #20]
 8002a00:	4b51      	ldr	r3, [pc, #324]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002a02:	881b      	ldrh	r3, [r3, #0]
 8002a04:	3b01      	subs	r3, #1
 8002a06:	121a      	asrs	r2, r3, #8
 8002a08:	4b51      	ldr	r3, [pc, #324]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002a0a:	60da      	str	r2, [r3, #12]
 8002a0c:	4b4f      	ldr	r3, [pc, #316]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a0e:	2280      	movs	r2, #128	; 0x80
 8002a10:	615a      	str	r2, [r3, #20]
 8002a12:	4b4e      	ldr	r3, [pc, #312]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a14:	2280      	movs	r2, #128	; 0x80
 8002a16:	611a      	str	r2, [r3, #16]
 8002a18:	4b4c      	ldr	r3, [pc, #304]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a1a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a1e:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setxcmd + 3);
 8002a20:	4b49      	ldr	r3, [pc, #292]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002a22:	895b      	ldrh	r3, [r3, #10]
 8002a24:	3303      	adds	r3, #3
 8002a26:	b29b      	uxth	r3, r3
 8002a28:	4618      	mov	r0, r3
 8002a2a:	f7ff faf3 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA((lcddev.width - 1) & 0XFF);
 8002a2e:	4b47      	ldr	r3, [pc, #284]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a30:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a34:	611a      	str	r2, [r3, #16]
 8002a36:	4b45      	ldr	r3, [pc, #276]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a38:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a3c:	615a      	str	r2, [r3, #20]
 8002a3e:	4b42      	ldr	r3, [pc, #264]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002a40:	881b      	ldrh	r3, [r3, #0]
 8002a42:	3b01      	subs	r3, #1
 8002a44:	4a42      	ldr	r2, [pc, #264]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002a46:	b2db      	uxtb	r3, r3
 8002a48:	60d3      	str	r3, [r2, #12]
 8002a4a:	4b40      	ldr	r3, [pc, #256]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a4c:	2280      	movs	r2, #128	; 0x80
 8002a4e:	615a      	str	r2, [r3, #20]
 8002a50:	4b3e      	ldr	r3, [pc, #248]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a52:	2280      	movs	r2, #128	; 0x80
 8002a54:	611a      	str	r2, [r3, #16]
 8002a56:	4b3d      	ldr	r3, [pc, #244]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a58:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a5c:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setycmd);
 8002a5e:	4b3a      	ldr	r3, [pc, #232]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002a60:	899b      	ldrh	r3, [r3, #12]
 8002a62:	4618      	mov	r0, r3
 8002a64:	f7ff fad6 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 8002a68:	4b38      	ldr	r3, [pc, #224]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a6a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a6e:	611a      	str	r2, [r3, #16]
 8002a70:	4b36      	ldr	r3, [pc, #216]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a72:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a76:	615a      	str	r2, [r3, #20]
 8002a78:	4b35      	ldr	r3, [pc, #212]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002a7a:	2200      	movs	r2, #0
 8002a7c:	60da      	str	r2, [r3, #12]
 8002a7e:	4b33      	ldr	r3, [pc, #204]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a80:	2280      	movs	r2, #128	; 0x80
 8002a82:	615a      	str	r2, [r3, #20]
 8002a84:	4b31      	ldr	r3, [pc, #196]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a86:	2280      	movs	r2, #128	; 0x80
 8002a88:	611a      	str	r2, [r3, #16]
 8002a8a:	4b30      	ldr	r3, [pc, #192]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002a8c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a90:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setycmd + 1);
 8002a92:	4b2d      	ldr	r3, [pc, #180]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002a94:	899b      	ldrh	r3, [r3, #12]
 8002a96:	3301      	adds	r3, #1
 8002a98:	b29b      	uxth	r3, r3
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	f7ff faba 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 8002aa0:	4b2a      	ldr	r3, [pc, #168]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002aa2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002aa6:	611a      	str	r2, [r3, #16]
 8002aa8:	4b28      	ldr	r3, [pc, #160]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002aaa:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002aae:	615a      	str	r2, [r3, #20]
 8002ab0:	4b27      	ldr	r3, [pc, #156]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	60da      	str	r2, [r3, #12]
 8002ab6:	4b25      	ldr	r3, [pc, #148]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002ab8:	2280      	movs	r2, #128	; 0x80
 8002aba:	615a      	str	r2, [r3, #20]
 8002abc:	4b23      	ldr	r3, [pc, #140]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002abe:	2280      	movs	r2, #128	; 0x80
 8002ac0:	611a      	str	r2, [r3, #16]
 8002ac2:	4b22      	ldr	r3, [pc, #136]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002ac4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002ac8:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setycmd + 2);
 8002aca:	4b1f      	ldr	r3, [pc, #124]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002acc:	899b      	ldrh	r3, [r3, #12]
 8002ace:	3302      	adds	r3, #2
 8002ad0:	b29b      	uxth	r3, r3
 8002ad2:	4618      	mov	r0, r3
 8002ad4:	f7ff fa9e 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA((lcddev.height - 1) >> 8);
 8002ad8:	4b1c      	ldr	r3, [pc, #112]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002ada:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ade:	611a      	str	r2, [r3, #16]
 8002ae0:	4b1a      	ldr	r3, [pc, #104]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002ae2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002ae6:	615a      	str	r2, [r3, #20]
 8002ae8:	4b17      	ldr	r3, [pc, #92]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002aea:	885b      	ldrh	r3, [r3, #2]
 8002aec:	3b01      	subs	r3, #1
 8002aee:	121a      	asrs	r2, r3, #8
 8002af0:	4b17      	ldr	r3, [pc, #92]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002af2:	60da      	str	r2, [r3, #12]
 8002af4:	4b15      	ldr	r3, [pc, #84]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002af6:	2280      	movs	r2, #128	; 0x80
 8002af8:	615a      	str	r2, [r3, #20]
 8002afa:	4b14      	ldr	r3, [pc, #80]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002afc:	2280      	movs	r2, #128	; 0x80
 8002afe:	611a      	str	r2, [r3, #16]
 8002b00:	4b12      	ldr	r3, [pc, #72]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002b02:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002b06:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setycmd + 3);
 8002b08:	4b0f      	ldr	r3, [pc, #60]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002b0a:	899b      	ldrh	r3, [r3, #12]
 8002b0c:	3303      	adds	r3, #3
 8002b0e:	b29b      	uxth	r3, r3
 8002b10:	4618      	mov	r0, r3
 8002b12:	f7ff fa7f 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA((lcddev.height - 1) & 0XFF);
 8002b16:	4b0d      	ldr	r3, [pc, #52]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002b18:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002b1c:	611a      	str	r2, [r3, #16]
 8002b1e:	4b0b      	ldr	r3, [pc, #44]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002b20:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002b24:	615a      	str	r2, [r3, #20]
 8002b26:	4b08      	ldr	r3, [pc, #32]	; (8002b48 <LCD_Scan_Dir+0x3f8>)
 8002b28:	885b      	ldrh	r3, [r3, #2]
 8002b2a:	3b01      	subs	r3, #1
 8002b2c:	4a08      	ldr	r2, [pc, #32]	; (8002b50 <LCD_Scan_Dir+0x400>)
 8002b2e:	b2db      	uxtb	r3, r3
 8002b30:	60d3      	str	r3, [r2, #12]
 8002b32:	4b06      	ldr	r3, [pc, #24]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002b34:	2280      	movs	r2, #128	; 0x80
 8002b36:	615a      	str	r2, [r3, #20]
 8002b38:	4b04      	ldr	r3, [pc, #16]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002b3a:	2280      	movs	r2, #128	; 0x80
 8002b3c:	611a      	str	r2, [r3, #16]
 8002b3e:	4b03      	ldr	r3, [pc, #12]	; (8002b4c <LCD_Scan_Dir+0x3fc>)
 8002b40:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002b44:	611a      	str	r2, [r3, #16]
		if (lcddev.id == 0X5510) {
 8002b46:	e10a      	b.n	8002d5e <LCD_Scan_Dir+0x60e>
 8002b48:	200000a8 	.word	0x200000a8
 8002b4c:	40011000 	.word	0x40011000
 8002b50:	40010c00 	.word	0x40010c00
		} else {
			LCD_WR_REG(lcddev.setxcmd);
 8002b54:	4b84      	ldr	r3, [pc, #528]	; (8002d68 <LCD_Scan_Dir+0x618>)
 8002b56:	895b      	ldrh	r3, [r3, #10]
 8002b58:	4618      	mov	r0, r3
 8002b5a:	f7ff fa5b 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 8002b5e:	4b83      	ldr	r3, [pc, #524]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b60:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002b64:	611a      	str	r2, [r3, #16]
 8002b66:	4b81      	ldr	r3, [pc, #516]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b68:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002b6c:	615a      	str	r2, [r3, #20]
 8002b6e:	4b80      	ldr	r3, [pc, #512]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002b70:	2200      	movs	r2, #0
 8002b72:	60da      	str	r2, [r3, #12]
 8002b74:	4b7d      	ldr	r3, [pc, #500]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b76:	2280      	movs	r2, #128	; 0x80
 8002b78:	615a      	str	r2, [r3, #20]
 8002b7a:	4b7c      	ldr	r3, [pc, #496]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b7c:	2280      	movs	r2, #128	; 0x80
 8002b7e:	611a      	str	r2, [r3, #16]
 8002b80:	4b7a      	ldr	r3, [pc, #488]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b82:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002b86:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA(0);
 8002b88:	4b78      	ldr	r3, [pc, #480]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b8a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002b8e:	611a      	str	r2, [r3, #16]
 8002b90:	4b76      	ldr	r3, [pc, #472]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002b92:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002b96:	615a      	str	r2, [r3, #20]
 8002b98:	4b75      	ldr	r3, [pc, #468]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	60da      	str	r2, [r3, #12]
 8002b9e:	4b73      	ldr	r3, [pc, #460]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002ba0:	2280      	movs	r2, #128	; 0x80
 8002ba2:	615a      	str	r2, [r3, #20]
 8002ba4:	4b71      	ldr	r3, [pc, #452]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002ba6:	2280      	movs	r2, #128	; 0x80
 8002ba8:	611a      	str	r2, [r3, #16]
 8002baa:	4b70      	ldr	r3, [pc, #448]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bac:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002bb0:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA((lcddev.width - 1) >> 8);
 8002bb2:	4b6e      	ldr	r3, [pc, #440]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bb4:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002bb8:	611a      	str	r2, [r3, #16]
 8002bba:	4b6c      	ldr	r3, [pc, #432]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bbc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002bc0:	615a      	str	r2, [r3, #20]
 8002bc2:	4b69      	ldr	r3, [pc, #420]	; (8002d68 <LCD_Scan_Dir+0x618>)
 8002bc4:	881b      	ldrh	r3, [r3, #0]
 8002bc6:	3b01      	subs	r3, #1
 8002bc8:	121a      	asrs	r2, r3, #8
 8002bca:	4b69      	ldr	r3, [pc, #420]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002bcc:	60da      	str	r2, [r3, #12]
 8002bce:	4b67      	ldr	r3, [pc, #412]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bd0:	2280      	movs	r2, #128	; 0x80
 8002bd2:	615a      	str	r2, [r3, #20]
 8002bd4:	4b65      	ldr	r3, [pc, #404]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bd6:	2280      	movs	r2, #128	; 0x80
 8002bd8:	611a      	str	r2, [r3, #16]
 8002bda:	4b64      	ldr	r3, [pc, #400]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bdc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002be0:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA((lcddev.width - 1) & 0XFF);
 8002be2:	4b62      	ldr	r3, [pc, #392]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002be4:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002be8:	611a      	str	r2, [r3, #16]
 8002bea:	4b60      	ldr	r3, [pc, #384]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002bec:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002bf0:	615a      	str	r2, [r3, #20]
 8002bf2:	4b5d      	ldr	r3, [pc, #372]	; (8002d68 <LCD_Scan_Dir+0x618>)
 8002bf4:	881b      	ldrh	r3, [r3, #0]
 8002bf6:	3b01      	subs	r3, #1
 8002bf8:	4a5d      	ldr	r2, [pc, #372]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002bfa:	b2db      	uxtb	r3, r3
 8002bfc:	60d3      	str	r3, [r2, #12]
 8002bfe:	4b5b      	ldr	r3, [pc, #364]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c00:	2280      	movs	r2, #128	; 0x80
 8002c02:	615a      	str	r2, [r3, #20]
 8002c04:	4b59      	ldr	r3, [pc, #356]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c06:	2280      	movs	r2, #128	; 0x80
 8002c08:	611a      	str	r2, [r3, #16]
 8002c0a:	4b58      	ldr	r3, [pc, #352]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c0c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c10:	611a      	str	r2, [r3, #16]
			LCD_WR_REG(lcddev.setycmd);
 8002c12:	4b55      	ldr	r3, [pc, #340]	; (8002d68 <LCD_Scan_Dir+0x618>)
 8002c14:	899b      	ldrh	r3, [r3, #12]
 8002c16:	4618      	mov	r0, r3
 8002c18:	f7ff f9fc 	bl	8002014 <LCD_WR_REG>
			LCD_WR_DATA(0);
 8002c1c:	4b53      	ldr	r3, [pc, #332]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c1e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c22:	611a      	str	r2, [r3, #16]
 8002c24:	4b51      	ldr	r3, [pc, #324]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c26:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c2a:	615a      	str	r2, [r3, #20]
 8002c2c:	4b50      	ldr	r3, [pc, #320]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002c2e:	2200      	movs	r2, #0
 8002c30:	60da      	str	r2, [r3, #12]
 8002c32:	4b4e      	ldr	r3, [pc, #312]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c34:	2280      	movs	r2, #128	; 0x80
 8002c36:	615a      	str	r2, [r3, #20]
 8002c38:	4b4c      	ldr	r3, [pc, #304]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c3a:	2280      	movs	r2, #128	; 0x80
 8002c3c:	611a      	str	r2, [r3, #16]
 8002c3e:	4b4b      	ldr	r3, [pc, #300]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c40:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c44:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA(0);
 8002c46:	4b49      	ldr	r3, [pc, #292]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c48:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c4c:	611a      	str	r2, [r3, #16]
 8002c4e:	4b47      	ldr	r3, [pc, #284]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c50:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c54:	615a      	str	r2, [r3, #20]
 8002c56:	4b46      	ldr	r3, [pc, #280]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002c58:	2200      	movs	r2, #0
 8002c5a:	60da      	str	r2, [r3, #12]
 8002c5c:	4b43      	ldr	r3, [pc, #268]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c5e:	2280      	movs	r2, #128	; 0x80
 8002c60:	615a      	str	r2, [r3, #20]
 8002c62:	4b42      	ldr	r3, [pc, #264]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c64:	2280      	movs	r2, #128	; 0x80
 8002c66:	611a      	str	r2, [r3, #16]
 8002c68:	4b40      	ldr	r3, [pc, #256]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c6a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c6e:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA((lcddev.height - 1) >> 8);
 8002c70:	4b3e      	ldr	r3, [pc, #248]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c72:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c76:	611a      	str	r2, [r3, #16]
 8002c78:	4b3c      	ldr	r3, [pc, #240]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c7a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c7e:	615a      	str	r2, [r3, #20]
 8002c80:	4b39      	ldr	r3, [pc, #228]	; (8002d68 <LCD_Scan_Dir+0x618>)
 8002c82:	885b      	ldrh	r3, [r3, #2]
 8002c84:	3b01      	subs	r3, #1
 8002c86:	121a      	asrs	r2, r3, #8
 8002c88:	4b39      	ldr	r3, [pc, #228]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002c8a:	60da      	str	r2, [r3, #12]
 8002c8c:	4b37      	ldr	r3, [pc, #220]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c8e:	2280      	movs	r2, #128	; 0x80
 8002c90:	615a      	str	r2, [r3, #20]
 8002c92:	4b36      	ldr	r3, [pc, #216]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c94:	2280      	movs	r2, #128	; 0x80
 8002c96:	611a      	str	r2, [r3, #16]
 8002c98:	4b34      	ldr	r3, [pc, #208]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002c9a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c9e:	611a      	str	r2, [r3, #16]
			LCD_WR_DATA((lcddev.height - 1) & 0XFF);
 8002ca0:	4b32      	ldr	r3, [pc, #200]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002ca2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ca6:	611a      	str	r2, [r3, #16]
 8002ca8:	4b30      	ldr	r3, [pc, #192]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002caa:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002cae:	615a      	str	r2, [r3, #20]
 8002cb0:	4b2d      	ldr	r3, [pc, #180]	; (8002d68 <LCD_Scan_Dir+0x618>)
 8002cb2:	885b      	ldrh	r3, [r3, #2]
 8002cb4:	3b01      	subs	r3, #1
 8002cb6:	4a2e      	ldr	r2, [pc, #184]	; (8002d70 <LCD_Scan_Dir+0x620>)
 8002cb8:	b2db      	uxtb	r3, r3
 8002cba:	60d3      	str	r3, [r2, #12]
 8002cbc:	4b2b      	ldr	r3, [pc, #172]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002cbe:	2280      	movs	r2, #128	; 0x80
 8002cc0:	615a      	str	r2, [r3, #20]
 8002cc2:	4b2a      	ldr	r3, [pc, #168]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002cc4:	2280      	movs	r2, #128	; 0x80
 8002cc6:	611a      	str	r2, [r3, #16]
 8002cc8:	4b28      	ldr	r3, [pc, #160]	; (8002d6c <LCD_Scan_Dir+0x61c>)
 8002cca:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002cce:	611a      	str	r2, [r3, #16]
		if (lcddev.id == 0X5510) {
 8002cd0:	e045      	b.n	8002d5e <LCD_Scan_Dir+0x60e>
		}
	} else {
		switch (dir) {
 8002cd2:	79fb      	ldrb	r3, [r7, #7]
 8002cd4:	2b07      	cmp	r3, #7
 8002cd6:	d836      	bhi.n	8002d46 <LCD_Scan_Dir+0x5f6>
 8002cd8:	a201      	add	r2, pc, #4	; (adr r2, 8002ce0 <LCD_Scan_Dir+0x590>)
 8002cda:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002cde:	bf00      	nop
 8002ce0:	08002d01 	.word	0x08002d01
 8002ce4:	08002d0b 	.word	0x08002d0b
 8002ce8:	08002d15 	.word	0x08002d15
 8002cec:	08002d47 	.word	0x08002d47
 8002cf0:	08002d1f 	.word	0x08002d1f
 8002cf4:	08002d29 	.word	0x08002d29
 8002cf8:	08002d33 	.word	0x08002d33
 8002cfc:	08002d3d 	.word	0x08002d3d
		case L2R_U2D:	//从左到右,从上到下
			regval |= (1 << 5) | (1 << 4) | (0 << 3);
 8002d00:	89fb      	ldrh	r3, [r7, #14]
 8002d02:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8002d06:	81fb      	strh	r3, [r7, #14]
			break;
 8002d08:	e01d      	b.n	8002d46 <LCD_Scan_Dir+0x5f6>
		case L2R_D2U:	//从左到右,从下到上
			regval |= (0 << 5) | (1 << 4) | (0 << 3);
 8002d0a:	89fb      	ldrh	r3, [r7, #14]
 8002d0c:	f043 0310 	orr.w	r3, r3, #16
 8002d10:	81fb      	strh	r3, [r7, #14]
			break;
 8002d12:	e018      	b.n	8002d46 <LCD_Scan_Dir+0x5f6>
		case R2L_U2D:	//从右到左,从上到下
			regval |= (1 << 5) | (0 << 4) | (0 << 3);
 8002d14:	89fb      	ldrh	r3, [r7, #14]
 8002d16:	f043 0320 	orr.w	r3, r3, #32
 8002d1a:	81fb      	strh	r3, [r7, #14]
			break;
 8002d1c:	e013      	b.n	8002d46 <LCD_Scan_Dir+0x5f6>
		case R2L_D2U:	//从右到左,从下到上
			regval |= (0 << 5) | (0 << 4) | (0 << 3);
			break;
		case U2D_L2R:	//从上到下,从左到右
			regval |= (1 << 5) | (1 << 4) | (1 << 3);
 8002d1e:	89fb      	ldrh	r3, [r7, #14]
 8002d20:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8002d24:	81fb      	strh	r3, [r7, #14]
			break;
 8002d26:	e00e      	b.n	8002d46 <LCD_Scan_Dir+0x5f6>
		case U2D_R2L:	//从上到下,从右到左
			regval |= (1 << 5) | (0 << 4) | (1 << 3);
 8002d28:	89fb      	ldrh	r3, [r7, #14]
 8002d2a:	f043 0328 	orr.w	r3, r3, #40	; 0x28
 8002d2e:	81fb      	strh	r3, [r7, #14]
			break;
 8002d30:	e009      	b.n	8002d46 <LCD_Scan_Dir+0x5f6>
		case D2U_L2R:	//从下到上,从左到右
			regval |= (0 << 5) | (1 << 4) | (1 << 3);
 8002d32:	89fb      	ldrh	r3, [r7, #14]
 8002d34:	f043 0318 	orr.w	r3, r3, #24
 8002d38:	81fb      	strh	r3, [r7, #14]
			break;
 8002d3a:	e004      	b.n	8002d46 <LCD_Scan_Dir+0x5f6>
		case D2U_R2L:	//从下到上,从右到左
			regval |= (0 << 5) | (0 << 4) | (1 << 3);
 8002d3c:	89fb      	ldrh	r3, [r7, #14]
 8002d3e:	f043 0308 	orr.w	r3, r3, #8
 8002d42:	81fb      	strh	r3, [r7, #14]
			break;
 8002d44:	bf00      	nop
		}
		dirreg = 0X03;
 8002d46:	2303      	movs	r3, #3
 8002d48:	81bb      	strh	r3, [r7, #12]
		regval |= 1 << 12;
 8002d4a:	89fb      	ldrh	r3, [r7, #14]
 8002d4c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002d50:	81fb      	strh	r3, [r7, #14]
		LCD_WriteReg(dirreg, regval);
 8002d52:	89fa      	ldrh	r2, [r7, #14]
 8002d54:	89bb      	ldrh	r3, [r7, #12]
 8002d56:	4611      	mov	r1, r2
 8002d58:	4618      	mov	r0, r3
 8002d5a:	f7ff f9e7 	bl	800212c <LCD_WriteReg>
	}
}
 8002d5e:	bf00      	nop
 8002d60:	3710      	adds	r7, #16
 8002d62:	46bd      	mov	sp, r7
 8002d64:	bd80      	pop	{r7, pc}
 8002d66:	bf00      	nop
 8002d68:	200000a8 	.word	0x200000a8
 8002d6c:	40011000 	.word	0x40011000
 8002d70:	40010c00 	.word	0x40010c00

08002d74 <LCD_DrawPoint>:
//Draw a point with color
//x,y: coordinate

void LCD_DrawPoint(uint16_t x, uint16_t y) {
 8002d74:	b580      	push	{r7, lr}
 8002d76:	b082      	sub	sp, #8
 8002d78:	af00      	add	r7, sp, #0
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	460a      	mov	r2, r1
 8002d7e:	80fb      	strh	r3, [r7, #6]
 8002d80:	4613      	mov	r3, r2
 8002d82:	80bb      	strh	r3, [r7, #4]
	LCD_SetCursor(x, y);
 8002d84:	88ba      	ldrh	r2, [r7, #4]
 8002d86:	88fb      	ldrh	r3, [r7, #6]
 8002d88:	4611      	mov	r1, r2
 8002d8a:	4618      	mov	r0, r3
 8002d8c:	f7ff fa14 	bl	80021b8 <LCD_SetCursor>
	LCD_WriteRAM_Prepare();
 8002d90:	f7ff fa06 	bl	80021a0 <LCD_WriteRAM_Prepare>
	LCD_WR_DATA(POINT_COLOR); //POINT_COLOR: Color of this point
 8002d94:	4b0c      	ldr	r3, [pc, #48]	; (8002dc8 <LCD_DrawPoint+0x54>)
 8002d96:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002d9a:	611a      	str	r2, [r3, #16]
 8002d9c:	4b0a      	ldr	r3, [pc, #40]	; (8002dc8 <LCD_DrawPoint+0x54>)
 8002d9e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002da2:	615a      	str	r2, [r3, #20]
 8002da4:	4b09      	ldr	r3, [pc, #36]	; (8002dcc <LCD_DrawPoint+0x58>)
 8002da6:	881a      	ldrh	r2, [r3, #0]
 8002da8:	4b09      	ldr	r3, [pc, #36]	; (8002dd0 <LCD_DrawPoint+0x5c>)
 8002daa:	60da      	str	r2, [r3, #12]
 8002dac:	4b06      	ldr	r3, [pc, #24]	; (8002dc8 <LCD_DrawPoint+0x54>)
 8002dae:	2280      	movs	r2, #128	; 0x80
 8002db0:	615a      	str	r2, [r3, #20]
 8002db2:	4b05      	ldr	r3, [pc, #20]	; (8002dc8 <LCD_DrawPoint+0x54>)
 8002db4:	2280      	movs	r2, #128	; 0x80
 8002db6:	611a      	str	r2, [r3, #16]
 8002db8:	4b03      	ldr	r3, [pc, #12]	; (8002dc8 <LCD_DrawPoint+0x54>)
 8002dba:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002dbe:	611a      	str	r2, [r3, #16]
}
 8002dc0:	bf00      	nop
 8002dc2:	3708      	adds	r7, #8
 8002dc4:	46bd      	mov	sp, r7
 8002dc6:	bd80      	pop	{r7, pc}
 8002dc8:	40011000 	.word	0x40011000
 8002dcc:	20000094 	.word	0x20000094
 8002dd0:	40010c00 	.word	0x40010c00

08002dd4 <LCD_Fast_DrawPoint>:
//Draw a point with color(quicker)
//x,y: coordinate
void LCD_Fast_DrawPoint(uint16_t x, uint16_t y, uint16_t color) {
 8002dd4:	b580      	push	{r7, lr}
 8002dd6:	b082      	sub	sp, #8
 8002dd8:	af00      	add	r7, sp, #0
 8002dda:	4603      	mov	r3, r0
 8002ddc:	80fb      	strh	r3, [r7, #6]
 8002dde:	460b      	mov	r3, r1
 8002de0:	80bb      	strh	r3, [r7, #4]
 8002de2:	4613      	mov	r3, r2
 8002de4:	807b      	strh	r3, [r7, #2]
	if (lcddev.id == 0X9341 || lcddev.id == 0X5310) {
 8002de6:	4b75      	ldr	r3, [pc, #468]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002de8:	889b      	ldrh	r3, [r3, #4]
 8002dea:	f249 3241 	movw	r2, #37697	; 0x9341
 8002dee:	4293      	cmp	r3, r2
 8002df0:	d005      	beq.n	8002dfe <LCD_Fast_DrawPoint+0x2a>
 8002df2:	4b72      	ldr	r3, [pc, #456]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002df4:	889b      	ldrh	r3, [r3, #4]
 8002df6:	f245 3210 	movw	r2, #21264	; 0x5310
 8002dfa:	4293      	cmp	r3, r2
 8002dfc:	d164      	bne.n	8002ec8 <LCD_Fast_DrawPoint+0xf4>
		LCD_WR_REG(lcddev.setxcmd);
 8002dfe:	4b6f      	ldr	r3, [pc, #444]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002e00:	895b      	ldrh	r3, [r3, #10]
 8002e02:	4618      	mov	r0, r3
 8002e04:	f7ff f906 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(x >> 8);
 8002e08:	4b6d      	ldr	r3, [pc, #436]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e0a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002e0e:	611a      	str	r2, [r3, #16]
 8002e10:	4b6b      	ldr	r3, [pc, #428]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e12:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e16:	615a      	str	r2, [r3, #20]
 8002e18:	88fb      	ldrh	r3, [r7, #6]
 8002e1a:	0a1b      	lsrs	r3, r3, #8
 8002e1c:	b29a      	uxth	r2, r3
 8002e1e:	4b69      	ldr	r3, [pc, #420]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002e20:	60da      	str	r2, [r3, #12]
 8002e22:	4b67      	ldr	r3, [pc, #412]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e24:	2280      	movs	r2, #128	; 0x80
 8002e26:	615a      	str	r2, [r3, #20]
 8002e28:	4b65      	ldr	r3, [pc, #404]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e2a:	2280      	movs	r2, #128	; 0x80
 8002e2c:	611a      	str	r2, [r3, #16]
 8002e2e:	4b64      	ldr	r3, [pc, #400]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e30:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e34:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(x & 0XFF);
 8002e36:	4b62      	ldr	r3, [pc, #392]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e38:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002e3c:	611a      	str	r2, [r3, #16]
 8002e3e:	4b60      	ldr	r3, [pc, #384]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e40:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e44:	615a      	str	r2, [r3, #20]
 8002e46:	88fb      	ldrh	r3, [r7, #6]
 8002e48:	4a5e      	ldr	r2, [pc, #376]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002e4a:	b2db      	uxtb	r3, r3
 8002e4c:	60d3      	str	r3, [r2, #12]
 8002e4e:	4b5c      	ldr	r3, [pc, #368]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e50:	2280      	movs	r2, #128	; 0x80
 8002e52:	615a      	str	r2, [r3, #20]
 8002e54:	4b5a      	ldr	r3, [pc, #360]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e56:	2280      	movs	r2, #128	; 0x80
 8002e58:	611a      	str	r2, [r3, #16]
 8002e5a:	4b59      	ldr	r3, [pc, #356]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e5c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e60:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8002e62:	4b56      	ldr	r3, [pc, #344]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002e64:	899b      	ldrh	r3, [r3, #12]
 8002e66:	4618      	mov	r0, r3
 8002e68:	f7ff f8d4 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(y >> 8);
 8002e6c:	4b54      	ldr	r3, [pc, #336]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e6e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002e72:	611a      	str	r2, [r3, #16]
 8002e74:	4b52      	ldr	r3, [pc, #328]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e76:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e7a:	615a      	str	r2, [r3, #20]
 8002e7c:	88bb      	ldrh	r3, [r7, #4]
 8002e7e:	0a1b      	lsrs	r3, r3, #8
 8002e80:	b29a      	uxth	r2, r3
 8002e82:	4b50      	ldr	r3, [pc, #320]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002e84:	60da      	str	r2, [r3, #12]
 8002e86:	4b4e      	ldr	r3, [pc, #312]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e88:	2280      	movs	r2, #128	; 0x80
 8002e8a:	615a      	str	r2, [r3, #20]
 8002e8c:	4b4c      	ldr	r3, [pc, #304]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e8e:	2280      	movs	r2, #128	; 0x80
 8002e90:	611a      	str	r2, [r3, #16]
 8002e92:	4b4b      	ldr	r3, [pc, #300]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e94:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e98:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(y & 0XFF);
 8002e9a:	4b49      	ldr	r3, [pc, #292]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002e9c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ea0:	611a      	str	r2, [r3, #16]
 8002ea2:	4b47      	ldr	r3, [pc, #284]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002ea4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002ea8:	615a      	str	r2, [r3, #20]
 8002eaa:	88bb      	ldrh	r3, [r7, #4]
 8002eac:	4a45      	ldr	r2, [pc, #276]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002eae:	b2db      	uxtb	r3, r3
 8002eb0:	60d3      	str	r3, [r2, #12]
 8002eb2:	4b43      	ldr	r3, [pc, #268]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002eb4:	2280      	movs	r2, #128	; 0x80
 8002eb6:	615a      	str	r2, [r3, #20]
 8002eb8:	4b41      	ldr	r3, [pc, #260]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002eba:	2280      	movs	r2, #128	; 0x80
 8002ebc:	611a      	str	r2, [r3, #16]
 8002ebe:	4b40      	ldr	r3, [pc, #256]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002ec0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002ec4:	611a      	str	r2, [r3, #16]
 8002ec6:	e1e6      	b.n	8003296 <LCD_Fast_DrawPoint+0x4c2>
	} else if (lcddev.id == 0X5510) {
 8002ec8:	4b3c      	ldr	r3, [pc, #240]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002eca:	889b      	ldrh	r3, [r3, #4]
 8002ecc:	f245 5210 	movw	r2, #21776	; 0x5510
 8002ed0:	4293      	cmp	r3, r2
 8002ed2:	d179      	bne.n	8002fc8 <LCD_Fast_DrawPoint+0x1f4>
		LCD_WR_REG(lcddev.setxcmd);
 8002ed4:	4b39      	ldr	r3, [pc, #228]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002ed6:	895b      	ldrh	r3, [r3, #10]
 8002ed8:	4618      	mov	r0, r3
 8002eda:	f7ff f89b 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(x >> 8);
 8002ede:	4b38      	ldr	r3, [pc, #224]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002ee0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ee4:	611a      	str	r2, [r3, #16]
 8002ee6:	4b36      	ldr	r3, [pc, #216]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002ee8:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002eec:	615a      	str	r2, [r3, #20]
 8002eee:	88fb      	ldrh	r3, [r7, #6]
 8002ef0:	0a1b      	lsrs	r3, r3, #8
 8002ef2:	b29a      	uxth	r2, r3
 8002ef4:	4b33      	ldr	r3, [pc, #204]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002ef6:	60da      	str	r2, [r3, #12]
 8002ef8:	4b31      	ldr	r3, [pc, #196]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002efa:	2280      	movs	r2, #128	; 0x80
 8002efc:	615a      	str	r2, [r3, #20]
 8002efe:	4b30      	ldr	r3, [pc, #192]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f00:	2280      	movs	r2, #128	; 0x80
 8002f02:	611a      	str	r2, [r3, #16]
 8002f04:	4b2e      	ldr	r3, [pc, #184]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f06:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002f0a:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setxcmd + 1);
 8002f0c:	4b2b      	ldr	r3, [pc, #172]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002f0e:	895b      	ldrh	r3, [r3, #10]
 8002f10:	3301      	adds	r3, #1
 8002f12:	b29b      	uxth	r3, r3
 8002f14:	4618      	mov	r0, r3
 8002f16:	f7ff f87d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(x & 0XFF);
 8002f1a:	4b29      	ldr	r3, [pc, #164]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f1c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002f20:	611a      	str	r2, [r3, #16]
 8002f22:	4b27      	ldr	r3, [pc, #156]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f24:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002f28:	615a      	str	r2, [r3, #20]
 8002f2a:	88fb      	ldrh	r3, [r7, #6]
 8002f2c:	4a25      	ldr	r2, [pc, #148]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002f2e:	b2db      	uxtb	r3, r3
 8002f30:	60d3      	str	r3, [r2, #12]
 8002f32:	4b23      	ldr	r3, [pc, #140]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f34:	2280      	movs	r2, #128	; 0x80
 8002f36:	615a      	str	r2, [r3, #20]
 8002f38:	4b21      	ldr	r3, [pc, #132]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f3a:	2280      	movs	r2, #128	; 0x80
 8002f3c:	611a      	str	r2, [r3, #16]
 8002f3e:	4b20      	ldr	r3, [pc, #128]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f40:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002f44:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8002f46:	4b1d      	ldr	r3, [pc, #116]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002f48:	899b      	ldrh	r3, [r3, #12]
 8002f4a:	4618      	mov	r0, r3
 8002f4c:	f7ff f862 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(y >> 8);
 8002f50:	4b1b      	ldr	r3, [pc, #108]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f52:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002f56:	611a      	str	r2, [r3, #16]
 8002f58:	4b19      	ldr	r3, [pc, #100]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f5a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002f5e:	615a      	str	r2, [r3, #20]
 8002f60:	88bb      	ldrh	r3, [r7, #4]
 8002f62:	0a1b      	lsrs	r3, r3, #8
 8002f64:	b29a      	uxth	r2, r3
 8002f66:	4b17      	ldr	r3, [pc, #92]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002f68:	60da      	str	r2, [r3, #12]
 8002f6a:	4b15      	ldr	r3, [pc, #84]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f6c:	2280      	movs	r2, #128	; 0x80
 8002f6e:	615a      	str	r2, [r3, #20]
 8002f70:	4b13      	ldr	r3, [pc, #76]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f72:	2280      	movs	r2, #128	; 0x80
 8002f74:	611a      	str	r2, [r3, #16]
 8002f76:	4b12      	ldr	r3, [pc, #72]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f78:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002f7c:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd + 1);
 8002f7e:	4b0f      	ldr	r3, [pc, #60]	; (8002fbc <LCD_Fast_DrawPoint+0x1e8>)
 8002f80:	899b      	ldrh	r3, [r3, #12]
 8002f82:	3301      	adds	r3, #1
 8002f84:	b29b      	uxth	r3, r3
 8002f86:	4618      	mov	r0, r3
 8002f88:	f7ff f844 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(y & 0XFF);
 8002f8c:	4b0c      	ldr	r3, [pc, #48]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f8e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002f92:	611a      	str	r2, [r3, #16]
 8002f94:	4b0a      	ldr	r3, [pc, #40]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002f96:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002f9a:	615a      	str	r2, [r3, #20]
 8002f9c:	88bb      	ldrh	r3, [r7, #4]
 8002f9e:	4a09      	ldr	r2, [pc, #36]	; (8002fc4 <LCD_Fast_DrawPoint+0x1f0>)
 8002fa0:	b2db      	uxtb	r3, r3
 8002fa2:	60d3      	str	r3, [r2, #12]
 8002fa4:	4b06      	ldr	r3, [pc, #24]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002fa6:	2280      	movs	r2, #128	; 0x80
 8002fa8:	615a      	str	r2, [r3, #20]
 8002faa:	4b05      	ldr	r3, [pc, #20]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002fac:	2280      	movs	r2, #128	; 0x80
 8002fae:	611a      	str	r2, [r3, #16]
 8002fb0:	4b03      	ldr	r3, [pc, #12]	; (8002fc0 <LCD_Fast_DrawPoint+0x1ec>)
 8002fb2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002fb6:	611a      	str	r2, [r3, #16]
 8002fb8:	e16d      	b.n	8003296 <LCD_Fast_DrawPoint+0x4c2>
 8002fba:	bf00      	nop
 8002fbc:	200000a8 	.word	0x200000a8
 8002fc0:	40011000 	.word	0x40011000
 8002fc4:	40010c00 	.word	0x40010c00
	} else if (lcddev.id == 0X1963) {
 8002fc8:	4b68      	ldr	r3, [pc, #416]	; (800316c <LCD_Fast_DrawPoint+0x398>)
 8002fca:	889b      	ldrh	r3, [r3, #4]
 8002fcc:	f641 1263 	movw	r2, #6499	; 0x1963
 8002fd0:	4293      	cmp	r3, r2
 8002fd2:	f040 80d1 	bne.w	8003178 <LCD_Fast_DrawPoint+0x3a4>
		if (lcddev.dir == 0)
 8002fd6:	4b65      	ldr	r3, [pc, #404]	; (800316c <LCD_Fast_DrawPoint+0x398>)
 8002fd8:	799b      	ldrb	r3, [r3, #6]
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d106      	bne.n	8002fec <LCD_Fast_DrawPoint+0x218>
			x = lcddev.width - 1 - x;
 8002fde:	4b63      	ldr	r3, [pc, #396]	; (800316c <LCD_Fast_DrawPoint+0x398>)
 8002fe0:	881a      	ldrh	r2, [r3, #0]
 8002fe2:	88fb      	ldrh	r3, [r7, #6]
 8002fe4:	1ad3      	subs	r3, r2, r3
 8002fe6:	b29b      	uxth	r3, r3
 8002fe8:	3b01      	subs	r3, #1
 8002fea:	80fb      	strh	r3, [r7, #6]
		LCD_WR_REG(lcddev.setxcmd);
 8002fec:	4b5f      	ldr	r3, [pc, #380]	; (800316c <LCD_Fast_DrawPoint+0x398>)
 8002fee:	895b      	ldrh	r3, [r3, #10]
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	f7ff f80f 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(x >> 8);
 8002ff6:	4b5e      	ldr	r3, [pc, #376]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8002ff8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ffc:	611a      	str	r2, [r3, #16]
 8002ffe:	4b5c      	ldr	r3, [pc, #368]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003000:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003004:	615a      	str	r2, [r3, #20]
 8003006:	88fb      	ldrh	r3, [r7, #6]
 8003008:	0a1b      	lsrs	r3, r3, #8
 800300a:	b29a      	uxth	r2, r3
 800300c:	4b59      	ldr	r3, [pc, #356]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 800300e:	60da      	str	r2, [r3, #12]
 8003010:	4b57      	ldr	r3, [pc, #348]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003012:	2280      	movs	r2, #128	; 0x80
 8003014:	615a      	str	r2, [r3, #20]
 8003016:	4b56      	ldr	r3, [pc, #344]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003018:	2280      	movs	r2, #128	; 0x80
 800301a:	611a      	str	r2, [r3, #16]
 800301c:	4b54      	ldr	r3, [pc, #336]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800301e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003022:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(x & 0XFF);
 8003024:	4b52      	ldr	r3, [pc, #328]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003026:	f44f 7280 	mov.w	r2, #256	; 0x100
 800302a:	611a      	str	r2, [r3, #16]
 800302c:	4b50      	ldr	r3, [pc, #320]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800302e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003032:	615a      	str	r2, [r3, #20]
 8003034:	88fb      	ldrh	r3, [r7, #6]
 8003036:	4a4f      	ldr	r2, [pc, #316]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 8003038:	b2db      	uxtb	r3, r3
 800303a:	60d3      	str	r3, [r2, #12]
 800303c:	4b4c      	ldr	r3, [pc, #304]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800303e:	2280      	movs	r2, #128	; 0x80
 8003040:	615a      	str	r2, [r3, #20]
 8003042:	4b4b      	ldr	r3, [pc, #300]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003044:	2280      	movs	r2, #128	; 0x80
 8003046:	611a      	str	r2, [r3, #16]
 8003048:	4b49      	ldr	r3, [pc, #292]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800304a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800304e:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(x >> 8);
 8003050:	4b47      	ldr	r3, [pc, #284]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003052:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003056:	611a      	str	r2, [r3, #16]
 8003058:	4b45      	ldr	r3, [pc, #276]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800305a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800305e:	615a      	str	r2, [r3, #20]
 8003060:	88fb      	ldrh	r3, [r7, #6]
 8003062:	0a1b      	lsrs	r3, r3, #8
 8003064:	b29a      	uxth	r2, r3
 8003066:	4b43      	ldr	r3, [pc, #268]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 8003068:	60da      	str	r2, [r3, #12]
 800306a:	4b41      	ldr	r3, [pc, #260]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800306c:	2280      	movs	r2, #128	; 0x80
 800306e:	615a      	str	r2, [r3, #20]
 8003070:	4b3f      	ldr	r3, [pc, #252]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003072:	2280      	movs	r2, #128	; 0x80
 8003074:	611a      	str	r2, [r3, #16]
 8003076:	4b3e      	ldr	r3, [pc, #248]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003078:	f44f 7200 	mov.w	r2, #512	; 0x200
 800307c:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(x & 0XFF);
 800307e:	4b3c      	ldr	r3, [pc, #240]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003080:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003084:	611a      	str	r2, [r3, #16]
 8003086:	4b3a      	ldr	r3, [pc, #232]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003088:	f44f 7200 	mov.w	r2, #512	; 0x200
 800308c:	615a      	str	r2, [r3, #20]
 800308e:	88fb      	ldrh	r3, [r7, #6]
 8003090:	4a38      	ldr	r2, [pc, #224]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 8003092:	b2db      	uxtb	r3, r3
 8003094:	60d3      	str	r3, [r2, #12]
 8003096:	4b36      	ldr	r3, [pc, #216]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003098:	2280      	movs	r2, #128	; 0x80
 800309a:	615a      	str	r2, [r3, #20]
 800309c:	4b34      	ldr	r3, [pc, #208]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800309e:	2280      	movs	r2, #128	; 0x80
 80030a0:	611a      	str	r2, [r3, #16]
 80030a2:	4b33      	ldr	r3, [pc, #204]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030a4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80030a8:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 80030aa:	4b30      	ldr	r3, [pc, #192]	; (800316c <LCD_Fast_DrawPoint+0x398>)
 80030ac:	899b      	ldrh	r3, [r3, #12]
 80030ae:	4618      	mov	r0, r3
 80030b0:	f7fe ffb0 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(y >> 8);
 80030b4:	4b2e      	ldr	r3, [pc, #184]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030b6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030ba:	611a      	str	r2, [r3, #16]
 80030bc:	4b2c      	ldr	r3, [pc, #176]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030be:	f44f 7200 	mov.w	r2, #512	; 0x200
 80030c2:	615a      	str	r2, [r3, #20]
 80030c4:	88bb      	ldrh	r3, [r7, #4]
 80030c6:	0a1b      	lsrs	r3, r3, #8
 80030c8:	b29a      	uxth	r2, r3
 80030ca:	4b2a      	ldr	r3, [pc, #168]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 80030cc:	60da      	str	r2, [r3, #12]
 80030ce:	4b28      	ldr	r3, [pc, #160]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030d0:	2280      	movs	r2, #128	; 0x80
 80030d2:	615a      	str	r2, [r3, #20]
 80030d4:	4b26      	ldr	r3, [pc, #152]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030d6:	2280      	movs	r2, #128	; 0x80
 80030d8:	611a      	str	r2, [r3, #16]
 80030da:	4b25      	ldr	r3, [pc, #148]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030dc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80030e0:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(y & 0XFF);
 80030e2:	4b23      	ldr	r3, [pc, #140]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030e4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030e8:	611a      	str	r2, [r3, #16]
 80030ea:	4b21      	ldr	r3, [pc, #132]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030ec:	f44f 7200 	mov.w	r2, #512	; 0x200
 80030f0:	615a      	str	r2, [r3, #20]
 80030f2:	88bb      	ldrh	r3, [r7, #4]
 80030f4:	4a1f      	ldr	r2, [pc, #124]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 80030f6:	b2db      	uxtb	r3, r3
 80030f8:	60d3      	str	r3, [r2, #12]
 80030fa:	4b1d      	ldr	r3, [pc, #116]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 80030fc:	2280      	movs	r2, #128	; 0x80
 80030fe:	615a      	str	r2, [r3, #20]
 8003100:	4b1b      	ldr	r3, [pc, #108]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003102:	2280      	movs	r2, #128	; 0x80
 8003104:	611a      	str	r2, [r3, #16]
 8003106:	4b1a      	ldr	r3, [pc, #104]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003108:	f44f 7200 	mov.w	r2, #512	; 0x200
 800310c:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(y >> 8);
 800310e:	4b18      	ldr	r3, [pc, #96]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003110:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003114:	611a      	str	r2, [r3, #16]
 8003116:	4b16      	ldr	r3, [pc, #88]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003118:	f44f 7200 	mov.w	r2, #512	; 0x200
 800311c:	615a      	str	r2, [r3, #20]
 800311e:	88bb      	ldrh	r3, [r7, #4]
 8003120:	0a1b      	lsrs	r3, r3, #8
 8003122:	b29a      	uxth	r2, r3
 8003124:	4b13      	ldr	r3, [pc, #76]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 8003126:	60da      	str	r2, [r3, #12]
 8003128:	4b11      	ldr	r3, [pc, #68]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800312a:	2280      	movs	r2, #128	; 0x80
 800312c:	615a      	str	r2, [r3, #20]
 800312e:	4b10      	ldr	r3, [pc, #64]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003130:	2280      	movs	r2, #128	; 0x80
 8003132:	611a      	str	r2, [r3, #16]
 8003134:	4b0e      	ldr	r3, [pc, #56]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003136:	f44f 7200 	mov.w	r2, #512	; 0x200
 800313a:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(y & 0XFF);
 800313c:	4b0c      	ldr	r3, [pc, #48]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800313e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003142:	611a      	str	r2, [r3, #16]
 8003144:	4b0a      	ldr	r3, [pc, #40]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003146:	f44f 7200 	mov.w	r2, #512	; 0x200
 800314a:	615a      	str	r2, [r3, #20]
 800314c:	88bb      	ldrh	r3, [r7, #4]
 800314e:	4a09      	ldr	r2, [pc, #36]	; (8003174 <LCD_Fast_DrawPoint+0x3a0>)
 8003150:	b2db      	uxtb	r3, r3
 8003152:	60d3      	str	r3, [r2, #12]
 8003154:	4b06      	ldr	r3, [pc, #24]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003156:	2280      	movs	r2, #128	; 0x80
 8003158:	615a      	str	r2, [r3, #20]
 800315a:	4b05      	ldr	r3, [pc, #20]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 800315c:	2280      	movs	r2, #128	; 0x80
 800315e:	611a      	str	r2, [r3, #16]
 8003160:	4b03      	ldr	r3, [pc, #12]	; (8003170 <LCD_Fast_DrawPoint+0x39c>)
 8003162:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003166:	611a      	str	r2, [r3, #16]
 8003168:	e095      	b.n	8003296 <LCD_Fast_DrawPoint+0x4c2>
 800316a:	bf00      	nop
 800316c:	200000a8 	.word	0x200000a8
 8003170:	40011000 	.word	0x40011000
 8003174:	40010c00 	.word	0x40010c00
	} else if (lcddev.id == 0X6804) {
 8003178:	4b5e      	ldr	r3, [pc, #376]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 800317a:	889b      	ldrh	r3, [r3, #4]
 800317c:	f646 0204 	movw	r2, #26628	; 0x6804
 8003180:	4293      	cmp	r3, r2
 8003182:	d16f      	bne.n	8003264 <LCD_Fast_DrawPoint+0x490>
		if (lcddev.dir == 1)
 8003184:	4b5b      	ldr	r3, [pc, #364]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 8003186:	799b      	ldrb	r3, [r3, #6]
 8003188:	2b01      	cmp	r3, #1
 800318a:	d106      	bne.n	800319a <LCD_Fast_DrawPoint+0x3c6>
			x = lcddev.width - 1 - x;	//横屏时处理
 800318c:	4b59      	ldr	r3, [pc, #356]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 800318e:	881a      	ldrh	r2, [r3, #0]
 8003190:	88fb      	ldrh	r3, [r7, #6]
 8003192:	1ad3      	subs	r3, r2, r3
 8003194:	b29b      	uxth	r3, r3
 8003196:	3b01      	subs	r3, #1
 8003198:	80fb      	strh	r3, [r7, #6]
		LCD_WR_REG(lcddev.setxcmd);
 800319a:	4b56      	ldr	r3, [pc, #344]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 800319c:	895b      	ldrh	r3, [r3, #10]
 800319e:	4618      	mov	r0, r3
 80031a0:	f7fe ff38 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(x >> 8);
 80031a4:	4b54      	ldr	r3, [pc, #336]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031a6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80031aa:	611a      	str	r2, [r3, #16]
 80031ac:	4b52      	ldr	r3, [pc, #328]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031ae:	f44f 7200 	mov.w	r2, #512	; 0x200
 80031b2:	615a      	str	r2, [r3, #20]
 80031b4:	88fb      	ldrh	r3, [r7, #6]
 80031b6:	0a1b      	lsrs	r3, r3, #8
 80031b8:	b29a      	uxth	r2, r3
 80031ba:	4b50      	ldr	r3, [pc, #320]	; (80032fc <LCD_Fast_DrawPoint+0x528>)
 80031bc:	60da      	str	r2, [r3, #12]
 80031be:	4b4e      	ldr	r3, [pc, #312]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031c0:	2280      	movs	r2, #128	; 0x80
 80031c2:	615a      	str	r2, [r3, #20]
 80031c4:	4b4c      	ldr	r3, [pc, #304]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031c6:	2280      	movs	r2, #128	; 0x80
 80031c8:	611a      	str	r2, [r3, #16]
 80031ca:	4b4b      	ldr	r3, [pc, #300]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031cc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80031d0:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(x & 0XFF);
 80031d2:	4b49      	ldr	r3, [pc, #292]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031d4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80031d8:	611a      	str	r2, [r3, #16]
 80031da:	4b47      	ldr	r3, [pc, #284]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031dc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80031e0:	615a      	str	r2, [r3, #20]
 80031e2:	88fb      	ldrh	r3, [r7, #6]
 80031e4:	4a45      	ldr	r2, [pc, #276]	; (80032fc <LCD_Fast_DrawPoint+0x528>)
 80031e6:	b2db      	uxtb	r3, r3
 80031e8:	60d3      	str	r3, [r2, #12]
 80031ea:	4b43      	ldr	r3, [pc, #268]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031ec:	2280      	movs	r2, #128	; 0x80
 80031ee:	615a      	str	r2, [r3, #20]
 80031f0:	4b41      	ldr	r3, [pc, #260]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031f2:	2280      	movs	r2, #128	; 0x80
 80031f4:	611a      	str	r2, [r3, #16]
 80031f6:	4b40      	ldr	r3, [pc, #256]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80031f8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80031fc:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 80031fe:	4b3d      	ldr	r3, [pc, #244]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 8003200:	899b      	ldrh	r3, [r3, #12]
 8003202:	4618      	mov	r0, r3
 8003204:	f7fe ff06 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(y >> 8);
 8003208:	4b3b      	ldr	r3, [pc, #236]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 800320a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800320e:	611a      	str	r2, [r3, #16]
 8003210:	4b39      	ldr	r3, [pc, #228]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003212:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003216:	615a      	str	r2, [r3, #20]
 8003218:	88bb      	ldrh	r3, [r7, #4]
 800321a:	0a1b      	lsrs	r3, r3, #8
 800321c:	b29a      	uxth	r2, r3
 800321e:	4b37      	ldr	r3, [pc, #220]	; (80032fc <LCD_Fast_DrawPoint+0x528>)
 8003220:	60da      	str	r2, [r3, #12]
 8003222:	4b35      	ldr	r3, [pc, #212]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003224:	2280      	movs	r2, #128	; 0x80
 8003226:	615a      	str	r2, [r3, #20]
 8003228:	4b33      	ldr	r3, [pc, #204]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 800322a:	2280      	movs	r2, #128	; 0x80
 800322c:	611a      	str	r2, [r3, #16]
 800322e:	4b32      	ldr	r3, [pc, #200]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003230:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003234:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(y & 0XFF);
 8003236:	4b30      	ldr	r3, [pc, #192]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003238:	f44f 7280 	mov.w	r2, #256	; 0x100
 800323c:	611a      	str	r2, [r3, #16]
 800323e:	4b2e      	ldr	r3, [pc, #184]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003240:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003244:	615a      	str	r2, [r3, #20]
 8003246:	88bb      	ldrh	r3, [r7, #4]
 8003248:	4a2c      	ldr	r2, [pc, #176]	; (80032fc <LCD_Fast_DrawPoint+0x528>)
 800324a:	b2db      	uxtb	r3, r3
 800324c:	60d3      	str	r3, [r2, #12]
 800324e:	4b2a      	ldr	r3, [pc, #168]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003250:	2280      	movs	r2, #128	; 0x80
 8003252:	615a      	str	r2, [r3, #20]
 8003254:	4b28      	ldr	r3, [pc, #160]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003256:	2280      	movs	r2, #128	; 0x80
 8003258:	611a      	str	r2, [r3, #16]
 800325a:	4b27      	ldr	r3, [pc, #156]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 800325c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003260:	611a      	str	r2, [r3, #16]
 8003262:	e018      	b.n	8003296 <LCD_Fast_DrawPoint+0x4c2>
	} else {
		if (lcddev.dir == 1)
 8003264:	4b23      	ldr	r3, [pc, #140]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 8003266:	799b      	ldrb	r3, [r3, #6]
 8003268:	2b01      	cmp	r3, #1
 800326a:	d106      	bne.n	800327a <LCD_Fast_DrawPoint+0x4a6>
			x = lcddev.width - 1 - x;	//横屏其实就是调转x,y坐标
 800326c:	4b21      	ldr	r3, [pc, #132]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 800326e:	881a      	ldrh	r2, [r3, #0]
 8003270:	88fb      	ldrh	r3, [r7, #6]
 8003272:	1ad3      	subs	r3, r2, r3
 8003274:	b29b      	uxth	r3, r3
 8003276:	3b01      	subs	r3, #1
 8003278:	80fb      	strh	r3, [r7, #6]
		LCD_WriteReg(lcddev.setxcmd, x);
 800327a:	4b1e      	ldr	r3, [pc, #120]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 800327c:	895b      	ldrh	r3, [r3, #10]
 800327e:	88fa      	ldrh	r2, [r7, #6]
 8003280:	4611      	mov	r1, r2
 8003282:	4618      	mov	r0, r3
 8003284:	f7fe ff52 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(lcddev.setycmd, y);
 8003288:	4b1a      	ldr	r3, [pc, #104]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 800328a:	899b      	ldrh	r3, [r3, #12]
 800328c:	88ba      	ldrh	r2, [r7, #4]
 800328e:	4611      	mov	r1, r2
 8003290:	4618      	mov	r0, r3
 8003292:	f7fe ff4b 	bl	800212c <LCD_WriteReg>
	}
	LCD_RS_CLR;
 8003296:	4b18      	ldr	r3, [pc, #96]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 8003298:	f44f 7280 	mov.w	r2, #256	; 0x100
 800329c:	615a      	str	r2, [r3, #20]
	LCD_CS_CLR;
 800329e:	4b16      	ldr	r3, [pc, #88]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032a0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80032a4:	615a      	str	r2, [r3, #20]
	DATAOUT(lcddev.wramcmd);	//写指令
 80032a6:	4b13      	ldr	r3, [pc, #76]	; (80032f4 <LCD_Fast_DrawPoint+0x520>)
 80032a8:	891a      	ldrh	r2, [r3, #8]
 80032aa:	4b14      	ldr	r3, [pc, #80]	; (80032fc <LCD_Fast_DrawPoint+0x528>)
 80032ac:	60da      	str	r2, [r3, #12]
	LCD_WR_CLR;
 80032ae:	4b12      	ldr	r3, [pc, #72]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032b0:	2280      	movs	r2, #128	; 0x80
 80032b2:	615a      	str	r2, [r3, #20]
	LCD_WR_SET;
 80032b4:	4b10      	ldr	r3, [pc, #64]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032b6:	2280      	movs	r2, #128	; 0x80
 80032b8:	611a      	str	r2, [r3, #16]
	LCD_CS_SET;
 80032ba:	4b0f      	ldr	r3, [pc, #60]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032bc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80032c0:	611a      	str	r2, [r3, #16]
	LCD_WR_DATA(color);		//写数据
 80032c2:	4b0d      	ldr	r3, [pc, #52]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032c4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80032c8:	611a      	str	r2, [r3, #16]
 80032ca:	4b0b      	ldr	r3, [pc, #44]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032cc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80032d0:	615a      	str	r2, [r3, #20]
 80032d2:	4a0a      	ldr	r2, [pc, #40]	; (80032fc <LCD_Fast_DrawPoint+0x528>)
 80032d4:	887b      	ldrh	r3, [r7, #2]
 80032d6:	60d3      	str	r3, [r2, #12]
 80032d8:	4b07      	ldr	r3, [pc, #28]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032da:	2280      	movs	r2, #128	; 0x80
 80032dc:	615a      	str	r2, [r3, #20]
 80032de:	4b06      	ldr	r3, [pc, #24]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032e0:	2280      	movs	r2, #128	; 0x80
 80032e2:	611a      	str	r2, [r3, #16]
 80032e4:	4b04      	ldr	r3, [pc, #16]	; (80032f8 <LCD_Fast_DrawPoint+0x524>)
 80032e6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80032ea:	611a      	str	r2, [r3, #16]
}
 80032ec:	bf00      	nop
 80032ee:	3708      	adds	r7, #8
 80032f0:	46bd      	mov	sp, r7
 80032f2:	bd80      	pop	{r7, pc}
 80032f4:	200000a8 	.word	0x200000a8
 80032f8:	40011000 	.word	0x40011000
 80032fc:	40010c00 	.word	0x40010c00

08003300 <LCD_SSD_BackLightSet>:
//SSD1963 背光设置
//pwm:背光等级,0~100.越大越亮.
void LCD_SSD_BackLightSet(uint8_t pwm) {
 8003300:	b590      	push	{r4, r7, lr}
 8003302:	b083      	sub	sp, #12
 8003304:	af00      	add	r7, sp, #0
 8003306:	4603      	mov	r3, r0
 8003308:	71fb      	strb	r3, [r7, #7]
	LCD_WR_REG(0xBE);	//配置PWM输出
 800330a:	20be      	movs	r0, #190	; 0xbe
 800330c:	f7fe fe82 	bl	8002014 <LCD_WR_REG>
	LCD_WR_DATA(0x05);	//1设置PWM频率
 8003310:	4b4b      	ldr	r3, [pc, #300]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003312:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003316:	611a      	str	r2, [r3, #16]
 8003318:	4b49      	ldr	r3, [pc, #292]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800331a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800331e:	615a      	str	r2, [r3, #20]
 8003320:	4b48      	ldr	r3, [pc, #288]	; (8003444 <LCD_SSD_BackLightSet+0x144>)
 8003322:	2205      	movs	r2, #5
 8003324:	60da      	str	r2, [r3, #12]
 8003326:	4b46      	ldr	r3, [pc, #280]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003328:	2280      	movs	r2, #128	; 0x80
 800332a:	615a      	str	r2, [r3, #20]
 800332c:	4b44      	ldr	r3, [pc, #272]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800332e:	2280      	movs	r2, #128	; 0x80
 8003330:	611a      	str	r2, [r3, #16]
 8003332:	4b43      	ldr	r3, [pc, #268]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003334:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003338:	611a      	str	r2, [r3, #16]
	LCD_WR_DATA(pwm * 2.55);	//2设置PWM占空比
 800333a:	4b41      	ldr	r3, [pc, #260]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800333c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003340:	611a      	str	r2, [r3, #16]
 8003342:	4b3f      	ldr	r3, [pc, #252]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003344:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003348:	615a      	str	r2, [r3, #20]
 800334a:	79fb      	ldrb	r3, [r7, #7]
 800334c:	4618      	mov	r0, r3
 800334e:	f7fd f8bd 	bl	80004cc <__aeabi_i2d>
 8003352:	a339      	add	r3, pc, #228	; (adr r3, 8003438 <LCD_SSD_BackLightSet+0x138>)
 8003354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003358:	f7fd f922 	bl	80005a0 <__aeabi_dmul>
 800335c:	4603      	mov	r3, r0
 800335e:	460c      	mov	r4, r1
 8003360:	461a      	mov	r2, r3
 8003362:	4623      	mov	r3, r4
 8003364:	4c37      	ldr	r4, [pc, #220]	; (8003444 <LCD_SSD_BackLightSet+0x144>)
 8003366:	4610      	mov	r0, r2
 8003368:	4619      	mov	r1, r3
 800336a:	f7fd fb2b 	bl	80009c4 <__aeabi_d2uiz>
 800336e:	4603      	mov	r3, r0
 8003370:	60e3      	str	r3, [r4, #12]
 8003372:	4b33      	ldr	r3, [pc, #204]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003374:	2280      	movs	r2, #128	; 0x80
 8003376:	615a      	str	r2, [r3, #20]
 8003378:	4b31      	ldr	r3, [pc, #196]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800337a:	2280      	movs	r2, #128	; 0x80
 800337c:	611a      	str	r2, [r3, #16]
 800337e:	4b30      	ldr	r3, [pc, #192]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003380:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003384:	611a      	str	r2, [r3, #16]
	LCD_WR_DATA(0x01);	//3设置C
 8003386:	4b2e      	ldr	r3, [pc, #184]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003388:	f44f 7280 	mov.w	r2, #256	; 0x100
 800338c:	611a      	str	r2, [r3, #16]
 800338e:	4b2c      	ldr	r3, [pc, #176]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003390:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003394:	615a      	str	r2, [r3, #20]
 8003396:	4b2b      	ldr	r3, [pc, #172]	; (8003444 <LCD_SSD_BackLightSet+0x144>)
 8003398:	2201      	movs	r2, #1
 800339a:	60da      	str	r2, [r3, #12]
 800339c:	4b28      	ldr	r3, [pc, #160]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800339e:	2280      	movs	r2, #128	; 0x80
 80033a0:	615a      	str	r2, [r3, #20]
 80033a2:	4b27      	ldr	r3, [pc, #156]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033a4:	2280      	movs	r2, #128	; 0x80
 80033a6:	611a      	str	r2, [r3, #16]
 80033a8:	4b25      	ldr	r3, [pc, #148]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033aa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80033ae:	611a      	str	r2, [r3, #16]
	LCD_WR_DATA(0xFF);	//4设置D
 80033b0:	4b23      	ldr	r3, [pc, #140]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80033b6:	611a      	str	r2, [r3, #16]
 80033b8:	4b21      	ldr	r3, [pc, #132]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033ba:	f44f 7200 	mov.w	r2, #512	; 0x200
 80033be:	615a      	str	r2, [r3, #20]
 80033c0:	4b20      	ldr	r3, [pc, #128]	; (8003444 <LCD_SSD_BackLightSet+0x144>)
 80033c2:	22ff      	movs	r2, #255	; 0xff
 80033c4:	60da      	str	r2, [r3, #12]
 80033c6:	4b1e      	ldr	r3, [pc, #120]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033c8:	2280      	movs	r2, #128	; 0x80
 80033ca:	615a      	str	r2, [r3, #20]
 80033cc:	4b1c      	ldr	r3, [pc, #112]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033ce:	2280      	movs	r2, #128	; 0x80
 80033d0:	611a      	str	r2, [r3, #16]
 80033d2:	4b1b      	ldr	r3, [pc, #108]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033d4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80033d8:	611a      	str	r2, [r3, #16]
	LCD_WR_DATA(0x00);	//5设置E
 80033da:	4b19      	ldr	r3, [pc, #100]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033dc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80033e0:	611a      	str	r2, [r3, #16]
 80033e2:	4b17      	ldr	r3, [pc, #92]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80033e8:	615a      	str	r2, [r3, #20]
 80033ea:	4b16      	ldr	r3, [pc, #88]	; (8003444 <LCD_SSD_BackLightSet+0x144>)
 80033ec:	2200      	movs	r2, #0
 80033ee:	60da      	str	r2, [r3, #12]
 80033f0:	4b13      	ldr	r3, [pc, #76]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033f2:	2280      	movs	r2, #128	; 0x80
 80033f4:	615a      	str	r2, [r3, #20]
 80033f6:	4b12      	ldr	r3, [pc, #72]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033f8:	2280      	movs	r2, #128	; 0x80
 80033fa:	611a      	str	r2, [r3, #16]
 80033fc:	4b10      	ldr	r3, [pc, #64]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 80033fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003402:	611a      	str	r2, [r3, #16]
	LCD_WR_DATA(0x00);	//6设置F
 8003404:	4b0e      	ldr	r3, [pc, #56]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003406:	f44f 7280 	mov.w	r2, #256	; 0x100
 800340a:	611a      	str	r2, [r3, #16]
 800340c:	4b0c      	ldr	r3, [pc, #48]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800340e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003412:	615a      	str	r2, [r3, #20]
 8003414:	4b0b      	ldr	r3, [pc, #44]	; (8003444 <LCD_SSD_BackLightSet+0x144>)
 8003416:	2200      	movs	r2, #0
 8003418:	60da      	str	r2, [r3, #12]
 800341a:	4b09      	ldr	r3, [pc, #36]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 800341c:	2280      	movs	r2, #128	; 0x80
 800341e:	615a      	str	r2, [r3, #20]
 8003420:	4b07      	ldr	r3, [pc, #28]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003422:	2280      	movs	r2, #128	; 0x80
 8003424:	611a      	str	r2, [r3, #16]
 8003426:	4b06      	ldr	r3, [pc, #24]	; (8003440 <LCD_SSD_BackLightSet+0x140>)
 8003428:	f44f 7200 	mov.w	r2, #512	; 0x200
 800342c:	611a      	str	r2, [r3, #16]
}
 800342e:	bf00      	nop
 8003430:	370c      	adds	r7, #12
 8003432:	46bd      	mov	sp, r7
 8003434:	bd90      	pop	{r4, r7, pc}
 8003436:	bf00      	nop
 8003438:	66666666 	.word	0x66666666
 800343c:	40046666 	.word	0x40046666
 8003440:	40011000 	.word	0x40011000
 8003444:	40010c00 	.word	0x40010c00

08003448 <LCD_Display_Dir>:
// Set LCD display direction
// dir: 0, vertical 1, horizontal
void LCD_Display_Dir(uint8_t dir) {
 8003448:	b580      	push	{r7, lr}
 800344a:	b082      	sub	sp, #8
 800344c:	af00      	add	r7, sp, #0
 800344e:	4603      	mov	r3, r0
 8003450:	71fb      	strb	r3, [r7, #7]
	if (dir == 0)			//竖屏
 8003452:	79fb      	ldrb	r3, [r7, #7]
 8003454:	2b00      	cmp	r3, #0
 8003456:	d177      	bne.n	8003548 <LCD_Display_Dir+0x100>
			{
		lcddev.dir = 0;	//竖屏
 8003458:	4b80      	ldr	r3, [pc, #512]	; (800365c <LCD_Display_Dir+0x214>)
 800345a:	2200      	movs	r2, #0
 800345c:	719a      	strb	r2, [r3, #6]
		lcddev.width = 240;
 800345e:	4b7f      	ldr	r3, [pc, #508]	; (800365c <LCD_Display_Dir+0x214>)
 8003460:	22f0      	movs	r2, #240	; 0xf0
 8003462:	801a      	strh	r2, [r3, #0]
		lcddev.height = 320;
 8003464:	4b7d      	ldr	r3, [pc, #500]	; (800365c <LCD_Display_Dir+0x214>)
 8003466:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800346a:	805a      	strh	r2, [r3, #2]
		if (lcddev.id == 0X9341 || lcddev.id == 0X6804 || lcddev.id == 0X5310) {
 800346c:	4b7b      	ldr	r3, [pc, #492]	; (800365c <LCD_Display_Dir+0x214>)
 800346e:	889b      	ldrh	r3, [r3, #4]
 8003470:	f249 3241 	movw	r2, #37697	; 0x9341
 8003474:	4293      	cmp	r3, r2
 8003476:	d00b      	beq.n	8003490 <LCD_Display_Dir+0x48>
 8003478:	4b78      	ldr	r3, [pc, #480]	; (800365c <LCD_Display_Dir+0x214>)
 800347a:	889b      	ldrh	r3, [r3, #4]
 800347c:	f646 0204 	movw	r2, #26628	; 0x6804
 8003480:	4293      	cmp	r3, r2
 8003482:	d005      	beq.n	8003490 <LCD_Display_Dir+0x48>
 8003484:	4b75      	ldr	r3, [pc, #468]	; (800365c <LCD_Display_Dir+0x214>)
 8003486:	889b      	ldrh	r3, [r3, #4]
 8003488:	f245 3210 	movw	r2, #21264	; 0x5310
 800348c:	4293      	cmp	r3, r2
 800348e:	d11e      	bne.n	80034ce <LCD_Display_Dir+0x86>
			lcddev.wramcmd = 0X2C;
 8003490:	4b72      	ldr	r3, [pc, #456]	; (800365c <LCD_Display_Dir+0x214>)
 8003492:	222c      	movs	r2, #44	; 0x2c
 8003494:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2A;
 8003496:	4b71      	ldr	r3, [pc, #452]	; (800365c <LCD_Display_Dir+0x214>)
 8003498:	222a      	movs	r2, #42	; 0x2a
 800349a:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2B;
 800349c:	4b6f      	ldr	r3, [pc, #444]	; (800365c <LCD_Display_Dir+0x214>)
 800349e:	222b      	movs	r2, #43	; 0x2b
 80034a0:	819a      	strh	r2, [r3, #12]
			if (lcddev.id == 0X6804 || lcddev.id == 0X5310) {
 80034a2:	4b6e      	ldr	r3, [pc, #440]	; (800365c <LCD_Display_Dir+0x214>)
 80034a4:	889b      	ldrh	r3, [r3, #4]
 80034a6:	f646 0204 	movw	r2, #26628	; 0x6804
 80034aa:	4293      	cmp	r3, r2
 80034ac:	d006      	beq.n	80034bc <LCD_Display_Dir+0x74>
 80034ae:	4b6b      	ldr	r3, [pc, #428]	; (800365c <LCD_Display_Dir+0x214>)
 80034b0:	889b      	ldrh	r3, [r3, #4]
 80034b2:	f245 3210 	movw	r2, #21264	; 0x5310
 80034b6:	4293      	cmp	r3, r2
 80034b8:	f040 80c7 	bne.w	800364a <LCD_Display_Dir+0x202>
				lcddev.width = 320;
 80034bc:	4b67      	ldr	r3, [pc, #412]	; (800365c <LCD_Display_Dir+0x214>)
 80034be:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80034c2:	801a      	strh	r2, [r3, #0]
				lcddev.height = 480;
 80034c4:	4b65      	ldr	r3, [pc, #404]	; (800365c <LCD_Display_Dir+0x214>)
 80034c6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80034ca:	805a      	strh	r2, [r3, #2]
			if (lcddev.id == 0X6804 || lcddev.id == 0X5310) {
 80034cc:	e0bd      	b.n	800364a <LCD_Display_Dir+0x202>
			}
		} else if (lcddev.id == 0x5510) {
 80034ce:	4b63      	ldr	r3, [pc, #396]	; (800365c <LCD_Display_Dir+0x214>)
 80034d0:	889b      	ldrh	r3, [r3, #4]
 80034d2:	f245 5210 	movw	r2, #21776	; 0x5510
 80034d6:	4293      	cmp	r3, r2
 80034d8:	d114      	bne.n	8003504 <LCD_Display_Dir+0xbc>
			lcddev.wramcmd = 0X2C00;
 80034da:	4b60      	ldr	r3, [pc, #384]	; (800365c <LCD_Display_Dir+0x214>)
 80034dc:	f44f 5230 	mov.w	r2, #11264	; 0x2c00
 80034e0:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2A00;
 80034e2:	4b5e      	ldr	r3, [pc, #376]	; (800365c <LCD_Display_Dir+0x214>)
 80034e4:	f44f 5228 	mov.w	r2, #10752	; 0x2a00
 80034e8:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2B00;
 80034ea:	4b5c      	ldr	r3, [pc, #368]	; (800365c <LCD_Display_Dir+0x214>)
 80034ec:	f44f 522c 	mov.w	r2, #11008	; 0x2b00
 80034f0:	819a      	strh	r2, [r3, #12]
			lcddev.width = 480;
 80034f2:	4b5a      	ldr	r3, [pc, #360]	; (800365c <LCD_Display_Dir+0x214>)
 80034f4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80034f8:	801a      	strh	r2, [r3, #0]
			lcddev.height = 800;
 80034fa:	4b58      	ldr	r3, [pc, #352]	; (800365c <LCD_Display_Dir+0x214>)
 80034fc:	f44f 7248 	mov.w	r2, #800	; 0x320
 8003500:	805a      	strh	r2, [r3, #2]
 8003502:	e0a3      	b.n	800364c <LCD_Display_Dir+0x204>
		} else if (lcddev.id == 0X1963) {
 8003504:	4b55      	ldr	r3, [pc, #340]	; (800365c <LCD_Display_Dir+0x214>)
 8003506:	889b      	ldrh	r3, [r3, #4]
 8003508:	f641 1263 	movw	r2, #6499	; 0x1963
 800350c:	4293      	cmp	r3, r2
 800350e:	d111      	bne.n	8003534 <LCD_Display_Dir+0xec>
			lcddev.wramcmd = 0X2C;	//设置写入GRAM的指令
 8003510:	4b52      	ldr	r3, [pc, #328]	; (800365c <LCD_Display_Dir+0x214>)
 8003512:	222c      	movs	r2, #44	; 0x2c
 8003514:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2B;	//设置写X坐标指令
 8003516:	4b51      	ldr	r3, [pc, #324]	; (800365c <LCD_Display_Dir+0x214>)
 8003518:	222b      	movs	r2, #43	; 0x2b
 800351a:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2A;	//设置写Y坐标指令
 800351c:	4b4f      	ldr	r3, [pc, #316]	; (800365c <LCD_Display_Dir+0x214>)
 800351e:	222a      	movs	r2, #42	; 0x2a
 8003520:	819a      	strh	r2, [r3, #12]
			lcddev.width = 480;		//设置宽度480
 8003522:	4b4e      	ldr	r3, [pc, #312]	; (800365c <LCD_Display_Dir+0x214>)
 8003524:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003528:	801a      	strh	r2, [r3, #0]
			lcddev.height = 800;		//设置高度800
 800352a:	4b4c      	ldr	r3, [pc, #304]	; (800365c <LCD_Display_Dir+0x214>)
 800352c:	f44f 7248 	mov.w	r2, #800	; 0x320
 8003530:	805a      	strh	r2, [r3, #2]
 8003532:	e08b      	b.n	800364c <LCD_Display_Dir+0x204>
		} else {
			lcddev.wramcmd = 0X22;
 8003534:	4b49      	ldr	r3, [pc, #292]	; (800365c <LCD_Display_Dir+0x214>)
 8003536:	2222      	movs	r2, #34	; 0x22
 8003538:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X20;
 800353a:	4b48      	ldr	r3, [pc, #288]	; (800365c <LCD_Display_Dir+0x214>)
 800353c:	2220      	movs	r2, #32
 800353e:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X21;
 8003540:	4b46      	ldr	r3, [pc, #280]	; (800365c <LCD_Display_Dir+0x214>)
 8003542:	2221      	movs	r2, #33	; 0x21
 8003544:	819a      	strh	r2, [r3, #12]
 8003546:	e081      	b.n	800364c <LCD_Display_Dir+0x204>
		}
	} else 				//横屏
	{
		lcddev.dir = 1;	//横屏
 8003548:	4b44      	ldr	r3, [pc, #272]	; (800365c <LCD_Display_Dir+0x214>)
 800354a:	2201      	movs	r2, #1
 800354c:	719a      	strb	r2, [r3, #6]
		lcddev.width = 320;
 800354e:	4b43      	ldr	r3, [pc, #268]	; (800365c <LCD_Display_Dir+0x214>)
 8003550:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003554:	801a      	strh	r2, [r3, #0]
		lcddev.height = 240;
 8003556:	4b41      	ldr	r3, [pc, #260]	; (800365c <LCD_Display_Dir+0x214>)
 8003558:	22f0      	movs	r2, #240	; 0xf0
 800355a:	805a      	strh	r2, [r3, #2]
		if (lcddev.id == 0X9341 || lcddev.id == 0X5310) {
 800355c:	4b3f      	ldr	r3, [pc, #252]	; (800365c <LCD_Display_Dir+0x214>)
 800355e:	889b      	ldrh	r3, [r3, #4]
 8003560:	f249 3241 	movw	r2, #37697	; 0x9341
 8003564:	4293      	cmp	r3, r2
 8003566:	d005      	beq.n	8003574 <LCD_Display_Dir+0x12c>
 8003568:	4b3c      	ldr	r3, [pc, #240]	; (800365c <LCD_Display_Dir+0x214>)
 800356a:	889b      	ldrh	r3, [r3, #4]
 800356c:	f245 3210 	movw	r2, #21264	; 0x5310
 8003570:	4293      	cmp	r3, r2
 8003572:	d109      	bne.n	8003588 <LCD_Display_Dir+0x140>
			lcddev.wramcmd = 0X2C;
 8003574:	4b39      	ldr	r3, [pc, #228]	; (800365c <LCD_Display_Dir+0x214>)
 8003576:	222c      	movs	r2, #44	; 0x2c
 8003578:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2A;
 800357a:	4b38      	ldr	r3, [pc, #224]	; (800365c <LCD_Display_Dir+0x214>)
 800357c:	222a      	movs	r2, #42	; 0x2a
 800357e:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2B;
 8003580:	4b36      	ldr	r3, [pc, #216]	; (800365c <LCD_Display_Dir+0x214>)
 8003582:	222b      	movs	r2, #43	; 0x2b
 8003584:	819a      	strh	r2, [r3, #12]
 8003586:	e04b      	b.n	8003620 <LCD_Display_Dir+0x1d8>
		} else if (lcddev.id == 0X6804) {
 8003588:	4b34      	ldr	r3, [pc, #208]	; (800365c <LCD_Display_Dir+0x214>)
 800358a:	889b      	ldrh	r3, [r3, #4]
 800358c:	f646 0204 	movw	r2, #26628	; 0x6804
 8003590:	4293      	cmp	r3, r2
 8003592:	d109      	bne.n	80035a8 <LCD_Display_Dir+0x160>
			lcddev.wramcmd = 0X2C;
 8003594:	4b31      	ldr	r3, [pc, #196]	; (800365c <LCD_Display_Dir+0x214>)
 8003596:	222c      	movs	r2, #44	; 0x2c
 8003598:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2B;
 800359a:	4b30      	ldr	r3, [pc, #192]	; (800365c <LCD_Display_Dir+0x214>)
 800359c:	222b      	movs	r2, #43	; 0x2b
 800359e:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2A;
 80035a0:	4b2e      	ldr	r3, [pc, #184]	; (800365c <LCD_Display_Dir+0x214>)
 80035a2:	222a      	movs	r2, #42	; 0x2a
 80035a4:	819a      	strh	r2, [r3, #12]
 80035a6:	e03b      	b.n	8003620 <LCD_Display_Dir+0x1d8>
		} else if (lcddev.id == 0x5510) {
 80035a8:	4b2c      	ldr	r3, [pc, #176]	; (800365c <LCD_Display_Dir+0x214>)
 80035aa:	889b      	ldrh	r3, [r3, #4]
 80035ac:	f245 5210 	movw	r2, #21776	; 0x5510
 80035b0:	4293      	cmp	r3, r2
 80035b2:	d114      	bne.n	80035de <LCD_Display_Dir+0x196>
			lcddev.wramcmd = 0X2C00;
 80035b4:	4b29      	ldr	r3, [pc, #164]	; (800365c <LCD_Display_Dir+0x214>)
 80035b6:	f44f 5230 	mov.w	r2, #11264	; 0x2c00
 80035ba:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2A00;
 80035bc:	4b27      	ldr	r3, [pc, #156]	; (800365c <LCD_Display_Dir+0x214>)
 80035be:	f44f 5228 	mov.w	r2, #10752	; 0x2a00
 80035c2:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2B00;
 80035c4:	4b25      	ldr	r3, [pc, #148]	; (800365c <LCD_Display_Dir+0x214>)
 80035c6:	f44f 522c 	mov.w	r2, #11008	; 0x2b00
 80035ca:	819a      	strh	r2, [r3, #12]
			lcddev.width = 800;
 80035cc:	4b23      	ldr	r3, [pc, #140]	; (800365c <LCD_Display_Dir+0x214>)
 80035ce:	f44f 7248 	mov.w	r2, #800	; 0x320
 80035d2:	801a      	strh	r2, [r3, #0]
			lcddev.height = 480;
 80035d4:	4b21      	ldr	r3, [pc, #132]	; (800365c <LCD_Display_Dir+0x214>)
 80035d6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80035da:	805a      	strh	r2, [r3, #2]
 80035dc:	e020      	b.n	8003620 <LCD_Display_Dir+0x1d8>
		} else if (lcddev.id == 0X1963) {
 80035de:	4b1f      	ldr	r3, [pc, #124]	; (800365c <LCD_Display_Dir+0x214>)
 80035e0:	889b      	ldrh	r3, [r3, #4]
 80035e2:	f641 1263 	movw	r2, #6499	; 0x1963
 80035e6:	4293      	cmp	r3, r2
 80035e8:	d111      	bne.n	800360e <LCD_Display_Dir+0x1c6>
			lcddev.wramcmd = 0X2C;	//设置写入GRAM的指令
 80035ea:	4b1c      	ldr	r3, [pc, #112]	; (800365c <LCD_Display_Dir+0x214>)
 80035ec:	222c      	movs	r2, #44	; 0x2c
 80035ee:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X2A;	//设置写X坐标指令
 80035f0:	4b1a      	ldr	r3, [pc, #104]	; (800365c <LCD_Display_Dir+0x214>)
 80035f2:	222a      	movs	r2, #42	; 0x2a
 80035f4:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X2B;	//设置写Y坐标指令
 80035f6:	4b19      	ldr	r3, [pc, #100]	; (800365c <LCD_Display_Dir+0x214>)
 80035f8:	222b      	movs	r2, #43	; 0x2b
 80035fa:	819a      	strh	r2, [r3, #12]
			lcddev.width = 800;		//设置宽度800
 80035fc:	4b17      	ldr	r3, [pc, #92]	; (800365c <LCD_Display_Dir+0x214>)
 80035fe:	f44f 7248 	mov.w	r2, #800	; 0x320
 8003602:	801a      	strh	r2, [r3, #0]
			lcddev.height = 480;		//设置高度480
 8003604:	4b15      	ldr	r3, [pc, #84]	; (800365c <LCD_Display_Dir+0x214>)
 8003606:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800360a:	805a      	strh	r2, [r3, #2]
 800360c:	e008      	b.n	8003620 <LCD_Display_Dir+0x1d8>
		} else {
			lcddev.wramcmd = 0X22;
 800360e:	4b13      	ldr	r3, [pc, #76]	; (800365c <LCD_Display_Dir+0x214>)
 8003610:	2222      	movs	r2, #34	; 0x22
 8003612:	811a      	strh	r2, [r3, #8]
			lcddev.setxcmd = 0X21;
 8003614:	4b11      	ldr	r3, [pc, #68]	; (800365c <LCD_Display_Dir+0x214>)
 8003616:	2221      	movs	r2, #33	; 0x21
 8003618:	815a      	strh	r2, [r3, #10]
			lcddev.setycmd = 0X20;
 800361a:	4b10      	ldr	r3, [pc, #64]	; (800365c <LCD_Display_Dir+0x214>)
 800361c:	2220      	movs	r2, #32
 800361e:	819a      	strh	r2, [r3, #12]
		}
		if (lcddev.id == 0X6804 || lcddev.id == 0X5310) {
 8003620:	4b0e      	ldr	r3, [pc, #56]	; (800365c <LCD_Display_Dir+0x214>)
 8003622:	889b      	ldrh	r3, [r3, #4]
 8003624:	f646 0204 	movw	r2, #26628	; 0x6804
 8003628:	4293      	cmp	r3, r2
 800362a:	d005      	beq.n	8003638 <LCD_Display_Dir+0x1f0>
 800362c:	4b0b      	ldr	r3, [pc, #44]	; (800365c <LCD_Display_Dir+0x214>)
 800362e:	889b      	ldrh	r3, [r3, #4]
 8003630:	f245 3210 	movw	r2, #21264	; 0x5310
 8003634:	4293      	cmp	r3, r2
 8003636:	d109      	bne.n	800364c <LCD_Display_Dir+0x204>
			lcddev.width = 480;
 8003638:	4b08      	ldr	r3, [pc, #32]	; (800365c <LCD_Display_Dir+0x214>)
 800363a:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800363e:	801a      	strh	r2, [r3, #0]
			lcddev.height = 320;
 8003640:	4b06      	ldr	r3, [pc, #24]	; (800365c <LCD_Display_Dir+0x214>)
 8003642:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8003646:	805a      	strh	r2, [r3, #2]
 8003648:	e000      	b.n	800364c <LCD_Display_Dir+0x204>
			if (lcddev.id == 0X6804 || lcddev.id == 0X5310) {
 800364a:	bf00      	nop
		}
	}
	LCD_Scan_Dir(DFT_SCAN_DIR);	//默认扫描方向
 800364c:	2000      	movs	r0, #0
 800364e:	f7ff f87f 	bl	8002750 <LCD_Scan_Dir>
}
 8003652:	bf00      	nop
 8003654:	3708      	adds	r7, #8
 8003656:	46bd      	mov	sp, r7
 8003658:	bd80      	pop	{r7, pc}
 800365a:	bf00      	nop
 800365c:	200000a8 	.word	0x200000a8

08003660 <LCD_Set_Window>:
//设置窗口,并自动设置画点坐标到窗口左上角(sx,sy).
//sx,sy:窗口起始坐标(左上角)
//width,height:窗口宽度和高度,必须大于0!!
//窗体大小:width*height. 
void LCD_Set_Window(uint16_t sx, uint16_t sy, uint16_t width, uint16_t height) {
 8003660:	b590      	push	{r4, r7, lr}
 8003662:	b087      	sub	sp, #28
 8003664:	af00      	add	r7, sp, #0
 8003666:	4604      	mov	r4, r0
 8003668:	4608      	mov	r0, r1
 800366a:	4611      	mov	r1, r2
 800366c:	461a      	mov	r2, r3
 800366e:	4623      	mov	r3, r4
 8003670:	80fb      	strh	r3, [r7, #6]
 8003672:	4603      	mov	r3, r0
 8003674:	80bb      	strh	r3, [r7, #4]
 8003676:	460b      	mov	r3, r1
 8003678:	807b      	strh	r3, [r7, #2]
 800367a:	4613      	mov	r3, r2
 800367c:	803b      	strh	r3, [r7, #0]
	uint8_t hsareg, heareg, vsareg, veareg;
	uint16_t hsaval, heaval, vsaval, veaval;
	uint16_t twidth, theight;
	twidth = sx + width - 1;
 800367e:	88fa      	ldrh	r2, [r7, #6]
 8003680:	887b      	ldrh	r3, [r7, #2]
 8003682:	4413      	add	r3, r2
 8003684:	b29b      	uxth	r3, r3
 8003686:	3b01      	subs	r3, #1
 8003688:	81fb      	strh	r3, [r7, #14]
	theight = sy + height - 1;
 800368a:	88ba      	ldrh	r2, [r7, #4]
 800368c:	883b      	ldrh	r3, [r7, #0]
 800368e:	4413      	add	r3, r2
 8003690:	b29b      	uxth	r3, r3
 8003692:	3b01      	subs	r3, #1
 8003694:	81bb      	strh	r3, [r7, #12]
	if (lcddev.id == 0X9341 || lcddev.id == 0X5310 || lcddev.id == 0X6804
 8003696:	4b6e      	ldr	r3, [pc, #440]	; (8003850 <LCD_Set_Window+0x1f0>)
 8003698:	889b      	ldrh	r3, [r3, #4]
 800369a:	f249 3241 	movw	r2, #37697	; 0x9341
 800369e:	4293      	cmp	r3, r2
 80036a0:	d017      	beq.n	80036d2 <LCD_Set_Window+0x72>
 80036a2:	4b6b      	ldr	r3, [pc, #428]	; (8003850 <LCD_Set_Window+0x1f0>)
 80036a4:	889b      	ldrh	r3, [r3, #4]
 80036a6:	f245 3210 	movw	r2, #21264	; 0x5310
 80036aa:	4293      	cmp	r3, r2
 80036ac:	d011      	beq.n	80036d2 <LCD_Set_Window+0x72>
 80036ae:	4b68      	ldr	r3, [pc, #416]	; (8003850 <LCD_Set_Window+0x1f0>)
 80036b0:	889b      	ldrh	r3, [r3, #4]
 80036b2:	f646 0204 	movw	r2, #26628	; 0x6804
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d00b      	beq.n	80036d2 <LCD_Set_Window+0x72>
			|| (lcddev.dir == 1 && lcddev.id == 0X1963)) {
 80036ba:	4b65      	ldr	r3, [pc, #404]	; (8003850 <LCD_Set_Window+0x1f0>)
 80036bc:	799b      	ldrb	r3, [r3, #6]
 80036be:	2b01      	cmp	r3, #1
 80036c0:	f040 80cc 	bne.w	800385c <LCD_Set_Window+0x1fc>
 80036c4:	4b62      	ldr	r3, [pc, #392]	; (8003850 <LCD_Set_Window+0x1f0>)
 80036c6:	889b      	ldrh	r3, [r3, #4]
 80036c8:	f641 1263 	movw	r2, #6499	; 0x1963
 80036cc:	4293      	cmp	r3, r2
 80036ce:	f040 80c5 	bne.w	800385c <LCD_Set_Window+0x1fc>
		LCD_WR_REG(lcddev.setxcmd);
 80036d2:	4b5f      	ldr	r3, [pc, #380]	; (8003850 <LCD_Set_Window+0x1f0>)
 80036d4:	895b      	ldrh	r3, [r3, #10]
 80036d6:	4618      	mov	r0, r3
 80036d8:	f7fe fc9c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sx >> 8);
 80036dc:	4b5d      	ldr	r3, [pc, #372]	; (8003854 <LCD_Set_Window+0x1f4>)
 80036de:	f44f 7280 	mov.w	r2, #256	; 0x100
 80036e2:	611a      	str	r2, [r3, #16]
 80036e4:	4b5b      	ldr	r3, [pc, #364]	; (8003854 <LCD_Set_Window+0x1f4>)
 80036e6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80036ea:	615a      	str	r2, [r3, #20]
 80036ec:	88fb      	ldrh	r3, [r7, #6]
 80036ee:	0a1b      	lsrs	r3, r3, #8
 80036f0:	b29a      	uxth	r2, r3
 80036f2:	4b59      	ldr	r3, [pc, #356]	; (8003858 <LCD_Set_Window+0x1f8>)
 80036f4:	60da      	str	r2, [r3, #12]
 80036f6:	4b57      	ldr	r3, [pc, #348]	; (8003854 <LCD_Set_Window+0x1f4>)
 80036f8:	2280      	movs	r2, #128	; 0x80
 80036fa:	615a      	str	r2, [r3, #20]
 80036fc:	4b55      	ldr	r3, [pc, #340]	; (8003854 <LCD_Set_Window+0x1f4>)
 80036fe:	2280      	movs	r2, #128	; 0x80
 8003700:	611a      	str	r2, [r3, #16]
 8003702:	4b54      	ldr	r3, [pc, #336]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003704:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003708:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(sx & 0XFF);
 800370a:	4b52      	ldr	r3, [pc, #328]	; (8003854 <LCD_Set_Window+0x1f4>)
 800370c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003710:	611a      	str	r2, [r3, #16]
 8003712:	4b50      	ldr	r3, [pc, #320]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003714:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003718:	615a      	str	r2, [r3, #20]
 800371a:	88fb      	ldrh	r3, [r7, #6]
 800371c:	4a4e      	ldr	r2, [pc, #312]	; (8003858 <LCD_Set_Window+0x1f8>)
 800371e:	b2db      	uxtb	r3, r3
 8003720:	60d3      	str	r3, [r2, #12]
 8003722:	4b4c      	ldr	r3, [pc, #304]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003724:	2280      	movs	r2, #128	; 0x80
 8003726:	615a      	str	r2, [r3, #20]
 8003728:	4b4a      	ldr	r3, [pc, #296]	; (8003854 <LCD_Set_Window+0x1f4>)
 800372a:	2280      	movs	r2, #128	; 0x80
 800372c:	611a      	str	r2, [r3, #16]
 800372e:	4b49      	ldr	r3, [pc, #292]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003730:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003734:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(twidth >> 8);
 8003736:	4b47      	ldr	r3, [pc, #284]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003738:	f44f 7280 	mov.w	r2, #256	; 0x100
 800373c:	611a      	str	r2, [r3, #16]
 800373e:	4b45      	ldr	r3, [pc, #276]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003740:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003744:	615a      	str	r2, [r3, #20]
 8003746:	89fb      	ldrh	r3, [r7, #14]
 8003748:	0a1b      	lsrs	r3, r3, #8
 800374a:	b29a      	uxth	r2, r3
 800374c:	4b42      	ldr	r3, [pc, #264]	; (8003858 <LCD_Set_Window+0x1f8>)
 800374e:	60da      	str	r2, [r3, #12]
 8003750:	4b40      	ldr	r3, [pc, #256]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003752:	2280      	movs	r2, #128	; 0x80
 8003754:	615a      	str	r2, [r3, #20]
 8003756:	4b3f      	ldr	r3, [pc, #252]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003758:	2280      	movs	r2, #128	; 0x80
 800375a:	611a      	str	r2, [r3, #16]
 800375c:	4b3d      	ldr	r3, [pc, #244]	; (8003854 <LCD_Set_Window+0x1f4>)
 800375e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003762:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(twidth & 0XFF);
 8003764:	4b3b      	ldr	r3, [pc, #236]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003766:	f44f 7280 	mov.w	r2, #256	; 0x100
 800376a:	611a      	str	r2, [r3, #16]
 800376c:	4b39      	ldr	r3, [pc, #228]	; (8003854 <LCD_Set_Window+0x1f4>)
 800376e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003772:	615a      	str	r2, [r3, #20]
 8003774:	89fb      	ldrh	r3, [r7, #14]
 8003776:	4a38      	ldr	r2, [pc, #224]	; (8003858 <LCD_Set_Window+0x1f8>)
 8003778:	b2db      	uxtb	r3, r3
 800377a:	60d3      	str	r3, [r2, #12]
 800377c:	4b35      	ldr	r3, [pc, #212]	; (8003854 <LCD_Set_Window+0x1f4>)
 800377e:	2280      	movs	r2, #128	; 0x80
 8003780:	615a      	str	r2, [r3, #20]
 8003782:	4b34      	ldr	r3, [pc, #208]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003784:	2280      	movs	r2, #128	; 0x80
 8003786:	611a      	str	r2, [r3, #16]
 8003788:	4b32      	ldr	r3, [pc, #200]	; (8003854 <LCD_Set_Window+0x1f4>)
 800378a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800378e:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8003790:	4b2f      	ldr	r3, [pc, #188]	; (8003850 <LCD_Set_Window+0x1f0>)
 8003792:	899b      	ldrh	r3, [r3, #12]
 8003794:	4618      	mov	r0, r3
 8003796:	f7fe fc3d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sy >> 8);
 800379a:	4b2e      	ldr	r3, [pc, #184]	; (8003854 <LCD_Set_Window+0x1f4>)
 800379c:	f44f 7280 	mov.w	r2, #256	; 0x100
 80037a0:	611a      	str	r2, [r3, #16]
 80037a2:	4b2c      	ldr	r3, [pc, #176]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037a4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80037a8:	615a      	str	r2, [r3, #20]
 80037aa:	88bb      	ldrh	r3, [r7, #4]
 80037ac:	0a1b      	lsrs	r3, r3, #8
 80037ae:	b29a      	uxth	r2, r3
 80037b0:	4b29      	ldr	r3, [pc, #164]	; (8003858 <LCD_Set_Window+0x1f8>)
 80037b2:	60da      	str	r2, [r3, #12]
 80037b4:	4b27      	ldr	r3, [pc, #156]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037b6:	2280      	movs	r2, #128	; 0x80
 80037b8:	615a      	str	r2, [r3, #20]
 80037ba:	4b26      	ldr	r3, [pc, #152]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037bc:	2280      	movs	r2, #128	; 0x80
 80037be:	611a      	str	r2, [r3, #16]
 80037c0:	4b24      	ldr	r3, [pc, #144]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037c2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80037c6:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(sy & 0XFF);
 80037c8:	4b22      	ldr	r3, [pc, #136]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037ca:	f44f 7280 	mov.w	r2, #256	; 0x100
 80037ce:	611a      	str	r2, [r3, #16]
 80037d0:	4b20      	ldr	r3, [pc, #128]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037d2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80037d6:	615a      	str	r2, [r3, #20]
 80037d8:	88bb      	ldrh	r3, [r7, #4]
 80037da:	4a1f      	ldr	r2, [pc, #124]	; (8003858 <LCD_Set_Window+0x1f8>)
 80037dc:	b2db      	uxtb	r3, r3
 80037de:	60d3      	str	r3, [r2, #12]
 80037e0:	4b1c      	ldr	r3, [pc, #112]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037e2:	2280      	movs	r2, #128	; 0x80
 80037e4:	615a      	str	r2, [r3, #20]
 80037e6:	4b1b      	ldr	r3, [pc, #108]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037e8:	2280      	movs	r2, #128	; 0x80
 80037ea:	611a      	str	r2, [r3, #16]
 80037ec:	4b19      	ldr	r3, [pc, #100]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037ee:	f44f 7200 	mov.w	r2, #512	; 0x200
 80037f2:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(theight >> 8);
 80037f4:	4b17      	ldr	r3, [pc, #92]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80037fa:	611a      	str	r2, [r3, #16]
 80037fc:	4b15      	ldr	r3, [pc, #84]	; (8003854 <LCD_Set_Window+0x1f4>)
 80037fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003802:	615a      	str	r2, [r3, #20]
 8003804:	89bb      	ldrh	r3, [r7, #12]
 8003806:	0a1b      	lsrs	r3, r3, #8
 8003808:	b29a      	uxth	r2, r3
 800380a:	4b13      	ldr	r3, [pc, #76]	; (8003858 <LCD_Set_Window+0x1f8>)
 800380c:	60da      	str	r2, [r3, #12]
 800380e:	4b11      	ldr	r3, [pc, #68]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003810:	2280      	movs	r2, #128	; 0x80
 8003812:	615a      	str	r2, [r3, #20]
 8003814:	4b0f      	ldr	r3, [pc, #60]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003816:	2280      	movs	r2, #128	; 0x80
 8003818:	611a      	str	r2, [r3, #16]
 800381a:	4b0e      	ldr	r3, [pc, #56]	; (8003854 <LCD_Set_Window+0x1f4>)
 800381c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003820:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(theight & 0XFF);
 8003822:	4b0c      	ldr	r3, [pc, #48]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003824:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003828:	611a      	str	r2, [r3, #16]
 800382a:	4b0a      	ldr	r3, [pc, #40]	; (8003854 <LCD_Set_Window+0x1f4>)
 800382c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003830:	615a      	str	r2, [r3, #20]
 8003832:	89bb      	ldrh	r3, [r7, #12]
 8003834:	4a08      	ldr	r2, [pc, #32]	; (8003858 <LCD_Set_Window+0x1f8>)
 8003836:	b2db      	uxtb	r3, r3
 8003838:	60d3      	str	r3, [r2, #12]
 800383a:	4b06      	ldr	r3, [pc, #24]	; (8003854 <LCD_Set_Window+0x1f4>)
 800383c:	2280      	movs	r2, #128	; 0x80
 800383e:	615a      	str	r2, [r3, #20]
 8003840:	4b04      	ldr	r3, [pc, #16]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003842:	2280      	movs	r2, #128	; 0x80
 8003844:	611a      	str	r2, [r3, #16]
 8003846:	4b03      	ldr	r3, [pc, #12]	; (8003854 <LCD_Set_Window+0x1f4>)
 8003848:	f44f 7200 	mov.w	r2, #512	; 0x200
 800384c:	611a      	str	r2, [r3, #16]
		LCD_WriteReg(heareg, heaval);
		LCD_WriteReg(vsareg, vsaval);
		LCD_WriteReg(veareg, veaval);
		LCD_SetCursor(sx, sy);	//设置光标位置
	}
}
 800384e:	e21e      	b.n	8003c8e <LCD_Set_Window+0x62e>
 8003850:	200000a8 	.word	0x200000a8
 8003854:	40011000 	.word	0x40011000
 8003858:	40010c00 	.word	0x40010c00
	} else if (lcddev.id == 0X1963)	//1963竖屏特殊处理
 800385c:	4b6c      	ldr	r3, [pc, #432]	; (8003a10 <LCD_Set_Window+0x3b0>)
 800385e:	889b      	ldrh	r3, [r3, #4]
 8003860:	f641 1263 	movw	r2, #6499	; 0x1963
 8003864:	4293      	cmp	r3, r2
 8003866:	f040 80d9 	bne.w	8003a1c <LCD_Set_Window+0x3bc>
		sx = lcddev.width - width - sx;
 800386a:	4b69      	ldr	r3, [pc, #420]	; (8003a10 <LCD_Set_Window+0x3b0>)
 800386c:	881a      	ldrh	r2, [r3, #0]
 800386e:	887b      	ldrh	r3, [r7, #2]
 8003870:	1ad3      	subs	r3, r2, r3
 8003872:	b29a      	uxth	r2, r3
 8003874:	88fb      	ldrh	r3, [r7, #6]
 8003876:	1ad3      	subs	r3, r2, r3
 8003878:	80fb      	strh	r3, [r7, #6]
		height = sy + height - 1;
 800387a:	88ba      	ldrh	r2, [r7, #4]
 800387c:	883b      	ldrh	r3, [r7, #0]
 800387e:	4413      	add	r3, r2
 8003880:	b29b      	uxth	r3, r3
 8003882:	3b01      	subs	r3, #1
 8003884:	803b      	strh	r3, [r7, #0]
		LCD_WR_REG(lcddev.setxcmd);
 8003886:	4b62      	ldr	r3, [pc, #392]	; (8003a10 <LCD_Set_Window+0x3b0>)
 8003888:	895b      	ldrh	r3, [r3, #10]
 800388a:	4618      	mov	r0, r3
 800388c:	f7fe fbc2 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sx >> 8);
 8003890:	4b60      	ldr	r3, [pc, #384]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003892:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003896:	611a      	str	r2, [r3, #16]
 8003898:	4b5e      	ldr	r3, [pc, #376]	; (8003a14 <LCD_Set_Window+0x3b4>)
 800389a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800389e:	615a      	str	r2, [r3, #20]
 80038a0:	88fb      	ldrh	r3, [r7, #6]
 80038a2:	0a1b      	lsrs	r3, r3, #8
 80038a4:	b29a      	uxth	r2, r3
 80038a6:	4b5c      	ldr	r3, [pc, #368]	; (8003a18 <LCD_Set_Window+0x3b8>)
 80038a8:	60da      	str	r2, [r3, #12]
 80038aa:	4b5a      	ldr	r3, [pc, #360]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038ac:	2280      	movs	r2, #128	; 0x80
 80038ae:	615a      	str	r2, [r3, #20]
 80038b0:	4b58      	ldr	r3, [pc, #352]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038b2:	2280      	movs	r2, #128	; 0x80
 80038b4:	611a      	str	r2, [r3, #16]
 80038b6:	4b57      	ldr	r3, [pc, #348]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80038bc:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(sx & 0XFF);
 80038be:	4b55      	ldr	r3, [pc, #340]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038c0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80038c4:	611a      	str	r2, [r3, #16]
 80038c6:	4b53      	ldr	r3, [pc, #332]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038c8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80038cc:	615a      	str	r2, [r3, #20]
 80038ce:	88fb      	ldrh	r3, [r7, #6]
 80038d0:	4a51      	ldr	r2, [pc, #324]	; (8003a18 <LCD_Set_Window+0x3b8>)
 80038d2:	b2db      	uxtb	r3, r3
 80038d4:	60d3      	str	r3, [r2, #12]
 80038d6:	4b4f      	ldr	r3, [pc, #316]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038d8:	2280      	movs	r2, #128	; 0x80
 80038da:	615a      	str	r2, [r3, #20]
 80038dc:	4b4d      	ldr	r3, [pc, #308]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038de:	2280      	movs	r2, #128	; 0x80
 80038e0:	611a      	str	r2, [r3, #16]
 80038e2:	4b4c      	ldr	r3, [pc, #304]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80038e8:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA((sx + width - 1) >> 8);
 80038ea:	4b4a      	ldr	r3, [pc, #296]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038ec:	f44f 7280 	mov.w	r2, #256	; 0x100
 80038f0:	611a      	str	r2, [r3, #16]
 80038f2:	4b48      	ldr	r3, [pc, #288]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80038f4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80038f8:	615a      	str	r2, [r3, #20]
 80038fa:	88fa      	ldrh	r2, [r7, #6]
 80038fc:	887b      	ldrh	r3, [r7, #2]
 80038fe:	4413      	add	r3, r2
 8003900:	3b01      	subs	r3, #1
 8003902:	121a      	asrs	r2, r3, #8
 8003904:	4b44      	ldr	r3, [pc, #272]	; (8003a18 <LCD_Set_Window+0x3b8>)
 8003906:	60da      	str	r2, [r3, #12]
 8003908:	4b42      	ldr	r3, [pc, #264]	; (8003a14 <LCD_Set_Window+0x3b4>)
 800390a:	2280      	movs	r2, #128	; 0x80
 800390c:	615a      	str	r2, [r3, #20]
 800390e:	4b41      	ldr	r3, [pc, #260]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003910:	2280      	movs	r2, #128	; 0x80
 8003912:	611a      	str	r2, [r3, #16]
 8003914:	4b3f      	ldr	r3, [pc, #252]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003916:	f44f 7200 	mov.w	r2, #512	; 0x200
 800391a:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA((sx + width - 1) & 0XFF);
 800391c:	4b3d      	ldr	r3, [pc, #244]	; (8003a14 <LCD_Set_Window+0x3b4>)
 800391e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003922:	611a      	str	r2, [r3, #16]
 8003924:	4b3b      	ldr	r3, [pc, #236]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003926:	f44f 7200 	mov.w	r2, #512	; 0x200
 800392a:	615a      	str	r2, [r3, #20]
 800392c:	88fa      	ldrh	r2, [r7, #6]
 800392e:	887b      	ldrh	r3, [r7, #2]
 8003930:	4413      	add	r3, r2
 8003932:	3b01      	subs	r3, #1
 8003934:	4a38      	ldr	r2, [pc, #224]	; (8003a18 <LCD_Set_Window+0x3b8>)
 8003936:	b2db      	uxtb	r3, r3
 8003938:	60d3      	str	r3, [r2, #12]
 800393a:	4b36      	ldr	r3, [pc, #216]	; (8003a14 <LCD_Set_Window+0x3b4>)
 800393c:	2280      	movs	r2, #128	; 0x80
 800393e:	615a      	str	r2, [r3, #20]
 8003940:	4b34      	ldr	r3, [pc, #208]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003942:	2280      	movs	r2, #128	; 0x80
 8003944:	611a      	str	r2, [r3, #16]
 8003946:	4b33      	ldr	r3, [pc, #204]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003948:	f44f 7200 	mov.w	r2, #512	; 0x200
 800394c:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 800394e:	4b30      	ldr	r3, [pc, #192]	; (8003a10 <LCD_Set_Window+0x3b0>)
 8003950:	899b      	ldrh	r3, [r3, #12]
 8003952:	4618      	mov	r0, r3
 8003954:	f7fe fb5e 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sy >> 8);
 8003958:	4b2e      	ldr	r3, [pc, #184]	; (8003a14 <LCD_Set_Window+0x3b4>)
 800395a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800395e:	611a      	str	r2, [r3, #16]
 8003960:	4b2c      	ldr	r3, [pc, #176]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003962:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003966:	615a      	str	r2, [r3, #20]
 8003968:	88bb      	ldrh	r3, [r7, #4]
 800396a:	0a1b      	lsrs	r3, r3, #8
 800396c:	b29a      	uxth	r2, r3
 800396e:	4b2a      	ldr	r3, [pc, #168]	; (8003a18 <LCD_Set_Window+0x3b8>)
 8003970:	60da      	str	r2, [r3, #12]
 8003972:	4b28      	ldr	r3, [pc, #160]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003974:	2280      	movs	r2, #128	; 0x80
 8003976:	615a      	str	r2, [r3, #20]
 8003978:	4b26      	ldr	r3, [pc, #152]	; (8003a14 <LCD_Set_Window+0x3b4>)
 800397a:	2280      	movs	r2, #128	; 0x80
 800397c:	611a      	str	r2, [r3, #16]
 800397e:	4b25      	ldr	r3, [pc, #148]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003980:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003984:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(sy & 0XFF);
 8003986:	4b23      	ldr	r3, [pc, #140]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003988:	f44f 7280 	mov.w	r2, #256	; 0x100
 800398c:	611a      	str	r2, [r3, #16]
 800398e:	4b21      	ldr	r3, [pc, #132]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003990:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003994:	615a      	str	r2, [r3, #20]
 8003996:	88bb      	ldrh	r3, [r7, #4]
 8003998:	4a1f      	ldr	r2, [pc, #124]	; (8003a18 <LCD_Set_Window+0x3b8>)
 800399a:	b2db      	uxtb	r3, r3
 800399c:	60d3      	str	r3, [r2, #12]
 800399e:	4b1d      	ldr	r3, [pc, #116]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039a0:	2280      	movs	r2, #128	; 0x80
 80039a2:	615a      	str	r2, [r3, #20]
 80039a4:	4b1b      	ldr	r3, [pc, #108]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039a6:	2280      	movs	r2, #128	; 0x80
 80039a8:	611a      	str	r2, [r3, #16]
 80039aa:	4b1a      	ldr	r3, [pc, #104]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039ac:	f44f 7200 	mov.w	r2, #512	; 0x200
 80039b0:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(height >> 8);
 80039b2:	4b18      	ldr	r3, [pc, #96]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039b4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80039b8:	611a      	str	r2, [r3, #16]
 80039ba:	4b16      	ldr	r3, [pc, #88]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039bc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80039c0:	615a      	str	r2, [r3, #20]
 80039c2:	883b      	ldrh	r3, [r7, #0]
 80039c4:	0a1b      	lsrs	r3, r3, #8
 80039c6:	b29a      	uxth	r2, r3
 80039c8:	4b13      	ldr	r3, [pc, #76]	; (8003a18 <LCD_Set_Window+0x3b8>)
 80039ca:	60da      	str	r2, [r3, #12]
 80039cc:	4b11      	ldr	r3, [pc, #68]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039ce:	2280      	movs	r2, #128	; 0x80
 80039d0:	615a      	str	r2, [r3, #20]
 80039d2:	4b10      	ldr	r3, [pc, #64]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039d4:	2280      	movs	r2, #128	; 0x80
 80039d6:	611a      	str	r2, [r3, #16]
 80039d8:	4b0e      	ldr	r3, [pc, #56]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039da:	f44f 7200 	mov.w	r2, #512	; 0x200
 80039de:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(height & 0XFF);
 80039e0:	4b0c      	ldr	r3, [pc, #48]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80039e6:	611a      	str	r2, [r3, #16]
 80039e8:	4b0a      	ldr	r3, [pc, #40]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039ea:	f44f 7200 	mov.w	r2, #512	; 0x200
 80039ee:	615a      	str	r2, [r3, #20]
 80039f0:	883b      	ldrh	r3, [r7, #0]
 80039f2:	4a09      	ldr	r2, [pc, #36]	; (8003a18 <LCD_Set_Window+0x3b8>)
 80039f4:	b2db      	uxtb	r3, r3
 80039f6:	60d3      	str	r3, [r2, #12]
 80039f8:	4b06      	ldr	r3, [pc, #24]	; (8003a14 <LCD_Set_Window+0x3b4>)
 80039fa:	2280      	movs	r2, #128	; 0x80
 80039fc:	615a      	str	r2, [r3, #20]
 80039fe:	4b05      	ldr	r3, [pc, #20]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003a00:	2280      	movs	r2, #128	; 0x80
 8003a02:	611a      	str	r2, [r3, #16]
 8003a04:	4b03      	ldr	r3, [pc, #12]	; (8003a14 <LCD_Set_Window+0x3b4>)
 8003a06:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003a0a:	611a      	str	r2, [r3, #16]
}
 8003a0c:	e13f      	b.n	8003c8e <LCD_Set_Window+0x62e>
 8003a0e:	bf00      	nop
 8003a10:	200000a8 	.word	0x200000a8
 8003a14:	40011000 	.word	0x40011000
 8003a18:	40010c00 	.word	0x40010c00
	} else if (lcddev.id == 0X5510) {
 8003a1c:	4b9e      	ldr	r3, [pc, #632]	; (8003c98 <LCD_Set_Window+0x638>)
 8003a1e:	889b      	ldrh	r3, [r3, #4]
 8003a20:	f245 5210 	movw	r2, #21776	; 0x5510
 8003a24:	4293      	cmp	r3, r2
 8003a26:	f040 80e9 	bne.w	8003bfc <LCD_Set_Window+0x59c>
		LCD_WR_REG(lcddev.setxcmd);
 8003a2a:	4b9b      	ldr	r3, [pc, #620]	; (8003c98 <LCD_Set_Window+0x638>)
 8003a2c:	895b      	ldrh	r3, [r3, #10]
 8003a2e:	4618      	mov	r0, r3
 8003a30:	f7fe faf0 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sx >> 8);
 8003a34:	4b99      	ldr	r3, [pc, #612]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a36:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003a3a:	611a      	str	r2, [r3, #16]
 8003a3c:	4b97      	ldr	r3, [pc, #604]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a3e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003a42:	615a      	str	r2, [r3, #20]
 8003a44:	88fb      	ldrh	r3, [r7, #6]
 8003a46:	0a1b      	lsrs	r3, r3, #8
 8003a48:	b29a      	uxth	r2, r3
 8003a4a:	4b95      	ldr	r3, [pc, #596]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003a4c:	60da      	str	r2, [r3, #12]
 8003a4e:	4b93      	ldr	r3, [pc, #588]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a50:	2280      	movs	r2, #128	; 0x80
 8003a52:	615a      	str	r2, [r3, #20]
 8003a54:	4b91      	ldr	r3, [pc, #580]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a56:	2280      	movs	r2, #128	; 0x80
 8003a58:	611a      	str	r2, [r3, #16]
 8003a5a:	4b90      	ldr	r3, [pc, #576]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a5c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003a60:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setxcmd + 1);
 8003a62:	4b8d      	ldr	r3, [pc, #564]	; (8003c98 <LCD_Set_Window+0x638>)
 8003a64:	895b      	ldrh	r3, [r3, #10]
 8003a66:	3301      	adds	r3, #1
 8003a68:	b29b      	uxth	r3, r3
 8003a6a:	4618      	mov	r0, r3
 8003a6c:	f7fe fad2 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sx & 0XFF);
 8003a70:	4b8a      	ldr	r3, [pc, #552]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a72:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003a76:	611a      	str	r2, [r3, #16]
 8003a78:	4b88      	ldr	r3, [pc, #544]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a7a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003a7e:	615a      	str	r2, [r3, #20]
 8003a80:	88fb      	ldrh	r3, [r7, #6]
 8003a82:	4a87      	ldr	r2, [pc, #540]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003a84:	b2db      	uxtb	r3, r3
 8003a86:	60d3      	str	r3, [r2, #12]
 8003a88:	4b84      	ldr	r3, [pc, #528]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a8a:	2280      	movs	r2, #128	; 0x80
 8003a8c:	615a      	str	r2, [r3, #20]
 8003a8e:	4b83      	ldr	r3, [pc, #524]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a90:	2280      	movs	r2, #128	; 0x80
 8003a92:	611a      	str	r2, [r3, #16]
 8003a94:	4b81      	ldr	r3, [pc, #516]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003a96:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003a9a:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setxcmd + 2);
 8003a9c:	4b7e      	ldr	r3, [pc, #504]	; (8003c98 <LCD_Set_Window+0x638>)
 8003a9e:	895b      	ldrh	r3, [r3, #10]
 8003aa0:	3302      	adds	r3, #2
 8003aa2:	b29b      	uxth	r3, r3
 8003aa4:	4618      	mov	r0, r3
 8003aa6:	f7fe fab5 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(twidth >> 8);
 8003aaa:	4b7c      	ldr	r3, [pc, #496]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003aac:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003ab0:	611a      	str	r2, [r3, #16]
 8003ab2:	4b7a      	ldr	r3, [pc, #488]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003ab4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003ab8:	615a      	str	r2, [r3, #20]
 8003aba:	89fb      	ldrh	r3, [r7, #14]
 8003abc:	0a1b      	lsrs	r3, r3, #8
 8003abe:	b29a      	uxth	r2, r3
 8003ac0:	4b77      	ldr	r3, [pc, #476]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003ac2:	60da      	str	r2, [r3, #12]
 8003ac4:	4b75      	ldr	r3, [pc, #468]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003ac6:	2280      	movs	r2, #128	; 0x80
 8003ac8:	615a      	str	r2, [r3, #20]
 8003aca:	4b74      	ldr	r3, [pc, #464]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003acc:	2280      	movs	r2, #128	; 0x80
 8003ace:	611a      	str	r2, [r3, #16]
 8003ad0:	4b72      	ldr	r3, [pc, #456]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003ad2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003ad6:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setxcmd + 3);
 8003ad8:	4b6f      	ldr	r3, [pc, #444]	; (8003c98 <LCD_Set_Window+0x638>)
 8003ada:	895b      	ldrh	r3, [r3, #10]
 8003adc:	3303      	adds	r3, #3
 8003ade:	b29b      	uxth	r3, r3
 8003ae0:	4618      	mov	r0, r3
 8003ae2:	f7fe fa97 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(twidth & 0XFF);
 8003ae6:	4b6d      	ldr	r3, [pc, #436]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003ae8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003aec:	611a      	str	r2, [r3, #16]
 8003aee:	4b6b      	ldr	r3, [pc, #428]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003af0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003af4:	615a      	str	r2, [r3, #20]
 8003af6:	89fb      	ldrh	r3, [r7, #14]
 8003af8:	4a69      	ldr	r2, [pc, #420]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003afa:	b2db      	uxtb	r3, r3
 8003afc:	60d3      	str	r3, [r2, #12]
 8003afe:	4b67      	ldr	r3, [pc, #412]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b00:	2280      	movs	r2, #128	; 0x80
 8003b02:	615a      	str	r2, [r3, #20]
 8003b04:	4b65      	ldr	r3, [pc, #404]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b06:	2280      	movs	r2, #128	; 0x80
 8003b08:	611a      	str	r2, [r3, #16]
 8003b0a:	4b64      	ldr	r3, [pc, #400]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b0c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003b10:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd);
 8003b12:	4b61      	ldr	r3, [pc, #388]	; (8003c98 <LCD_Set_Window+0x638>)
 8003b14:	899b      	ldrh	r3, [r3, #12]
 8003b16:	4618      	mov	r0, r3
 8003b18:	f7fe fa7c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sy >> 8);
 8003b1c:	4b5f      	ldr	r3, [pc, #380]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b1e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003b22:	611a      	str	r2, [r3, #16]
 8003b24:	4b5d      	ldr	r3, [pc, #372]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b26:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003b2a:	615a      	str	r2, [r3, #20]
 8003b2c:	88bb      	ldrh	r3, [r7, #4]
 8003b2e:	0a1b      	lsrs	r3, r3, #8
 8003b30:	b29a      	uxth	r2, r3
 8003b32:	4b5b      	ldr	r3, [pc, #364]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003b34:	60da      	str	r2, [r3, #12]
 8003b36:	4b59      	ldr	r3, [pc, #356]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b38:	2280      	movs	r2, #128	; 0x80
 8003b3a:	615a      	str	r2, [r3, #20]
 8003b3c:	4b57      	ldr	r3, [pc, #348]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b3e:	2280      	movs	r2, #128	; 0x80
 8003b40:	611a      	str	r2, [r3, #16]
 8003b42:	4b56      	ldr	r3, [pc, #344]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b44:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003b48:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd + 1);
 8003b4a:	4b53      	ldr	r3, [pc, #332]	; (8003c98 <LCD_Set_Window+0x638>)
 8003b4c:	899b      	ldrh	r3, [r3, #12]
 8003b4e:	3301      	adds	r3, #1
 8003b50:	b29b      	uxth	r3, r3
 8003b52:	4618      	mov	r0, r3
 8003b54:	f7fe fa5e 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(sy & 0XFF);
 8003b58:	4b50      	ldr	r3, [pc, #320]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b5a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003b5e:	611a      	str	r2, [r3, #16]
 8003b60:	4b4e      	ldr	r3, [pc, #312]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b62:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003b66:	615a      	str	r2, [r3, #20]
 8003b68:	88bb      	ldrh	r3, [r7, #4]
 8003b6a:	4a4d      	ldr	r2, [pc, #308]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003b6c:	b2db      	uxtb	r3, r3
 8003b6e:	60d3      	str	r3, [r2, #12]
 8003b70:	4b4a      	ldr	r3, [pc, #296]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b72:	2280      	movs	r2, #128	; 0x80
 8003b74:	615a      	str	r2, [r3, #20]
 8003b76:	4b49      	ldr	r3, [pc, #292]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b78:	2280      	movs	r2, #128	; 0x80
 8003b7a:	611a      	str	r2, [r3, #16]
 8003b7c:	4b47      	ldr	r3, [pc, #284]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b7e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003b82:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd + 2);
 8003b84:	4b44      	ldr	r3, [pc, #272]	; (8003c98 <LCD_Set_Window+0x638>)
 8003b86:	899b      	ldrh	r3, [r3, #12]
 8003b88:	3302      	adds	r3, #2
 8003b8a:	b29b      	uxth	r3, r3
 8003b8c:	4618      	mov	r0, r3
 8003b8e:	f7fe fa41 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(theight >> 8);
 8003b92:	4b42      	ldr	r3, [pc, #264]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b94:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003b98:	611a      	str	r2, [r3, #16]
 8003b9a:	4b40      	ldr	r3, [pc, #256]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003b9c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003ba0:	615a      	str	r2, [r3, #20]
 8003ba2:	89bb      	ldrh	r3, [r7, #12]
 8003ba4:	0a1b      	lsrs	r3, r3, #8
 8003ba6:	b29a      	uxth	r2, r3
 8003ba8:	4b3d      	ldr	r3, [pc, #244]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003baa:	60da      	str	r2, [r3, #12]
 8003bac:	4b3b      	ldr	r3, [pc, #236]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bae:	2280      	movs	r2, #128	; 0x80
 8003bb0:	615a      	str	r2, [r3, #20]
 8003bb2:	4b3a      	ldr	r3, [pc, #232]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bb4:	2280      	movs	r2, #128	; 0x80
 8003bb6:	611a      	str	r2, [r3, #16]
 8003bb8:	4b38      	ldr	r3, [pc, #224]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bba:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003bbe:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(lcddev.setycmd + 3);
 8003bc0:	4b35      	ldr	r3, [pc, #212]	; (8003c98 <LCD_Set_Window+0x638>)
 8003bc2:	899b      	ldrh	r3, [r3, #12]
 8003bc4:	3303      	adds	r3, #3
 8003bc6:	b29b      	uxth	r3, r3
 8003bc8:	4618      	mov	r0, r3
 8003bca:	f7fe fa23 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(theight & 0XFF);
 8003bce:	4b33      	ldr	r3, [pc, #204]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bd0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003bd4:	611a      	str	r2, [r3, #16]
 8003bd6:	4b31      	ldr	r3, [pc, #196]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bd8:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003bdc:	615a      	str	r2, [r3, #20]
 8003bde:	89bb      	ldrh	r3, [r7, #12]
 8003be0:	4a2f      	ldr	r2, [pc, #188]	; (8003ca0 <LCD_Set_Window+0x640>)
 8003be2:	b2db      	uxtb	r3, r3
 8003be4:	60d3      	str	r3, [r2, #12]
 8003be6:	4b2d      	ldr	r3, [pc, #180]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003be8:	2280      	movs	r2, #128	; 0x80
 8003bea:	615a      	str	r2, [r3, #20]
 8003bec:	4b2b      	ldr	r3, [pc, #172]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bee:	2280      	movs	r2, #128	; 0x80
 8003bf0:	611a      	str	r2, [r3, #16]
 8003bf2:	4b2a      	ldr	r3, [pc, #168]	; (8003c9c <LCD_Set_Window+0x63c>)
 8003bf4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003bf8:	611a      	str	r2, [r3, #16]
}
 8003bfa:	e048      	b.n	8003c8e <LCD_Set_Window+0x62e>
		if (lcddev.dir == 1)	//横屏
 8003bfc:	4b26      	ldr	r3, [pc, #152]	; (8003c98 <LCD_Set_Window+0x638>)
 8003bfe:	799b      	ldrb	r3, [r3, #6]
 8003c00:	2b01      	cmp	r3, #1
 8003c02:	d112      	bne.n	8003c2a <LCD_Set_Window+0x5ca>
			hsaval = sy;
 8003c04:	88bb      	ldrh	r3, [r7, #4]
 8003c06:	82fb      	strh	r3, [r7, #22]
			heaval = theight;
 8003c08:	89bb      	ldrh	r3, [r7, #12]
 8003c0a:	82bb      	strh	r3, [r7, #20]
			vsaval = lcddev.width - twidth - 1;
 8003c0c:	4b22      	ldr	r3, [pc, #136]	; (8003c98 <LCD_Set_Window+0x638>)
 8003c0e:	881a      	ldrh	r2, [r3, #0]
 8003c10:	89fb      	ldrh	r3, [r7, #14]
 8003c12:	1ad3      	subs	r3, r2, r3
 8003c14:	b29b      	uxth	r3, r3
 8003c16:	3b01      	subs	r3, #1
 8003c18:	827b      	strh	r3, [r7, #18]
			veaval = lcddev.width - sx - 1;
 8003c1a:	4b1f      	ldr	r3, [pc, #124]	; (8003c98 <LCD_Set_Window+0x638>)
 8003c1c:	881a      	ldrh	r2, [r3, #0]
 8003c1e:	88fb      	ldrh	r3, [r7, #6]
 8003c20:	1ad3      	subs	r3, r2, r3
 8003c22:	b29b      	uxth	r3, r3
 8003c24:	3b01      	subs	r3, #1
 8003c26:	823b      	strh	r3, [r7, #16]
 8003c28:	e007      	b.n	8003c3a <LCD_Set_Window+0x5da>
			hsaval = sx;
 8003c2a:	88fb      	ldrh	r3, [r7, #6]
 8003c2c:	82fb      	strh	r3, [r7, #22]
			heaval = twidth;
 8003c2e:	89fb      	ldrh	r3, [r7, #14]
 8003c30:	82bb      	strh	r3, [r7, #20]
			vsaval = sy;
 8003c32:	88bb      	ldrh	r3, [r7, #4]
 8003c34:	827b      	strh	r3, [r7, #18]
			veaval = theight;
 8003c36:	89bb      	ldrh	r3, [r7, #12]
 8003c38:	823b      	strh	r3, [r7, #16]
		hsareg = 0X50;
 8003c3a:	2350      	movs	r3, #80	; 0x50
 8003c3c:	72fb      	strb	r3, [r7, #11]
		heareg = 0X51;	//水平方向窗口寄存器
 8003c3e:	2351      	movs	r3, #81	; 0x51
 8003c40:	72bb      	strb	r3, [r7, #10]
		vsareg = 0X52;
 8003c42:	2352      	movs	r3, #82	; 0x52
 8003c44:	727b      	strb	r3, [r7, #9]
		veareg = 0X53;	//垂直方向窗口寄存器
 8003c46:	2353      	movs	r3, #83	; 0x53
 8003c48:	723b      	strb	r3, [r7, #8]
		LCD_WriteReg(hsareg, hsaval);
 8003c4a:	7afb      	ldrb	r3, [r7, #11]
 8003c4c:	b29b      	uxth	r3, r3
 8003c4e:	8afa      	ldrh	r2, [r7, #22]
 8003c50:	4611      	mov	r1, r2
 8003c52:	4618      	mov	r0, r3
 8003c54:	f7fe fa6a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(heareg, heaval);
 8003c58:	7abb      	ldrb	r3, [r7, #10]
 8003c5a:	b29b      	uxth	r3, r3
 8003c5c:	8aba      	ldrh	r2, [r7, #20]
 8003c5e:	4611      	mov	r1, r2
 8003c60:	4618      	mov	r0, r3
 8003c62:	f7fe fa63 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(vsareg, vsaval);
 8003c66:	7a7b      	ldrb	r3, [r7, #9]
 8003c68:	b29b      	uxth	r3, r3
 8003c6a:	8a7a      	ldrh	r2, [r7, #18]
 8003c6c:	4611      	mov	r1, r2
 8003c6e:	4618      	mov	r0, r3
 8003c70:	f7fe fa5c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(veareg, veaval);
 8003c74:	7a3b      	ldrb	r3, [r7, #8]
 8003c76:	b29b      	uxth	r3, r3
 8003c78:	8a3a      	ldrh	r2, [r7, #16]
 8003c7a:	4611      	mov	r1, r2
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	f7fe fa55 	bl	800212c <LCD_WriteReg>
		LCD_SetCursor(sx, sy);	//设置光标位置
 8003c82:	88ba      	ldrh	r2, [r7, #4]
 8003c84:	88fb      	ldrh	r3, [r7, #6]
 8003c86:	4611      	mov	r1, r2
 8003c88:	4618      	mov	r0, r3
 8003c8a:	f7fe fa95 	bl	80021b8 <LCD_SetCursor>
}
 8003c8e:	bf00      	nop
 8003c90:	371c      	adds	r7, #28
 8003c92:	46bd      	mov	sp, r7
 8003c94:	bd90      	pop	{r4, r7, pc}
 8003c96:	bf00      	nop
 8003c98:	200000a8 	.word	0x200000a8
 8003c9c:	40011000 	.word	0x40011000
 8003ca0:	40010c00 	.word	0x40010c00

08003ca4 <LCD_Init>:
//初始化lcd
//该初始化函数可以初始化各种ALIENTEK出品的LCD液晶屏
//本函数占用较大flash,用户可以根据自己的实际情况,删掉未用到的LCD初始化代码.以节省空间.
void LCD_Init(void) {
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	b086      	sub	sp, #24
 8003ca8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_Initure;

	__HAL_RCC_GPIOB_CLK_ENABLE();           	//开启GPIOB时钟
 8003caa:	4b90      	ldr	r3, [pc, #576]	; (8003eec <LCD_Init+0x248>)
 8003cac:	699b      	ldr	r3, [r3, #24]
 8003cae:	4a8f      	ldr	r2, [pc, #572]	; (8003eec <LCD_Init+0x248>)
 8003cb0:	f043 0308 	orr.w	r3, r3, #8
 8003cb4:	6193      	str	r3, [r2, #24]
 8003cb6:	4b8d      	ldr	r3, [pc, #564]	; (8003eec <LCD_Init+0x248>)
 8003cb8:	699b      	ldr	r3, [r3, #24]
 8003cba:	f003 0308 	and.w	r3, r3, #8
 8003cbe:	607b      	str	r3, [r7, #4]
 8003cc0:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOC_CLK_ENABLE();           	//开启GPIOC时钟
 8003cc2:	4b8a      	ldr	r3, [pc, #552]	; (8003eec <LCD_Init+0x248>)
 8003cc4:	699b      	ldr	r3, [r3, #24]
 8003cc6:	4a89      	ldr	r2, [pc, #548]	; (8003eec <LCD_Init+0x248>)
 8003cc8:	f043 0310 	orr.w	r3, r3, #16
 8003ccc:	6193      	str	r3, [r2, #24]
 8003cce:	4b87      	ldr	r3, [pc, #540]	; (8003eec <LCD_Init+0x248>)
 8003cd0:	699b      	ldr	r3, [r3, #24]
 8003cd2:	f003 0310 	and.w	r3, r3, #16
 8003cd6:	603b      	str	r3, [r7, #0]
 8003cd8:	683b      	ldr	r3, [r7, #0]

	//PC6,7,8,9,10
	GPIO_Initure.Pin = GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 |\
 8003cda:	f44f 63f8 	mov.w	r3, #1984	; 0x7c0
 8003cde:	60bb      	str	r3, [r7, #8]
 GPIO_PIN_9
			| GPIO_PIN_10;
	GPIO_Initure.Mode = GPIO_MODE_OUTPUT_PP;  	//推挽输出
 8003ce0:	2301      	movs	r3, #1
 8003ce2:	60fb      	str	r3, [r7, #12]
	GPIO_Initure.Pull = GPIO_PULLUP;          	//上拉
 8003ce4:	2301      	movs	r3, #1
 8003ce6:	613b      	str	r3, [r7, #16]
	GPIO_Initure.Speed = GPIO_SPEED_FREQ_HIGH;    	 	//高速
 8003ce8:	2303      	movs	r3, #3
 8003cea:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOC, &GPIO_Initure);
 8003cec:	f107 0308 	add.w	r3, r7, #8
 8003cf0:	4619      	mov	r1, r3
 8003cf2:	487f      	ldr	r0, [pc, #508]	; (8003ef0 <LCD_Init+0x24c>)
 8003cf4:	f7fd f920 	bl	8000f38 <HAL_GPIO_Init>

	//PB0~15
	GPIO_Initure.Pin = GPIO_PIN_All;				//PB推挽输出
 8003cf8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003cfc:	60bb      	str	r3, [r7, #8]
	HAL_GPIO_Init(GPIOB, &GPIO_Initure);
 8003cfe:	f107 0308 	add.w	r3, r7, #8
 8003d02:	4619      	mov	r1, r3
 8003d04:	487b      	ldr	r0, [pc, #492]	; (8003ef4 <LCD_Init+0x250>)
 8003d06:	f7fd f917 	bl	8000f38 <HAL_GPIO_Init>

//	__HAL_AFIO_REMAP_SWJ_DISABLE();				//禁止JTAG

	HAL_Delay(50); // delay 50 ms
 8003d0a:	2032      	movs	r0, #50	; 0x32
 8003d0c:	f7fc fedc 	bl	8000ac8 <HAL_Delay>
	LCD_WriteReg(0x0000, 0x0001);
 8003d10:	2101      	movs	r1, #1
 8003d12:	2000      	movs	r0, #0
 8003d14:	f7fe fa0a 	bl	800212c <LCD_WriteReg>
	HAL_Delay(50); // delay 50 ms
 8003d18:	2032      	movs	r0, #50	; 0x32
 8003d1a:	f7fc fed5 	bl	8000ac8 <HAL_Delay>
	lcddev.id = LCD_ReadReg(0x0000);
 8003d1e:	2000      	movs	r0, #0
 8003d20:	f7fe fa2e 	bl	8002180 <LCD_ReadReg>
 8003d24:	4603      	mov	r3, r0
 8003d26:	461a      	mov	r2, r3
 8003d28:	4b73      	ldr	r3, [pc, #460]	; (8003ef8 <LCD_Init+0x254>)
 8003d2a:	809a      	strh	r2, [r3, #4]
	if (lcddev.id < 0XFF || lcddev.id == 0XFFFF || lcddev.id == 0X9300) //读到ID不正确,新增lcddev.id==0X9300判断，因为9341在未被复位的情况下会被读成9300
 8003d2c:	4b72      	ldr	r3, [pc, #456]	; (8003ef8 <LCD_Init+0x254>)
 8003d2e:	889b      	ldrh	r3, [r3, #4]
 8003d30:	2bfe      	cmp	r3, #254	; 0xfe
 8003d32:	d90b      	bls.n	8003d4c <LCD_Init+0xa8>
 8003d34:	4b70      	ldr	r3, [pc, #448]	; (8003ef8 <LCD_Init+0x254>)
 8003d36:	889b      	ldrh	r3, [r3, #4]
 8003d38:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003d3c:	4293      	cmp	r3, r2
 8003d3e:	d005      	beq.n	8003d4c <LCD_Init+0xa8>
 8003d40:	4b6d      	ldr	r3, [pc, #436]	; (8003ef8 <LCD_Init+0x254>)
 8003d42:	889b      	ldrh	r3, [r3, #4]
 8003d44:	f5b3 4f13 	cmp.w	r3, #37632	; 0x9300
 8003d48:	f040 80c8 	bne.w	8003edc <LCD_Init+0x238>
			{
		//尝试9341 ID的读取
		LCD_WR_REG(0XD3);
 8003d4c:	20d3      	movs	r0, #211	; 0xd3
 8003d4e:	f7fe f961 	bl	8002014 <LCD_WR_REG>
		LCD_RD_DATA(); 				//dummy read 	
 8003d52:	f7fe f9a7 	bl	80020a4 <LCD_RD_DATA>
		LCD_RD_DATA();   	    	//读到0X00
 8003d56:	f7fe f9a5 	bl	80020a4 <LCD_RD_DATA>
		lcddev.id = LCD_RD_DATA();   	//读取93
 8003d5a:	f7fe f9a3 	bl	80020a4 <LCD_RD_DATA>
 8003d5e:	4603      	mov	r3, r0
 8003d60:	461a      	mov	r2, r3
 8003d62:	4b65      	ldr	r3, [pc, #404]	; (8003ef8 <LCD_Init+0x254>)
 8003d64:	809a      	strh	r2, [r3, #4]
		lcddev.id <<= 8;
 8003d66:	4b64      	ldr	r3, [pc, #400]	; (8003ef8 <LCD_Init+0x254>)
 8003d68:	889b      	ldrh	r3, [r3, #4]
 8003d6a:	021b      	lsls	r3, r3, #8
 8003d6c:	b29a      	uxth	r2, r3
 8003d6e:	4b62      	ldr	r3, [pc, #392]	; (8003ef8 <LCD_Init+0x254>)
 8003d70:	809a      	strh	r2, [r3, #4]
		lcddev.id |= LCD_RD_DATA();  	//读取41
 8003d72:	f7fe f997 	bl	80020a4 <LCD_RD_DATA>
 8003d76:	4603      	mov	r3, r0
 8003d78:	461a      	mov	r2, r3
 8003d7a:	4b5f      	ldr	r3, [pc, #380]	; (8003ef8 <LCD_Init+0x254>)
 8003d7c:	889b      	ldrh	r3, [r3, #4]
 8003d7e:	4313      	orrs	r3, r2
 8003d80:	b29a      	uxth	r2, r3
 8003d82:	4b5d      	ldr	r3, [pc, #372]	; (8003ef8 <LCD_Init+0x254>)
 8003d84:	809a      	strh	r2, [r3, #4]
		if (lcddev.id != 0X9341)		//非9341,尝试是不是6804
 8003d86:	4b5c      	ldr	r3, [pc, #368]	; (8003ef8 <LCD_Init+0x254>)
 8003d88:	889b      	ldrh	r3, [r3, #4]
 8003d8a:	f249 3241 	movw	r2, #37697	; 0x9341
 8003d8e:	4293      	cmp	r3, r2
 8003d90:	f000 80a4 	beq.w	8003edc <LCD_Init+0x238>
				{
			LCD_WR_REG(0XBF);
 8003d94:	20bf      	movs	r0, #191	; 0xbf
 8003d96:	f7fe f93d 	bl	8002014 <LCD_WR_REG>
			LCD_RD_DATA(); 			//dummy read 	 
 8003d9a:	f7fe f983 	bl	80020a4 <LCD_RD_DATA>
			LCD_RD_DATA();   	    //读回0X01
 8003d9e:	f7fe f981 	bl	80020a4 <LCD_RD_DATA>
			LCD_RD_DATA(); 			//读回0XD0
 8003da2:	f7fe f97f 	bl	80020a4 <LCD_RD_DATA>
			lcddev.id = LCD_RD_DATA(); 			//这里读回0X68
 8003da6:	f7fe f97d 	bl	80020a4 <LCD_RD_DATA>
 8003daa:	4603      	mov	r3, r0
 8003dac:	461a      	mov	r2, r3
 8003dae:	4b52      	ldr	r3, [pc, #328]	; (8003ef8 <LCD_Init+0x254>)
 8003db0:	809a      	strh	r2, [r3, #4]
			lcddev.id <<= 8;
 8003db2:	4b51      	ldr	r3, [pc, #324]	; (8003ef8 <LCD_Init+0x254>)
 8003db4:	889b      	ldrh	r3, [r3, #4]
 8003db6:	021b      	lsls	r3, r3, #8
 8003db8:	b29a      	uxth	r2, r3
 8003dba:	4b4f      	ldr	r3, [pc, #316]	; (8003ef8 <LCD_Init+0x254>)
 8003dbc:	809a      	strh	r2, [r3, #4]
			lcddev.id |= LCD_RD_DATA(); 			//这里读回0X04
 8003dbe:	f7fe f971 	bl	80020a4 <LCD_RD_DATA>
 8003dc2:	4603      	mov	r3, r0
 8003dc4:	461a      	mov	r2, r3
 8003dc6:	4b4c      	ldr	r3, [pc, #304]	; (8003ef8 <LCD_Init+0x254>)
 8003dc8:	889b      	ldrh	r3, [r3, #4]
 8003dca:	4313      	orrs	r3, r2
 8003dcc:	b29a      	uxth	r2, r3
 8003dce:	4b4a      	ldr	r3, [pc, #296]	; (8003ef8 <LCD_Init+0x254>)
 8003dd0:	809a      	strh	r2, [r3, #4]
			if (lcddev.id != 0X6804)	//也不是6804,尝试看看是不是NT35310
 8003dd2:	4b49      	ldr	r3, [pc, #292]	; (8003ef8 <LCD_Init+0x254>)
 8003dd4:	889b      	ldrh	r3, [r3, #4]
 8003dd6:	f646 0204 	movw	r2, #26628	; 0x6804
 8003dda:	4293      	cmp	r3, r2
 8003ddc:	d07e      	beq.n	8003edc <LCD_Init+0x238>
					{
				LCD_WR_REG(0XD4);
 8003dde:	20d4      	movs	r0, #212	; 0xd4
 8003de0:	f7fe f918 	bl	8002014 <LCD_WR_REG>
				LCD_RD_DATA(); 				//dummy read  
 8003de4:	f7fe f95e 	bl	80020a4 <LCD_RD_DATA>
				LCD_RD_DATA();   			//读回0X01	 
 8003de8:	f7fe f95c 	bl	80020a4 <LCD_RD_DATA>
				lcddev.id = LCD_RD_DATA();	//读回0X53
 8003dec:	f7fe f95a 	bl	80020a4 <LCD_RD_DATA>
 8003df0:	4603      	mov	r3, r0
 8003df2:	461a      	mov	r2, r3
 8003df4:	4b40      	ldr	r3, [pc, #256]	; (8003ef8 <LCD_Init+0x254>)
 8003df6:	809a      	strh	r2, [r3, #4]
				lcddev.id <<= 8;
 8003df8:	4b3f      	ldr	r3, [pc, #252]	; (8003ef8 <LCD_Init+0x254>)
 8003dfa:	889b      	ldrh	r3, [r3, #4]
 8003dfc:	021b      	lsls	r3, r3, #8
 8003dfe:	b29a      	uxth	r2, r3
 8003e00:	4b3d      	ldr	r3, [pc, #244]	; (8003ef8 <LCD_Init+0x254>)
 8003e02:	809a      	strh	r2, [r3, #4]
				lcddev.id |= LCD_RD_DATA();	//这里读回0X10
 8003e04:	f7fe f94e 	bl	80020a4 <LCD_RD_DATA>
 8003e08:	4603      	mov	r3, r0
 8003e0a:	461a      	mov	r2, r3
 8003e0c:	4b3a      	ldr	r3, [pc, #232]	; (8003ef8 <LCD_Init+0x254>)
 8003e0e:	889b      	ldrh	r3, [r3, #4]
 8003e10:	4313      	orrs	r3, r2
 8003e12:	b29a      	uxth	r2, r3
 8003e14:	4b38      	ldr	r3, [pc, #224]	; (8003ef8 <LCD_Init+0x254>)
 8003e16:	809a      	strh	r2, [r3, #4]
				if (lcddev.id != 0X5310)		//也不是NT35310,尝试看看是不是NT35510
 8003e18:	4b37      	ldr	r3, [pc, #220]	; (8003ef8 <LCD_Init+0x254>)
 8003e1a:	889b      	ldrh	r3, [r3, #4]
 8003e1c:	f245 3210 	movw	r2, #21264	; 0x5310
 8003e20:	4293      	cmp	r3, r2
 8003e22:	d05b      	beq.n	8003edc <LCD_Init+0x238>
						{
					LCD_WR_REG(0XDA00);
 8003e24:	f44f 405a 	mov.w	r0, #55808	; 0xda00
 8003e28:	f7fe f8f4 	bl	8002014 <LCD_WR_REG>
					LCD_RD_DATA();   		//读回0X00	 
 8003e2c:	f7fe f93a 	bl	80020a4 <LCD_RD_DATA>
					LCD_WR_REG(0XDB00);
 8003e30:	f44f 405b 	mov.w	r0, #56064	; 0xdb00
 8003e34:	f7fe f8ee 	bl	8002014 <LCD_WR_REG>
					lcddev.id = LCD_RD_DATA();   		//读回0X80
 8003e38:	f7fe f934 	bl	80020a4 <LCD_RD_DATA>
 8003e3c:	4603      	mov	r3, r0
 8003e3e:	461a      	mov	r2, r3
 8003e40:	4b2d      	ldr	r3, [pc, #180]	; (8003ef8 <LCD_Init+0x254>)
 8003e42:	809a      	strh	r2, [r3, #4]
					lcddev.id <<= 8;
 8003e44:	4b2c      	ldr	r3, [pc, #176]	; (8003ef8 <LCD_Init+0x254>)
 8003e46:	889b      	ldrh	r3, [r3, #4]
 8003e48:	021b      	lsls	r3, r3, #8
 8003e4a:	b29a      	uxth	r2, r3
 8003e4c:	4b2a      	ldr	r3, [pc, #168]	; (8003ef8 <LCD_Init+0x254>)
 8003e4e:	809a      	strh	r2, [r3, #4]
					LCD_WR_REG(0XDC00);
 8003e50:	f44f 405c 	mov.w	r0, #56320	; 0xdc00
 8003e54:	f7fe f8de 	bl	8002014 <LCD_WR_REG>
					lcddev.id |= LCD_RD_DATA();   		//读回0X00
 8003e58:	f7fe f924 	bl	80020a4 <LCD_RD_DATA>
 8003e5c:	4603      	mov	r3, r0
 8003e5e:	461a      	mov	r2, r3
 8003e60:	4b25      	ldr	r3, [pc, #148]	; (8003ef8 <LCD_Init+0x254>)
 8003e62:	889b      	ldrh	r3, [r3, #4]
 8003e64:	4313      	orrs	r3, r2
 8003e66:	b29a      	uxth	r2, r3
 8003e68:	4b23      	ldr	r3, [pc, #140]	; (8003ef8 <LCD_Init+0x254>)
 8003e6a:	809a      	strh	r2, [r3, #4]
					if (lcddev.id == 0x8000)
 8003e6c:	4b22      	ldr	r3, [pc, #136]	; (8003ef8 <LCD_Init+0x254>)
 8003e6e:	889b      	ldrh	r3, [r3, #4]
 8003e70:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003e74:	d103      	bne.n	8003e7e <LCD_Init+0x1da>
						lcddev.id = 0x5510;   		//NT35510读回的ID是8000H,为方便区分,我们强制设置为5510
 8003e76:	4b20      	ldr	r3, [pc, #128]	; (8003ef8 <LCD_Init+0x254>)
 8003e78:	f245 5210 	movw	r2, #21776	; 0x5510
 8003e7c:	809a      	strh	r2, [r3, #4]
					if (lcddev.id != 0X5510)			//也不是NT5510,尝试看看是不是SSD1963
 8003e7e:	4b1e      	ldr	r3, [pc, #120]	; (8003ef8 <LCD_Init+0x254>)
 8003e80:	889b      	ldrh	r3, [r3, #4]
 8003e82:	f245 5210 	movw	r2, #21776	; 0x5510
 8003e86:	4293      	cmp	r3, r2
 8003e88:	d028      	beq.n	8003edc <LCD_Init+0x238>
							{
						LCD_WR_REG(0XA1);
 8003e8a:	20a1      	movs	r0, #161	; 0xa1
 8003e8c:	f7fe f8c2 	bl	8002014 <LCD_WR_REG>
						lcddev.id = LCD_RD_DATA();
 8003e90:	f7fe f908 	bl	80020a4 <LCD_RD_DATA>
 8003e94:	4603      	mov	r3, r0
 8003e96:	461a      	mov	r2, r3
 8003e98:	4b17      	ldr	r3, [pc, #92]	; (8003ef8 <LCD_Init+0x254>)
 8003e9a:	809a      	strh	r2, [r3, #4]
						lcddev.id = LCD_RD_DATA();	//读回0X57
 8003e9c:	f7fe f902 	bl	80020a4 <LCD_RD_DATA>
 8003ea0:	4603      	mov	r3, r0
 8003ea2:	461a      	mov	r2, r3
 8003ea4:	4b14      	ldr	r3, [pc, #80]	; (8003ef8 <LCD_Init+0x254>)
 8003ea6:	809a      	strh	r2, [r3, #4]
						lcddev.id <<= 8;
 8003ea8:	4b13      	ldr	r3, [pc, #76]	; (8003ef8 <LCD_Init+0x254>)
 8003eaa:	889b      	ldrh	r3, [r3, #4]
 8003eac:	021b      	lsls	r3, r3, #8
 8003eae:	b29a      	uxth	r2, r3
 8003eb0:	4b11      	ldr	r3, [pc, #68]	; (8003ef8 <LCD_Init+0x254>)
 8003eb2:	809a      	strh	r2, [r3, #4]
						lcddev.id |= LCD_RD_DATA();	//读回0X61
 8003eb4:	f7fe f8f6 	bl	80020a4 <LCD_RD_DATA>
 8003eb8:	4603      	mov	r3, r0
 8003eba:	461a      	mov	r2, r3
 8003ebc:	4b0e      	ldr	r3, [pc, #56]	; (8003ef8 <LCD_Init+0x254>)
 8003ebe:	889b      	ldrh	r3, [r3, #4]
 8003ec0:	4313      	orrs	r3, r2
 8003ec2:	b29a      	uxth	r2, r3
 8003ec4:	4b0c      	ldr	r3, [pc, #48]	; (8003ef8 <LCD_Init+0x254>)
 8003ec6:	809a      	strh	r2, [r3, #4]
						if (lcddev.id == 0X5761)
 8003ec8:	4b0b      	ldr	r3, [pc, #44]	; (8003ef8 <LCD_Init+0x254>)
 8003eca:	889b      	ldrh	r3, [r3, #4]
 8003ecc:	f245 7261 	movw	r2, #22369	; 0x5761
 8003ed0:	4293      	cmp	r3, r2
 8003ed2:	d103      	bne.n	8003edc <LCD_Init+0x238>
							lcddev.id = 0X1963;	//SSD1963读回的ID是5761H,为方便区分,我们强制设置为1963
 8003ed4:	4b08      	ldr	r3, [pc, #32]	; (8003ef8 <LCD_Init+0x254>)
 8003ed6:	f641 1263 	movw	r2, #6499	; 0x1963
 8003eda:	809a      	strh	r2, [r3, #4]
				}
			}
		}
	}
// 	printf(" LCD ID:%x\r\n",lcddev.id); //打印LCD ID
	if (lcddev.id == 0X9341)	//9341初始化
 8003edc:	4b06      	ldr	r3, [pc, #24]	; (8003ef8 <LCD_Init+0x254>)
 8003ede:	889b      	ldrh	r3, [r3, #4]
 8003ee0:	f249 3241 	movw	r2, #37697	; 0x9341
 8003ee4:	4293      	cmp	r3, r2
 8003ee6:	f040 811f 	bne.w	8004128 <LCD_Init+0x484>
 8003eea:	e007      	b.n	8003efc <LCD_Init+0x258>
 8003eec:	40021000 	.word	0x40021000
 8003ef0:	40011000 	.word	0x40011000
 8003ef4:	40010c00 	.word	0x40010c00
 8003ef8:	200000a8 	.word	0x200000a8
			{
		LCD_WR_REG(0xCF);
 8003efc:	20cf      	movs	r0, #207	; 0xcf
 8003efe:	f7fe f889 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8003f02:	2000      	movs	r0, #0
 8003f04:	f7fe f8aa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC1);
 8003f08:	20c1      	movs	r0, #193	; 0xc1
 8003f0a:	f7fe f8a7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X30);
 8003f0e:	2030      	movs	r0, #48	; 0x30
 8003f10:	f7fe f8a4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xED);
 8003f14:	20ed      	movs	r0, #237	; 0xed
 8003f16:	f7fe f87d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x64);
 8003f1a:	2064      	movs	r0, #100	; 0x64
 8003f1c:	f7fe f89e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x03);
 8003f20:	2003      	movs	r0, #3
 8003f22:	f7fe f89b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X12);
 8003f26:	2012      	movs	r0, #18
 8003f28:	f7fe f898 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X81);
 8003f2c:	2081      	movs	r0, #129	; 0x81
 8003f2e:	f7fe f895 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xE8);
 8003f32:	20e8      	movs	r0, #232	; 0xe8
 8003f34:	f7fe f86e 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x85);
 8003f38:	2085      	movs	r0, #133	; 0x85
 8003f3a:	f7fe f88f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x10);
 8003f3e:	2010      	movs	r0, #16
 8003f40:	f7fe f88c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x7A);
 8003f44:	207a      	movs	r0, #122	; 0x7a
 8003f46:	f7fe f889 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xCB);
 8003f4a:	20cb      	movs	r0, #203	; 0xcb
 8003f4c:	f7fe f862 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x39);
 8003f50:	2039      	movs	r0, #57	; 0x39
 8003f52:	f7fe f883 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2C);
 8003f56:	202c      	movs	r0, #44	; 0x2c
 8003f58:	f7fe f880 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8003f5c:	2000      	movs	r0, #0
 8003f5e:	f7fe f87d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x34);
 8003f62:	2034      	movs	r0, #52	; 0x34
 8003f64:	f7fe f87a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x02);
 8003f68:	2002      	movs	r0, #2
 8003f6a:	f7fe f877 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xF7);
 8003f6e:	20f7      	movs	r0, #247	; 0xf7
 8003f70:	f7fe f850 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x20);
 8003f74:	2020      	movs	r0, #32
 8003f76:	f7fe f871 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xEA);
 8003f7a:	20ea      	movs	r0, #234	; 0xea
 8003f7c:	f7fe f84a 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8003f80:	2000      	movs	r0, #0
 8003f82:	f7fe f86b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8003f86:	2000      	movs	r0, #0
 8003f88:	f7fe f868 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xC0);    //Power control 
 8003f8c:	20c0      	movs	r0, #192	; 0xc0
 8003f8e:	f7fe f841 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x1B);   //VRH[5:0] 
 8003f92:	201b      	movs	r0, #27
 8003f94:	f7fe f862 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xC1);    //Power control 
 8003f98:	20c1      	movs	r0, #193	; 0xc1
 8003f9a:	f7fe f83b 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x01);   //SAP[2:0];BT[3:0] 
 8003f9e:	2001      	movs	r0, #1
 8003fa0:	f7fe f85c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xC5);    //VCM control 
 8003fa4:	20c5      	movs	r0, #197	; 0xc5
 8003fa6:	f7fe f835 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x30); 	 //3F
 8003faa:	2030      	movs	r0, #48	; 0x30
 8003fac:	f7fe f856 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x30); 	 //3C
 8003fb0:	2030      	movs	r0, #48	; 0x30
 8003fb2:	f7fe f853 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xC7);    //VCM control2 
 8003fb6:	20c7      	movs	r0, #199	; 0xc7
 8003fb8:	f7fe f82c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0XB7);
 8003fbc:	20b7      	movs	r0, #183	; 0xb7
 8003fbe:	f7fe f84d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x36);    // Memory Access Control 
 8003fc2:	2036      	movs	r0, #54	; 0x36
 8003fc4:	f7fe f826 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x48);
 8003fc8:	2048      	movs	r0, #72	; 0x48
 8003fca:	f7fe f847 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x3A);
 8003fce:	203a      	movs	r0, #58	; 0x3a
 8003fd0:	f7fe f820 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x55);
 8003fd4:	2055      	movs	r0, #85	; 0x55
 8003fd6:	f7fe f841 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xB1);
 8003fda:	20b1      	movs	r0, #177	; 0xb1
 8003fdc:	f7fe f81a 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8003fe0:	2000      	movs	r0, #0
 8003fe2:	f7fe f83b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x1A);
 8003fe6:	201a      	movs	r0, #26
 8003fe8:	f7fe f838 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xB6);    // Display Function Control 
 8003fec:	20b6      	movs	r0, #182	; 0xb6
 8003fee:	f7fe f811 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x0A);
 8003ff2:	200a      	movs	r0, #10
 8003ff4:	f7fe f832 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA2);
 8003ff8:	20a2      	movs	r0, #162	; 0xa2
 8003ffa:	f7fe f82f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xF2);    // 3Gamma Function Disable 
 8003ffe:	20f2      	movs	r0, #242	; 0xf2
 8004000:	f7fe f808 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004004:	2000      	movs	r0, #0
 8004006:	f7fe f829 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x26);    //Gamma curve selected 
 800400a:	2026      	movs	r0, #38	; 0x26
 800400c:	f7fe f802 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x01);
 8004010:	2001      	movs	r0, #1
 8004012:	f7fe f823 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xE0);    //Set Gamma 
 8004016:	20e0      	movs	r0, #224	; 0xe0
 8004018:	f7fd fffc 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x0F);
 800401c:	200f      	movs	r0, #15
 800401e:	f7fe f81d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2A);
 8004022:	202a      	movs	r0, #42	; 0x2a
 8004024:	f7fe f81a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x28);
 8004028:	2028      	movs	r0, #40	; 0x28
 800402a:	f7fe f817 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x08);
 800402e:	2008      	movs	r0, #8
 8004030:	f7fe f814 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0E);
 8004034:	200e      	movs	r0, #14
 8004036:	f7fe f811 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x08);
 800403a:	2008      	movs	r0, #8
 800403c:	f7fe f80e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x54);
 8004040:	2054      	movs	r0, #84	; 0x54
 8004042:	f7fe f80b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0XA9);
 8004046:	20a9      	movs	r0, #169	; 0xa9
 8004048:	f7fe f808 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x43);
 800404c:	2043      	movs	r0, #67	; 0x43
 800404e:	f7fe f805 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0A);
 8004052:	200a      	movs	r0, #10
 8004054:	f7fe f802 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0F);
 8004058:	200f      	movs	r0, #15
 800405a:	f7fd ffff 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800405e:	2000      	movs	r0, #0
 8004060:	f7fd fffc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004064:	2000      	movs	r0, #0
 8004066:	f7fd fff9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800406a:	2000      	movs	r0, #0
 800406c:	f7fd fff6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004070:	2000      	movs	r0, #0
 8004072:	f7fd fff3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0XE1);    //Set Gamma 
 8004076:	20e1      	movs	r0, #225	; 0xe1
 8004078:	f7fd ffcc 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 800407c:	2000      	movs	r0, #0
 800407e:	f7fd ffed 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x15);
 8004082:	2015      	movs	r0, #21
 8004084:	f7fd ffea 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x17);
 8004088:	2017      	movs	r0, #23
 800408a:	f7fd ffe7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x07);
 800408e:	2007      	movs	r0, #7
 8004090:	f7fd ffe4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x11);
 8004094:	2011      	movs	r0, #17
 8004096:	f7fd ffe1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x06);
 800409a:	2006      	movs	r0, #6
 800409c:	f7fd ffde 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2B);
 80040a0:	202b      	movs	r0, #43	; 0x2b
 80040a2:	f7fd ffdb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x56);
 80040a6:	2056      	movs	r0, #86	; 0x56
 80040a8:	f7fd ffd8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3C);
 80040ac:	203c      	movs	r0, #60	; 0x3c
 80040ae:	f7fd ffd5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x05);
 80040b2:	2005      	movs	r0, #5
 80040b4:	f7fd ffd2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x10);
 80040b8:	2010      	movs	r0, #16
 80040ba:	f7fd ffcf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0F);
 80040be:	200f      	movs	r0, #15
 80040c0:	f7fd ffcc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3F);
 80040c4:	203f      	movs	r0, #63	; 0x3f
 80040c6:	f7fd ffc9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3F);
 80040ca:	203f      	movs	r0, #63	; 0x3f
 80040cc:	f7fd ffc6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0F);
 80040d0:	200f      	movs	r0, #15
 80040d2:	f7fd ffc3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x2B);
 80040d6:	202b      	movs	r0, #43	; 0x2b
 80040d8:	f7fd ff9c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80040dc:	2000      	movs	r0, #0
 80040de:	f7fd ffbd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80040e2:	2000      	movs	r0, #0
 80040e4:	f7fd ffba 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x01);
 80040e8:	2001      	movs	r0, #1
 80040ea:	f7fd ffb7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3f);
 80040ee:	203f      	movs	r0, #63	; 0x3f
 80040f0:	f7fd ffb4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x2A);
 80040f4:	202a      	movs	r0, #42	; 0x2a
 80040f6:	f7fd ff8d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80040fa:	2000      	movs	r0, #0
 80040fc:	f7fd ffae 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004100:	2000      	movs	r0, #0
 8004102:	f7fd ffab 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004106:	2000      	movs	r0, #0
 8004108:	f7fd ffa8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xef);
 800410c:	20ef      	movs	r0, #239	; 0xef
 800410e:	f7fd ffa5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x11); //Exit Sleep
 8004112:	2011      	movs	r0, #17
 8004114:	f7fd ff7e 	bl	8002014 <LCD_WR_REG>
		HAL_Delay(120);
 8004118:	2078      	movs	r0, #120	; 0x78
 800411a:	f7fc fcd5 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0x29); //display on	
 800411e:	2029      	movs	r0, #41	; 0x29
 8004120:	f7fd ff78 	bl	8002014 <LCD_WR_REG>
 8004124:	f003 bcd8 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0x6804) //6804初始化
 8004128:	4b58      	ldr	r3, [pc, #352]	; (800428c <LCD_Init+0x5e8>)
 800412a:	889b      	ldrh	r3, [r3, #4]
 800412c:	f646 0204 	movw	r2, #26628	; 0x6804
 8004130:	4293      	cmp	r3, r2
 8004132:	f040 80ad 	bne.w	8004290 <LCD_Init+0x5ec>
			{
		LCD_WR_REG(0X11);
 8004136:	2011      	movs	r0, #17
 8004138:	f7fd ff6c 	bl	8002014 <LCD_WR_REG>
		HAL_Delay(20);
 800413c:	2014      	movs	r0, #20
 800413e:	f7fc fcc3 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0XD0); //VCI1  VCL  VGH  VGL DDVDH VREG1OUT power amplitude setting
 8004142:	20d0      	movs	r0, #208	; 0xd0
 8004144:	f7fd ff66 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X07);
 8004148:	2007      	movs	r0, #7
 800414a:	f7fd ff87 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X42);
 800414e:	2042      	movs	r0, #66	; 0x42
 8004150:	f7fd ff84 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X1D);
 8004154:	201d      	movs	r0, #29
 8004156:	f7fd ff81 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0XD1); //VCOMH VCOM_AC amplitude setting
 800415a:	20d1      	movs	r0, #209	; 0xd1
 800415c:	f7fd ff5a 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X00);
 8004160:	2000      	movs	r0, #0
 8004162:	f7fd ff7b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X1a);
 8004166:	201a      	movs	r0, #26
 8004168:	f7fd ff78 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X09);
 800416c:	2009      	movs	r0, #9
 800416e:	f7fd ff75 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0XD2); //Operational Amplifier Circuit Constant Current Adjust , charge pump frequency setting
 8004172:	20d2      	movs	r0, #210	; 0xd2
 8004174:	f7fd ff4e 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X01);
 8004178:	2001      	movs	r0, #1
 800417a:	f7fd ff6f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X22);
 800417e:	2022      	movs	r0, #34	; 0x22
 8004180:	f7fd ff6c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0XC0); //REV SM GS
 8004184:	20c0      	movs	r0, #192	; 0xc0
 8004186:	f7fd ff45 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X10);
 800418a:	2010      	movs	r0, #16
 800418c:	f7fd ff66 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X3B);
 8004190:	203b      	movs	r0, #59	; 0x3b
 8004192:	f7fd ff63 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X00);
 8004196:	2000      	movs	r0, #0
 8004198:	f7fd ff60 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X02);
 800419c:	2002      	movs	r0, #2
 800419e:	f7fd ff5d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X11);
 80041a2:	2011      	movs	r0, #17
 80041a4:	f7fd ff5a 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0XC5); // Frame rate setting = 72HZ  when setting 0x03
 80041a8:	20c5      	movs	r0, #197	; 0xc5
 80041aa:	f7fd ff33 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X03);
 80041ae:	2003      	movs	r0, #3
 80041b0:	f7fd ff54 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0XC8); //Gamma setting
 80041b4:	20c8      	movs	r0, #200	; 0xc8
 80041b6:	f7fd ff2d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X00);
 80041ba:	2000      	movs	r0, #0
 80041bc:	f7fd ff4e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X25);
 80041c0:	2025      	movs	r0, #37	; 0x25
 80041c2:	f7fd ff4b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X21);
 80041c6:	2021      	movs	r0, #33	; 0x21
 80041c8:	f7fd ff48 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X05);
 80041cc:	2005      	movs	r0, #5
 80041ce:	f7fd ff45 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X00);
 80041d2:	2000      	movs	r0, #0
 80041d4:	f7fd ff42 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X0a);
 80041d8:	200a      	movs	r0, #10
 80041da:	f7fd ff3f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X65);
 80041de:	2065      	movs	r0, #101	; 0x65
 80041e0:	f7fd ff3c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X25);
 80041e4:	2025      	movs	r0, #37	; 0x25
 80041e6:	f7fd ff39 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X77);
 80041ea:	2077      	movs	r0, #119	; 0x77
 80041ec:	f7fd ff36 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X50);
 80041f0:	2050      	movs	r0, #80	; 0x50
 80041f2:	f7fd ff33 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X0f);
 80041f6:	200f      	movs	r0, #15
 80041f8:	f7fd ff30 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X00);
 80041fc:	2000      	movs	r0, #0
 80041fe:	f7fd ff2d 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0XF8);
 8004202:	20f8      	movs	r0, #248	; 0xf8
 8004204:	f7fd ff06 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X01);
 8004208:	2001      	movs	r0, #1
 800420a:	f7fd ff27 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0XFE);
 800420e:	20fe      	movs	r0, #254	; 0xfe
 8004210:	f7fd ff00 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X00);
 8004214:	2000      	movs	r0, #0
 8004216:	f7fd ff21 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X02);
 800421a:	2002      	movs	r0, #2
 800421c:	f7fd ff1e 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0X20); //Exit invert mode
 8004220:	2020      	movs	r0, #32
 8004222:	f7fd fef7 	bl	8002014 <LCD_WR_REG>

		LCD_WR_REG(0X36);
 8004226:	2036      	movs	r0, #54	; 0x36
 8004228:	f7fd fef4 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X08); //原来是a
 800422c:	2008      	movs	r0, #8
 800422e:	f7fd ff15 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0X3A);
 8004232:	203a      	movs	r0, #58	; 0x3a
 8004234:	f7fd feee 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X55); //16位模式
 8004238:	2055      	movs	r0, #85	; 0x55
 800423a:	f7fd ff0f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0X2B);
 800423e:	202b      	movs	r0, #43	; 0x2b
 8004240:	f7fd fee8 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X00);
 8004244:	2000      	movs	r0, #0
 8004246:	f7fd ff09 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X00);
 800424a:	2000      	movs	r0, #0
 800424c:	f7fd ff06 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X01);
 8004250:	2001      	movs	r0, #1
 8004252:	f7fd ff03 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X3F);
 8004256:	203f      	movs	r0, #63	; 0x3f
 8004258:	f7fd ff00 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0X2A);
 800425c:	202a      	movs	r0, #42	; 0x2a
 800425e:	f7fd fed9 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0X00);
 8004262:	2000      	movs	r0, #0
 8004264:	f7fd fefa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X00);
 8004268:	2000      	movs	r0, #0
 800426a:	f7fd fef7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0X01);
 800426e:	2001      	movs	r0, #1
 8004270:	f7fd fef4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0XDF);
 8004274:	20df      	movs	r0, #223	; 0xdf
 8004276:	f7fd fef1 	bl	800205c <LCD_WR_DATAX>
		HAL_Delay(120);
 800427a:	2078      	movs	r0, #120	; 0x78
 800427c:	f7fc fc24 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0X29);
 8004280:	2029      	movs	r0, #41	; 0x29
 8004282:	f7fd fec7 	bl	8002014 <LCD_WR_REG>
 8004286:	f003 bc27 	b.w	8007ad8 <LCD_Init+0x3e34>
 800428a:	bf00      	nop
 800428c:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0x5310) {
 8004290:	4b03      	ldr	r3, [pc, #12]	; (80042a0 <LCD_Init+0x5fc>)
 8004292:	889b      	ldrh	r3, [r3, #4]
 8004294:	f245 3210 	movw	r2, #21264	; 0x5310
 8004298:	4293      	cmp	r3, r2
 800429a:	f040 877c 	bne.w	8005196 <LCD_Init+0x14f2>
 800429e:	e001      	b.n	80042a4 <LCD_Init+0x600>
 80042a0:	200000a8 	.word	0x200000a8
		LCD_WR_REG(0xED);
 80042a4:	20ed      	movs	r0, #237	; 0xed
 80042a6:	f7fd feb5 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x01);
 80042aa:	2001      	movs	r0, #1
 80042ac:	f7fd fed6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xFE);
 80042b0:	20fe      	movs	r0, #254	; 0xfe
 80042b2:	f7fd fed3 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xEE);
 80042b6:	20ee      	movs	r0, #238	; 0xee
 80042b8:	f7fd feac 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0xDE);
 80042bc:	20de      	movs	r0, #222	; 0xde
 80042be:	f7fd fecd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x21);
 80042c2:	2021      	movs	r0, #33	; 0x21
 80042c4:	f7fd feca 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xF1);
 80042c8:	20f1      	movs	r0, #241	; 0xf1
 80042ca:	f7fd fea3 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x01);
 80042ce:	2001      	movs	r0, #1
 80042d0:	f7fd fec4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xDF);
 80042d4:	20df      	movs	r0, #223	; 0xdf
 80042d6:	f7fd fe9d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x10);
 80042da:	2010      	movs	r0, #16
 80042dc:	f7fd febe 	bl	800205c <LCD_WR_DATAX>

		//VCOMvoltage//
		LCD_WR_REG(0xC4);
 80042e0:	20c4      	movs	r0, #196	; 0xc4
 80042e2:	f7fd fe97 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x8F);	  //5f
 80042e6:	208f      	movs	r0, #143	; 0x8f
 80042e8:	f7fd feb8 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC6);
 80042ec:	20c6      	movs	r0, #198	; 0xc6
 80042ee:	f7fd fe91 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80042f2:	2000      	movs	r0, #0
 80042f4:	f7fd feb2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xE2);
 80042f8:	20e2      	movs	r0, #226	; 0xe2
 80042fa:	f7fd feaf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xE2);
 80042fe:	20e2      	movs	r0, #226	; 0xe2
 8004300:	f7fd feac 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xE2);
 8004304:	20e2      	movs	r0, #226	; 0xe2
 8004306:	f7fd fea9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xBF);
 800430a:	20bf      	movs	r0, #191	; 0xbf
 800430c:	f7fd fe82 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0xAA);
 8004310:	20aa      	movs	r0, #170	; 0xaa
 8004312:	f7fd fea3 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB0);
 8004316:	20b0      	movs	r0, #176	; 0xb0
 8004318:	f7fd fe7c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x0D);
 800431c:	200d      	movs	r0, #13
 800431e:	f7fd fe9d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004322:	2000      	movs	r0, #0
 8004324:	f7fd fe9a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0D);
 8004328:	200d      	movs	r0, #13
 800432a:	f7fd fe97 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800432e:	2000      	movs	r0, #0
 8004330:	f7fd fe94 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x11);
 8004334:	2011      	movs	r0, #17
 8004336:	f7fd fe91 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800433a:	2000      	movs	r0, #0
 800433c:	f7fd fe8e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x19);
 8004340:	2019      	movs	r0, #25
 8004342:	f7fd fe8b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004346:	2000      	movs	r0, #0
 8004348:	f7fd fe88 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x21);
 800434c:	2021      	movs	r0, #33	; 0x21
 800434e:	f7fd fe85 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004352:	2000      	movs	r0, #0
 8004354:	f7fd fe82 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2D);
 8004358:	202d      	movs	r0, #45	; 0x2d
 800435a:	f7fd fe7f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800435e:	2000      	movs	r0, #0
 8004360:	f7fd fe7c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3D);
 8004364:	203d      	movs	r0, #61	; 0x3d
 8004366:	f7fd fe79 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800436a:	2000      	movs	r0, #0
 800436c:	f7fd fe76 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x5D);
 8004370:	205d      	movs	r0, #93	; 0x5d
 8004372:	f7fd fe73 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004376:	2000      	movs	r0, #0
 8004378:	f7fd fe70 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x5D);
 800437c:	205d      	movs	r0, #93	; 0x5d
 800437e:	f7fd fe6d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004382:	2000      	movs	r0, #0
 8004384:	f7fd fe6a 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB1);
 8004388:	20b1      	movs	r0, #177	; 0xb1
 800438a:	f7fd fe43 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x80);
 800438e:	2080      	movs	r0, #128	; 0x80
 8004390:	f7fd fe64 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004394:	2000      	movs	r0, #0
 8004396:	f7fd fe61 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x8B);
 800439a:	208b      	movs	r0, #139	; 0x8b
 800439c:	f7fd fe5e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043a0:	2000      	movs	r0, #0
 80043a2:	f7fd fe5b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x96);
 80043a6:	2096      	movs	r0, #150	; 0x96
 80043a8:	f7fd fe58 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043ac:	2000      	movs	r0, #0
 80043ae:	f7fd fe55 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB2);
 80043b2:	20b2      	movs	r0, #178	; 0xb2
 80043b4:	f7fd fe2e 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80043b8:	2000      	movs	r0, #0
 80043ba:	f7fd fe4f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043be:	2000      	movs	r0, #0
 80043c0:	f7fd fe4c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x02);
 80043c4:	2002      	movs	r0, #2
 80043c6:	f7fd fe49 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043ca:	2000      	movs	r0, #0
 80043cc:	f7fd fe46 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x03);
 80043d0:	2003      	movs	r0, #3
 80043d2:	f7fd fe43 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043d6:	2000      	movs	r0, #0
 80043d8:	f7fd fe40 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB3);
 80043dc:	20b3      	movs	r0, #179	; 0xb3
 80043de:	f7fd fe19 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80043e2:	2000      	movs	r0, #0
 80043e4:	f7fd fe3a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043e8:	2000      	movs	r0, #0
 80043ea:	f7fd fe37 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043ee:	2000      	movs	r0, #0
 80043f0:	f7fd fe34 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043f4:	2000      	movs	r0, #0
 80043f6:	f7fd fe31 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80043fa:	2000      	movs	r0, #0
 80043fc:	f7fd fe2e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004400:	2000      	movs	r0, #0
 8004402:	f7fd fe2b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004406:	2000      	movs	r0, #0
 8004408:	f7fd fe28 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800440c:	2000      	movs	r0, #0
 800440e:	f7fd fe25 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004412:	2000      	movs	r0, #0
 8004414:	f7fd fe22 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004418:	2000      	movs	r0, #0
 800441a:	f7fd fe1f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800441e:	2000      	movs	r0, #0
 8004420:	f7fd fe1c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004424:	2000      	movs	r0, #0
 8004426:	f7fd fe19 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800442a:	2000      	movs	r0, #0
 800442c:	f7fd fe16 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004430:	2000      	movs	r0, #0
 8004432:	f7fd fe13 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004436:	2000      	movs	r0, #0
 8004438:	f7fd fe10 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800443c:	2000      	movs	r0, #0
 800443e:	f7fd fe0d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004442:	2000      	movs	r0, #0
 8004444:	f7fd fe0a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004448:	2000      	movs	r0, #0
 800444a:	f7fd fe07 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800444e:	2000      	movs	r0, #0
 8004450:	f7fd fe04 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004454:	2000      	movs	r0, #0
 8004456:	f7fd fe01 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800445a:	2000      	movs	r0, #0
 800445c:	f7fd fdfe 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004460:	2000      	movs	r0, #0
 8004462:	f7fd fdfb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004466:	2000      	movs	r0, #0
 8004468:	f7fd fdf8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800446c:	2000      	movs	r0, #0
 800446e:	f7fd fdf5 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB4);
 8004472:	20b4      	movs	r0, #180	; 0xb4
 8004474:	f7fd fdce 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x8B);
 8004478:	208b      	movs	r0, #139	; 0x8b
 800447a:	f7fd fdef 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800447e:	2000      	movs	r0, #0
 8004480:	f7fd fdec 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x96);
 8004484:	2096      	movs	r0, #150	; 0x96
 8004486:	f7fd fde9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800448a:	2000      	movs	r0, #0
 800448c:	f7fd fde6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA1);
 8004490:	20a1      	movs	r0, #161	; 0xa1
 8004492:	f7fd fde3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004496:	2000      	movs	r0, #0
 8004498:	f7fd fde0 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB5);
 800449c:	20b5      	movs	r0, #181	; 0xb5
 800449e:	f7fd fdb9 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x02);
 80044a2:	2002      	movs	r0, #2
 80044a4:	f7fd fdda 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044a8:	2000      	movs	r0, #0
 80044aa:	f7fd fdd7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x03);
 80044ae:	2003      	movs	r0, #3
 80044b0:	f7fd fdd4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044b4:	2000      	movs	r0, #0
 80044b6:	f7fd fdd1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x04);
 80044ba:	2004      	movs	r0, #4
 80044bc:	f7fd fdce 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044c0:	2000      	movs	r0, #0
 80044c2:	f7fd fdcb 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB6);
 80044c6:	20b6      	movs	r0, #182	; 0xb6
 80044c8:	f7fd fda4 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80044cc:	2000      	movs	r0, #0
 80044ce:	f7fd fdc5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044d2:	2000      	movs	r0, #0
 80044d4:	f7fd fdc2 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB7);
 80044d8:	20b7      	movs	r0, #183	; 0xb7
 80044da:	f7fd fd9b 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80044de:	2000      	movs	r0, #0
 80044e0:	f7fd fdbc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044e4:	2000      	movs	r0, #0
 80044e6:	f7fd fdb9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3F);
 80044ea:	203f      	movs	r0, #63	; 0x3f
 80044ec:	f7fd fdb6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044f0:	2000      	movs	r0, #0
 80044f2:	f7fd fdb3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x5E);
 80044f6:	205e      	movs	r0, #94	; 0x5e
 80044f8:	f7fd fdb0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80044fc:	2000      	movs	r0, #0
 80044fe:	f7fd fdad 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x64);
 8004502:	2064      	movs	r0, #100	; 0x64
 8004504:	f7fd fdaa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004508:	2000      	movs	r0, #0
 800450a:	f7fd fda7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x8C);
 800450e:	208c      	movs	r0, #140	; 0x8c
 8004510:	f7fd fda4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004514:	2000      	movs	r0, #0
 8004516:	f7fd fda1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xAC);
 800451a:	20ac      	movs	r0, #172	; 0xac
 800451c:	f7fd fd9e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004520:	2000      	movs	r0, #0
 8004522:	f7fd fd9b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xDC);
 8004526:	20dc      	movs	r0, #220	; 0xdc
 8004528:	f7fd fd98 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800452c:	2000      	movs	r0, #0
 800452e:	f7fd fd95 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x70);
 8004532:	2070      	movs	r0, #112	; 0x70
 8004534:	f7fd fd92 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004538:	2000      	movs	r0, #0
 800453a:	f7fd fd8f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x90);
 800453e:	2090      	movs	r0, #144	; 0x90
 8004540:	f7fd fd8c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004544:	2000      	movs	r0, #0
 8004546:	f7fd fd89 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xEB);
 800454a:	20eb      	movs	r0, #235	; 0xeb
 800454c:	f7fd fd86 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004550:	2000      	movs	r0, #0
 8004552:	f7fd fd83 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xDC);
 8004556:	20dc      	movs	r0, #220	; 0xdc
 8004558:	f7fd fd80 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800455c:	2000      	movs	r0, #0
 800455e:	f7fd fd7d 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xB8);
 8004562:	20b8      	movs	r0, #184	; 0xb8
 8004564:	f7fd fd56 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004568:	2000      	movs	r0, #0
 800456a:	f7fd fd77 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800456e:	2000      	movs	r0, #0
 8004570:	f7fd fd74 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004574:	2000      	movs	r0, #0
 8004576:	f7fd fd71 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800457a:	2000      	movs	r0, #0
 800457c:	f7fd fd6e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004580:	2000      	movs	r0, #0
 8004582:	f7fd fd6b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004586:	2000      	movs	r0, #0
 8004588:	f7fd fd68 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800458c:	2000      	movs	r0, #0
 800458e:	f7fd fd65 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004592:	2000      	movs	r0, #0
 8004594:	f7fd fd62 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xBA);
 8004598:	20ba      	movs	r0, #186	; 0xba
 800459a:	f7fd fd3b 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x24);
 800459e:	2024      	movs	r0, #36	; 0x24
 80045a0:	f7fd fd5c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045a4:	2000      	movs	r0, #0
 80045a6:	f7fd fd59 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045aa:	2000      	movs	r0, #0
 80045ac:	f7fd fd56 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045b0:	2000      	movs	r0, #0
 80045b2:	f7fd fd53 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC1);
 80045b6:	20c1      	movs	r0, #193	; 0xc1
 80045b8:	f7fd fd2c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x20);
 80045bc:	2020      	movs	r0, #32
 80045be:	f7fd fd4d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045c2:	2000      	movs	r0, #0
 80045c4:	f7fd fd4a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x54);
 80045c8:	2054      	movs	r0, #84	; 0x54
 80045ca:	f7fd fd47 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045ce:	2000      	movs	r0, #0
 80045d0:	f7fd fd44 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xFF);
 80045d4:	20ff      	movs	r0, #255	; 0xff
 80045d6:	f7fd fd41 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045da:	2000      	movs	r0, #0
 80045dc:	f7fd fd3e 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC2);
 80045e0:	20c2      	movs	r0, #194	; 0xc2
 80045e2:	f7fd fd17 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x0A);
 80045e6:	200a      	movs	r0, #10
 80045e8:	f7fd fd38 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045ec:	2000      	movs	r0, #0
 80045ee:	f7fd fd35 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x04);
 80045f2:	2004      	movs	r0, #4
 80045f4:	f7fd fd32 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80045f8:	2000      	movs	r0, #0
 80045fa:	f7fd fd2f 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC3);
 80045fe:	20c3      	movs	r0, #195	; 0xc3
 8004600:	f7fd fd08 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x3C);
 8004604:	203c      	movs	r0, #60	; 0x3c
 8004606:	f7fd fd29 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800460a:	2000      	movs	r0, #0
 800460c:	f7fd fd26 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3A);
 8004610:	203a      	movs	r0, #58	; 0x3a
 8004612:	f7fd fd23 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004616:	2000      	movs	r0, #0
 8004618:	f7fd fd20 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x39);
 800461c:	2039      	movs	r0, #57	; 0x39
 800461e:	f7fd fd1d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004622:	2000      	movs	r0, #0
 8004624:	f7fd fd1a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x37);
 8004628:	2037      	movs	r0, #55	; 0x37
 800462a:	f7fd fd17 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800462e:	2000      	movs	r0, #0
 8004630:	f7fd fd14 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3C);
 8004634:	203c      	movs	r0, #60	; 0x3c
 8004636:	f7fd fd11 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800463a:	2000      	movs	r0, #0
 800463c:	f7fd fd0e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x36);
 8004640:	2036      	movs	r0, #54	; 0x36
 8004642:	f7fd fd0b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004646:	2000      	movs	r0, #0
 8004648:	f7fd fd08 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x32);
 800464c:	2032      	movs	r0, #50	; 0x32
 800464e:	f7fd fd05 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004652:	2000      	movs	r0, #0
 8004654:	f7fd fd02 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2F);
 8004658:	202f      	movs	r0, #47	; 0x2f
 800465a:	f7fd fcff 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800465e:	2000      	movs	r0, #0
 8004660:	f7fd fcfc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2C);
 8004664:	202c      	movs	r0, #44	; 0x2c
 8004666:	f7fd fcf9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800466a:	2000      	movs	r0, #0
 800466c:	f7fd fcf6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x29);
 8004670:	2029      	movs	r0, #41	; 0x29
 8004672:	f7fd fcf3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004676:	2000      	movs	r0, #0
 8004678:	f7fd fcf0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x26);
 800467c:	2026      	movs	r0, #38	; 0x26
 800467e:	f7fd fced 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004682:	2000      	movs	r0, #0
 8004684:	f7fd fcea 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x24);
 8004688:	2024      	movs	r0, #36	; 0x24
 800468a:	f7fd fce7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800468e:	2000      	movs	r0, #0
 8004690:	f7fd fce4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x24);
 8004694:	2024      	movs	r0, #36	; 0x24
 8004696:	f7fd fce1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800469a:	2000      	movs	r0, #0
 800469c:	f7fd fcde 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x23);
 80046a0:	2023      	movs	r0, #35	; 0x23
 80046a2:	f7fd fcdb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046a6:	2000      	movs	r0, #0
 80046a8:	f7fd fcd8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3C);
 80046ac:	203c      	movs	r0, #60	; 0x3c
 80046ae:	f7fd fcd5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046b2:	2000      	movs	r0, #0
 80046b4:	f7fd fcd2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x36);
 80046b8:	2036      	movs	r0, #54	; 0x36
 80046ba:	f7fd fccf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046be:	2000      	movs	r0, #0
 80046c0:	f7fd fccc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x32);
 80046c4:	2032      	movs	r0, #50	; 0x32
 80046c6:	f7fd fcc9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046ca:	2000      	movs	r0, #0
 80046cc:	f7fd fcc6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2F);
 80046d0:	202f      	movs	r0, #47	; 0x2f
 80046d2:	f7fd fcc3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046d6:	2000      	movs	r0, #0
 80046d8:	f7fd fcc0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2C);
 80046dc:	202c      	movs	r0, #44	; 0x2c
 80046de:	f7fd fcbd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046e2:	2000      	movs	r0, #0
 80046e4:	f7fd fcba 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x29);
 80046e8:	2029      	movs	r0, #41	; 0x29
 80046ea:	f7fd fcb7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046ee:	2000      	movs	r0, #0
 80046f0:	f7fd fcb4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x26);
 80046f4:	2026      	movs	r0, #38	; 0x26
 80046f6:	f7fd fcb1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80046fa:	2000      	movs	r0, #0
 80046fc:	f7fd fcae 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x24);
 8004700:	2024      	movs	r0, #36	; 0x24
 8004702:	f7fd fcab 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004706:	2000      	movs	r0, #0
 8004708:	f7fd fca8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x24);
 800470c:	2024      	movs	r0, #36	; 0x24
 800470e:	f7fd fca5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004712:	2000      	movs	r0, #0
 8004714:	f7fd fca2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x23);
 8004718:	2023      	movs	r0, #35	; 0x23
 800471a:	f7fd fc9f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800471e:	2000      	movs	r0, #0
 8004720:	f7fd fc9c 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC4);
 8004724:	20c4      	movs	r0, #196	; 0xc4
 8004726:	f7fd fc75 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x62);
 800472a:	2062      	movs	r0, #98	; 0x62
 800472c:	f7fd fc96 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004730:	2000      	movs	r0, #0
 8004732:	f7fd fc93 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x05);
 8004736:	2005      	movs	r0, #5
 8004738:	f7fd fc90 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800473c:	2000      	movs	r0, #0
 800473e:	f7fd fc8d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x84);
 8004742:	2084      	movs	r0, #132	; 0x84
 8004744:	f7fd fc8a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004748:	2000      	movs	r0, #0
 800474a:	f7fd fc87 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF0);
 800474e:	20f0      	movs	r0, #240	; 0xf0
 8004750:	f7fd fc84 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004754:	2000      	movs	r0, #0
 8004756:	f7fd fc81 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x18);
 800475a:	2018      	movs	r0, #24
 800475c:	f7fd fc7e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004760:	2000      	movs	r0, #0
 8004762:	f7fd fc7b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA4);
 8004766:	20a4      	movs	r0, #164	; 0xa4
 8004768:	f7fd fc78 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800476c:	2000      	movs	r0, #0
 800476e:	f7fd fc75 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x18);
 8004772:	2018      	movs	r0, #24
 8004774:	f7fd fc72 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004778:	2000      	movs	r0, #0
 800477a:	f7fd fc6f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x50);
 800477e:	2050      	movs	r0, #80	; 0x50
 8004780:	f7fd fc6c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004784:	2000      	movs	r0, #0
 8004786:	f7fd fc69 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0C);
 800478a:	200c      	movs	r0, #12
 800478c:	f7fd fc66 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004790:	2000      	movs	r0, #0
 8004792:	f7fd fc63 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x17);
 8004796:	2017      	movs	r0, #23
 8004798:	f7fd fc60 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800479c:	2000      	movs	r0, #0
 800479e:	f7fd fc5d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x95);
 80047a2:	2095      	movs	r0, #149	; 0x95
 80047a4:	f7fd fc5a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047a8:	2000      	movs	r0, #0
 80047aa:	f7fd fc57 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 80047ae:	20f3      	movs	r0, #243	; 0xf3
 80047b0:	f7fd fc54 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047b4:	2000      	movs	r0, #0
 80047b6:	f7fd fc51 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xE6);
 80047ba:	20e6      	movs	r0, #230	; 0xe6
 80047bc:	f7fd fc4e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047c0:	2000      	movs	r0, #0
 80047c2:	f7fd fc4b 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC5);
 80047c6:	20c5      	movs	r0, #197	; 0xc5
 80047c8:	f7fd fc24 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x32);
 80047cc:	2032      	movs	r0, #50	; 0x32
 80047ce:	f7fd fc45 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047d2:	2000      	movs	r0, #0
 80047d4:	f7fd fc42 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 80047d8:	2044      	movs	r0, #68	; 0x44
 80047da:	f7fd fc3f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047de:	2000      	movs	r0, #0
 80047e0:	f7fd fc3c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x65);
 80047e4:	2065      	movs	r0, #101	; 0x65
 80047e6:	f7fd fc39 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047ea:	2000      	movs	r0, #0
 80047ec:	f7fd fc36 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x76);
 80047f0:	2076      	movs	r0, #118	; 0x76
 80047f2:	f7fd fc33 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80047f6:	2000      	movs	r0, #0
 80047f8:	f7fd fc30 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x88);
 80047fc:	2088      	movs	r0, #136	; 0x88
 80047fe:	f7fd fc2d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004802:	2000      	movs	r0, #0
 8004804:	f7fd fc2a 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC6);
 8004808:	20c6      	movs	r0, #198	; 0xc6
 800480a:	f7fd fc03 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x20);
 800480e:	2020      	movs	r0, #32
 8004810:	f7fd fc24 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004814:	2000      	movs	r0, #0
 8004816:	f7fd fc21 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x17);
 800481a:	2017      	movs	r0, #23
 800481c:	f7fd fc1e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004820:	2000      	movs	r0, #0
 8004822:	f7fd fc1b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x01);
 8004826:	2001      	movs	r0, #1
 8004828:	f7fd fc18 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800482c:	2000      	movs	r0, #0
 800482e:	f7fd fc15 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC7);
 8004832:	20c7      	movs	r0, #199	; 0xc7
 8004834:	f7fd fbee 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004838:	2000      	movs	r0, #0
 800483a:	f7fd fc0f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800483e:	2000      	movs	r0, #0
 8004840:	f7fd fc0c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004844:	2000      	movs	r0, #0
 8004846:	f7fd fc09 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800484a:	2000      	movs	r0, #0
 800484c:	f7fd fc06 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC8);
 8004850:	20c8      	movs	r0, #200	; 0xc8
 8004852:	f7fd fbdf 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004856:	2000      	movs	r0, #0
 8004858:	f7fd fc00 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800485c:	2000      	movs	r0, #0
 800485e:	f7fd fbfd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004862:	2000      	movs	r0, #0
 8004864:	f7fd fbfa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004868:	2000      	movs	r0, #0
 800486a:	f7fd fbf7 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xC9);
 800486e:	20c9      	movs	r0, #201	; 0xc9
 8004870:	f7fd fbd0 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004874:	2000      	movs	r0, #0
 8004876:	f7fd fbf1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800487a:	2000      	movs	r0, #0
 800487c:	f7fd fbee 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004880:	2000      	movs	r0, #0
 8004882:	f7fd fbeb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004886:	2000      	movs	r0, #0
 8004888:	f7fd fbe8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800488c:	2000      	movs	r0, #0
 800488e:	f7fd fbe5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004892:	2000      	movs	r0, #0
 8004894:	f7fd fbe2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004898:	2000      	movs	r0, #0
 800489a:	f7fd fbdf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800489e:	2000      	movs	r0, #0
 80048a0:	f7fd fbdc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048a4:	2000      	movs	r0, #0
 80048a6:	f7fd fbd9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048aa:	2000      	movs	r0, #0
 80048ac:	f7fd fbd6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048b0:	2000      	movs	r0, #0
 80048b2:	f7fd fbd3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048b6:	2000      	movs	r0, #0
 80048b8:	f7fd fbd0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048bc:	2000      	movs	r0, #0
 80048be:	f7fd fbcd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048c2:	2000      	movs	r0, #0
 80048c4:	f7fd fbca 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048c8:	2000      	movs	r0, #0
 80048ca:	f7fd fbc7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048ce:	2000      	movs	r0, #0
 80048d0:	f7fd fbc4 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE0);
 80048d4:	20e0      	movs	r0, #224	; 0xe0
 80048d6:	f7fd fb9d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x16);
 80048da:	2016      	movs	r0, #22
 80048dc:	f7fd fbbe 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048e0:	2000      	movs	r0, #0
 80048e2:	f7fd fbbb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x1C);
 80048e6:	201c      	movs	r0, #28
 80048e8:	f7fd fbb8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048ec:	2000      	movs	r0, #0
 80048ee:	f7fd fbb5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x21);
 80048f2:	2021      	movs	r0, #33	; 0x21
 80048f4:	f7fd fbb2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80048f8:	2000      	movs	r0, #0
 80048fa:	f7fd fbaf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x36);
 80048fe:	2036      	movs	r0, #54	; 0x36
 8004900:	f7fd fbac 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004904:	2000      	movs	r0, #0
 8004906:	f7fd fba9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x46);
 800490a:	2046      	movs	r0, #70	; 0x46
 800490c:	f7fd fba6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004910:	2000      	movs	r0, #0
 8004912:	f7fd fba3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x52);
 8004916:	2052      	movs	r0, #82	; 0x52
 8004918:	f7fd fba0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800491c:	2000      	movs	r0, #0
 800491e:	f7fd fb9d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x64);
 8004922:	2064      	movs	r0, #100	; 0x64
 8004924:	f7fd fb9a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004928:	2000      	movs	r0, #0
 800492a:	f7fd fb97 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x7A);
 800492e:	207a      	movs	r0, #122	; 0x7a
 8004930:	f7fd fb94 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004934:	2000      	movs	r0, #0
 8004936:	f7fd fb91 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x8B);
 800493a:	208b      	movs	r0, #139	; 0x8b
 800493c:	f7fd fb8e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004940:	2000      	movs	r0, #0
 8004942:	f7fd fb8b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004946:	2099      	movs	r0, #153	; 0x99
 8004948:	f7fd fb88 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800494c:	2000      	movs	r0, #0
 800494e:	f7fd fb85 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA8);
 8004952:	20a8      	movs	r0, #168	; 0xa8
 8004954:	f7fd fb82 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004958:	2000      	movs	r0, #0
 800495a:	f7fd fb7f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xB9);
 800495e:	20b9      	movs	r0, #185	; 0xb9
 8004960:	f7fd fb7c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004964:	2000      	movs	r0, #0
 8004966:	f7fd fb79 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC4);
 800496a:	20c4      	movs	r0, #196	; 0xc4
 800496c:	f7fd fb76 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004970:	2000      	movs	r0, #0
 8004972:	f7fd fb73 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xCA);
 8004976:	20ca      	movs	r0, #202	; 0xca
 8004978:	f7fd fb70 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800497c:	2000      	movs	r0, #0
 800497e:	f7fd fb6d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD2);
 8004982:	20d2      	movs	r0, #210	; 0xd2
 8004984:	f7fd fb6a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004988:	2000      	movs	r0, #0
 800498a:	f7fd fb67 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD9);
 800498e:	20d9      	movs	r0, #217	; 0xd9
 8004990:	f7fd fb64 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004994:	2000      	movs	r0, #0
 8004996:	f7fd fb61 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xE0);
 800499a:	20e0      	movs	r0, #224	; 0xe0
 800499c:	f7fd fb5e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049a0:	2000      	movs	r0, #0
 80049a2:	f7fd fb5b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 80049a6:	20f3      	movs	r0, #243	; 0xf3
 80049a8:	f7fd fb58 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049ac:	2000      	movs	r0, #0
 80049ae:	f7fd fb55 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE1);
 80049b2:	20e1      	movs	r0, #225	; 0xe1
 80049b4:	f7fd fb2e 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x16);
 80049b8:	2016      	movs	r0, #22
 80049ba:	f7fd fb4f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049be:	2000      	movs	r0, #0
 80049c0:	f7fd fb4c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x1C);
 80049c4:	201c      	movs	r0, #28
 80049c6:	f7fd fb49 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049ca:	2000      	movs	r0, #0
 80049cc:	f7fd fb46 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x22);
 80049d0:	2022      	movs	r0, #34	; 0x22
 80049d2:	f7fd fb43 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049d6:	2000      	movs	r0, #0
 80049d8:	f7fd fb40 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x36);
 80049dc:	2036      	movs	r0, #54	; 0x36
 80049de:	f7fd fb3d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049e2:	2000      	movs	r0, #0
 80049e4:	f7fd fb3a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x45);
 80049e8:	2045      	movs	r0, #69	; 0x45
 80049ea:	f7fd fb37 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049ee:	2000      	movs	r0, #0
 80049f0:	f7fd fb34 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x52);
 80049f4:	2052      	movs	r0, #82	; 0x52
 80049f6:	f7fd fb31 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80049fa:	2000      	movs	r0, #0
 80049fc:	f7fd fb2e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x64);
 8004a00:	2064      	movs	r0, #100	; 0x64
 8004a02:	f7fd fb2b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a06:	2000      	movs	r0, #0
 8004a08:	f7fd fb28 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x7A);
 8004a0c:	207a      	movs	r0, #122	; 0x7a
 8004a0e:	f7fd fb25 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a12:	2000      	movs	r0, #0
 8004a14:	f7fd fb22 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x8B);
 8004a18:	208b      	movs	r0, #139	; 0x8b
 8004a1a:	f7fd fb1f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a1e:	2000      	movs	r0, #0
 8004a20:	f7fd fb1c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004a24:	2099      	movs	r0, #153	; 0x99
 8004a26:	f7fd fb19 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a2a:	2000      	movs	r0, #0
 8004a2c:	f7fd fb16 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA8);
 8004a30:	20a8      	movs	r0, #168	; 0xa8
 8004a32:	f7fd fb13 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a36:	2000      	movs	r0, #0
 8004a38:	f7fd fb10 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xB9);
 8004a3c:	20b9      	movs	r0, #185	; 0xb9
 8004a3e:	f7fd fb0d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a42:	2000      	movs	r0, #0
 8004a44:	f7fd fb0a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC4);
 8004a48:	20c4      	movs	r0, #196	; 0xc4
 8004a4a:	f7fd fb07 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a4e:	2000      	movs	r0, #0
 8004a50:	f7fd fb04 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xCA);
 8004a54:	20ca      	movs	r0, #202	; 0xca
 8004a56:	f7fd fb01 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a5a:	2000      	movs	r0, #0
 8004a5c:	f7fd fafe 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD2);
 8004a60:	20d2      	movs	r0, #210	; 0xd2
 8004a62:	f7fd fafb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a66:	2000      	movs	r0, #0
 8004a68:	f7fd faf8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD8);
 8004a6c:	20d8      	movs	r0, #216	; 0xd8
 8004a6e:	f7fd faf5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a72:	2000      	movs	r0, #0
 8004a74:	f7fd faf2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xE0);
 8004a78:	20e0      	movs	r0, #224	; 0xe0
 8004a7a:	f7fd faef 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a7e:	2000      	movs	r0, #0
 8004a80:	f7fd faec 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 8004a84:	20f3      	movs	r0, #243	; 0xf3
 8004a86:	f7fd fae9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a8a:	2000      	movs	r0, #0
 8004a8c:	f7fd fae6 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE2);
 8004a90:	20e2      	movs	r0, #226	; 0xe2
 8004a92:	f7fd fabf 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x05);
 8004a96:	2005      	movs	r0, #5
 8004a98:	f7fd fae0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004a9c:	2000      	movs	r0, #0
 8004a9e:	f7fd fadd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x0B);
 8004aa2:	200b      	movs	r0, #11
 8004aa4:	f7fd fada 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004aa8:	2000      	movs	r0, #0
 8004aaa:	f7fd fad7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x1B);
 8004aae:	201b      	movs	r0, #27
 8004ab0:	f7fd fad4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ab4:	2000      	movs	r0, #0
 8004ab6:	f7fd fad1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x34);
 8004aba:	2034      	movs	r0, #52	; 0x34
 8004abc:	f7fd face 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ac0:	2000      	movs	r0, #0
 8004ac2:	f7fd facb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 8004ac6:	2044      	movs	r0, #68	; 0x44
 8004ac8:	f7fd fac8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004acc:	2000      	movs	r0, #0
 8004ace:	f7fd fac5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x4F);
 8004ad2:	204f      	movs	r0, #79	; 0x4f
 8004ad4:	f7fd fac2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ad8:	2000      	movs	r0, #0
 8004ada:	f7fd fabf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x61);
 8004ade:	2061      	movs	r0, #97	; 0x61
 8004ae0:	f7fd fabc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ae4:	2000      	movs	r0, #0
 8004ae6:	f7fd fab9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x79);
 8004aea:	2079      	movs	r0, #121	; 0x79
 8004aec:	f7fd fab6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004af0:	2000      	movs	r0, #0
 8004af2:	f7fd fab3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x88);
 8004af6:	2088      	movs	r0, #136	; 0x88
 8004af8:	f7fd fab0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004afc:	2000      	movs	r0, #0
 8004afe:	f7fd faad 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x97);
 8004b02:	2097      	movs	r0, #151	; 0x97
 8004b04:	f7fd faaa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b08:	2000      	movs	r0, #0
 8004b0a:	f7fd faa7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA6);
 8004b0e:	20a6      	movs	r0, #166	; 0xa6
 8004b10:	f7fd faa4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b14:	2000      	movs	r0, #0
 8004b16:	f7fd faa1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xB7);
 8004b1a:	20b7      	movs	r0, #183	; 0xb7
 8004b1c:	f7fd fa9e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b20:	2000      	movs	r0, #0
 8004b22:	f7fd fa9b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC2);
 8004b26:	20c2      	movs	r0, #194	; 0xc2
 8004b28:	f7fd fa98 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b2c:	2000      	movs	r0, #0
 8004b2e:	f7fd fa95 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC7);
 8004b32:	20c7      	movs	r0, #199	; 0xc7
 8004b34:	f7fd fa92 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b38:	2000      	movs	r0, #0
 8004b3a:	f7fd fa8f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD1);
 8004b3e:	20d1      	movs	r0, #209	; 0xd1
 8004b40:	f7fd fa8c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b44:	2000      	movs	r0, #0
 8004b46:	f7fd fa89 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD6);
 8004b4a:	20d6      	movs	r0, #214	; 0xd6
 8004b4c:	f7fd fa86 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b50:	2000      	movs	r0, #0
 8004b52:	f7fd fa83 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xDD);
 8004b56:	20dd      	movs	r0, #221	; 0xdd
 8004b58:	f7fd fa80 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b5c:	2000      	movs	r0, #0
 8004b5e:	f7fd fa7d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 8004b62:	20f3      	movs	r0, #243	; 0xf3
 8004b64:	f7fd fa7a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b68:	2000      	movs	r0, #0
 8004b6a:	f7fd fa77 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xE3);
 8004b6e:	20e3      	movs	r0, #227	; 0xe3
 8004b70:	f7fd fa50 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x05);
 8004b74:	2005      	movs	r0, #5
 8004b76:	f7fd fa71 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b7a:	2000      	movs	r0, #0
 8004b7c:	f7fd fa6e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA);
 8004b80:	200a      	movs	r0, #10
 8004b82:	f7fd fa6b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b86:	2000      	movs	r0, #0
 8004b88:	f7fd fa68 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x1C);
 8004b8c:	201c      	movs	r0, #28
 8004b8e:	f7fd fa65 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b92:	2000      	movs	r0, #0
 8004b94:	f7fd fa62 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x33);
 8004b98:	2033      	movs	r0, #51	; 0x33
 8004b9a:	f7fd fa5f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004b9e:	2000      	movs	r0, #0
 8004ba0:	f7fd fa5c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 8004ba4:	2044      	movs	r0, #68	; 0x44
 8004ba6:	f7fd fa59 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004baa:	2000      	movs	r0, #0
 8004bac:	f7fd fa56 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x50);
 8004bb0:	2050      	movs	r0, #80	; 0x50
 8004bb2:	f7fd fa53 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004bb6:	2000      	movs	r0, #0
 8004bb8:	f7fd fa50 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x62);
 8004bbc:	2062      	movs	r0, #98	; 0x62
 8004bbe:	f7fd fa4d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004bc2:	2000      	movs	r0, #0
 8004bc4:	f7fd fa4a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x78);
 8004bc8:	2078      	movs	r0, #120	; 0x78
 8004bca:	f7fd fa47 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004bce:	2000      	movs	r0, #0
 8004bd0:	f7fd fa44 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x88);
 8004bd4:	2088      	movs	r0, #136	; 0x88
 8004bd6:	f7fd fa41 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004bda:	2000      	movs	r0, #0
 8004bdc:	f7fd fa3e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x97);
 8004be0:	2097      	movs	r0, #151	; 0x97
 8004be2:	f7fd fa3b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004be6:	2000      	movs	r0, #0
 8004be8:	f7fd fa38 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA6);
 8004bec:	20a6      	movs	r0, #166	; 0xa6
 8004bee:	f7fd fa35 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004bf2:	2000      	movs	r0, #0
 8004bf4:	f7fd fa32 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xB7);
 8004bf8:	20b7      	movs	r0, #183	; 0xb7
 8004bfa:	f7fd fa2f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004bfe:	2000      	movs	r0, #0
 8004c00:	f7fd fa2c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC2);
 8004c04:	20c2      	movs	r0, #194	; 0xc2
 8004c06:	f7fd fa29 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c0a:	2000      	movs	r0, #0
 8004c0c:	f7fd fa26 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC7);
 8004c10:	20c7      	movs	r0, #199	; 0xc7
 8004c12:	f7fd fa23 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c16:	2000      	movs	r0, #0
 8004c18:	f7fd fa20 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD1);
 8004c1c:	20d1      	movs	r0, #209	; 0xd1
 8004c1e:	f7fd fa1d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c22:	2000      	movs	r0, #0
 8004c24:	f7fd fa1a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD5);
 8004c28:	20d5      	movs	r0, #213	; 0xd5
 8004c2a:	f7fd fa17 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c2e:	2000      	movs	r0, #0
 8004c30:	f7fd fa14 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xDD);
 8004c34:	20dd      	movs	r0, #221	; 0xdd
 8004c36:	f7fd fa11 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c3a:	2000      	movs	r0, #0
 8004c3c:	f7fd fa0e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 8004c40:	20f3      	movs	r0, #243	; 0xf3
 8004c42:	f7fd fa0b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c46:	2000      	movs	r0, #0
 8004c48:	f7fd fa08 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE4);
 8004c4c:	20e4      	movs	r0, #228	; 0xe4
 8004c4e:	f7fd f9e1 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x01);
 8004c52:	2001      	movs	r0, #1
 8004c54:	f7fd fa02 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c58:	2000      	movs	r0, #0
 8004c5a:	f7fd f9ff 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x01);
 8004c5e:	2001      	movs	r0, #1
 8004c60:	f7fd f9fc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c64:	2000      	movs	r0, #0
 8004c66:	f7fd f9f9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x02);
 8004c6a:	2002      	movs	r0, #2
 8004c6c:	f7fd f9f6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c70:	2000      	movs	r0, #0
 8004c72:	f7fd f9f3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x2A);
 8004c76:	202a      	movs	r0, #42	; 0x2a
 8004c78:	f7fd f9f0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c7c:	2000      	movs	r0, #0
 8004c7e:	f7fd f9ed 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3C);
 8004c82:	203c      	movs	r0, #60	; 0x3c
 8004c84:	f7fd f9ea 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c88:	2000      	movs	r0, #0
 8004c8a:	f7fd f9e7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x4B);
 8004c8e:	204b      	movs	r0, #75	; 0x4b
 8004c90:	f7fd f9e4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004c94:	2000      	movs	r0, #0
 8004c96:	f7fd f9e1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x5D);
 8004c9a:	205d      	movs	r0, #93	; 0x5d
 8004c9c:	f7fd f9de 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ca0:	2000      	movs	r0, #0
 8004ca2:	f7fd f9db 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x74);
 8004ca6:	2074      	movs	r0, #116	; 0x74
 8004ca8:	f7fd f9d8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004cac:	2000      	movs	r0, #0
 8004cae:	f7fd f9d5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x84);
 8004cb2:	2084      	movs	r0, #132	; 0x84
 8004cb4:	f7fd f9d2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004cb8:	2000      	movs	r0, #0
 8004cba:	f7fd f9cf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x93);
 8004cbe:	2093      	movs	r0, #147	; 0x93
 8004cc0:	f7fd f9cc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004cc4:	2000      	movs	r0, #0
 8004cc6:	f7fd f9c9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA2);
 8004cca:	20a2      	movs	r0, #162	; 0xa2
 8004ccc:	f7fd f9c6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004cd0:	2000      	movs	r0, #0
 8004cd2:	f7fd f9c3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xB3);
 8004cd6:	20b3      	movs	r0, #179	; 0xb3
 8004cd8:	f7fd f9c0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004cdc:	2000      	movs	r0, #0
 8004cde:	f7fd f9bd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xBE);
 8004ce2:	20be      	movs	r0, #190	; 0xbe
 8004ce4:	f7fd f9ba 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ce8:	2000      	movs	r0, #0
 8004cea:	f7fd f9b7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC4);
 8004cee:	20c4      	movs	r0, #196	; 0xc4
 8004cf0:	f7fd f9b4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004cf4:	2000      	movs	r0, #0
 8004cf6:	f7fd f9b1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xCD);
 8004cfa:	20cd      	movs	r0, #205	; 0xcd
 8004cfc:	f7fd f9ae 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d00:	2000      	movs	r0, #0
 8004d02:	f7fd f9ab 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD3);
 8004d06:	20d3      	movs	r0, #211	; 0xd3
 8004d08:	f7fd f9a8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d0c:	2000      	movs	r0, #0
 8004d0e:	f7fd f9a5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xDD);
 8004d12:	20dd      	movs	r0, #221	; 0xdd
 8004d14:	f7fd f9a2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d18:	2000      	movs	r0, #0
 8004d1a:	f7fd f99f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 8004d1e:	20f3      	movs	r0, #243	; 0xf3
 8004d20:	f7fd f99c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d24:	2000      	movs	r0, #0
 8004d26:	f7fd f999 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0xE5);
 8004d2a:	20e5      	movs	r0, #229	; 0xe5
 8004d2c:	f7fd f972 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004d30:	2000      	movs	r0, #0
 8004d32:	f7fd f993 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d36:	2000      	movs	r0, #0
 8004d38:	f7fd f990 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d3c:	2000      	movs	r0, #0
 8004d3e:	f7fd f98d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d42:	2000      	movs	r0, #0
 8004d44:	f7fd f98a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x02);
 8004d48:	2002      	movs	r0, #2
 8004d4a:	f7fd f987 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d4e:	2000      	movs	r0, #0
 8004d50:	f7fd f984 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x29);
 8004d54:	2029      	movs	r0, #41	; 0x29
 8004d56:	f7fd f981 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d5a:	2000      	movs	r0, #0
 8004d5c:	f7fd f97e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x3C);
 8004d60:	203c      	movs	r0, #60	; 0x3c
 8004d62:	f7fd f97b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d66:	2000      	movs	r0, #0
 8004d68:	f7fd f978 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x4B);
 8004d6c:	204b      	movs	r0, #75	; 0x4b
 8004d6e:	f7fd f975 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d72:	2000      	movs	r0, #0
 8004d74:	f7fd f972 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x5D);
 8004d78:	205d      	movs	r0, #93	; 0x5d
 8004d7a:	f7fd f96f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d7e:	2000      	movs	r0, #0
 8004d80:	f7fd f96c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x74);
 8004d84:	2074      	movs	r0, #116	; 0x74
 8004d86:	f7fd f969 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d8a:	2000      	movs	r0, #0
 8004d8c:	f7fd f966 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x84);
 8004d90:	2084      	movs	r0, #132	; 0x84
 8004d92:	f7fd f963 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004d96:	2000      	movs	r0, #0
 8004d98:	f7fd f960 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x93);
 8004d9c:	2093      	movs	r0, #147	; 0x93
 8004d9e:	f7fd f95d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004da2:	2000      	movs	r0, #0
 8004da4:	f7fd f95a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xA2);
 8004da8:	20a2      	movs	r0, #162	; 0xa2
 8004daa:	f7fd f957 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004dae:	2000      	movs	r0, #0
 8004db0:	f7fd f954 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xB3);
 8004db4:	20b3      	movs	r0, #179	; 0xb3
 8004db6:	f7fd f951 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004dba:	2000      	movs	r0, #0
 8004dbc:	f7fd f94e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xBE);
 8004dc0:	20be      	movs	r0, #190	; 0xbe
 8004dc2:	f7fd f94b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004dc6:	2000      	movs	r0, #0
 8004dc8:	f7fd f948 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xC4);
 8004dcc:	20c4      	movs	r0, #196	; 0xc4
 8004dce:	f7fd f945 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004dd2:	2000      	movs	r0, #0
 8004dd4:	f7fd f942 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xCD);
 8004dd8:	20cd      	movs	r0, #205	; 0xcd
 8004dda:	f7fd f93f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004dde:	2000      	movs	r0, #0
 8004de0:	f7fd f93c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xD3);
 8004de4:	20d3      	movs	r0, #211	; 0xd3
 8004de6:	f7fd f939 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004dea:	2000      	movs	r0, #0
 8004dec:	f7fd f936 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xDC);
 8004df0:	20dc      	movs	r0, #220	; 0xdc
 8004df2:	f7fd f933 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004df6:	2000      	movs	r0, #0
 8004df8:	f7fd f930 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xF3);
 8004dfc:	20f3      	movs	r0, #243	; 0xf3
 8004dfe:	f7fd f92d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e02:	2000      	movs	r0, #0
 8004e04:	f7fd f92a 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE6);
 8004e08:	20e6      	movs	r0, #230	; 0xe6
 8004e0a:	f7fd f903 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x11);
 8004e0e:	2011      	movs	r0, #17
 8004e10:	f7fd f924 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e14:	2000      	movs	r0, #0
 8004e16:	f7fd f921 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x34);
 8004e1a:	2034      	movs	r0, #52	; 0x34
 8004e1c:	f7fd f91e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e20:	2000      	movs	r0, #0
 8004e22:	f7fd f91b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x56);
 8004e26:	2056      	movs	r0, #86	; 0x56
 8004e28:	f7fd f918 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e2c:	2000      	movs	r0, #0
 8004e2e:	f7fd f915 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x76);
 8004e32:	2076      	movs	r0, #118	; 0x76
 8004e34:	f7fd f912 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e38:	2000      	movs	r0, #0
 8004e3a:	f7fd f90f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x77);
 8004e3e:	2077      	movs	r0, #119	; 0x77
 8004e40:	f7fd f90c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e44:	2000      	movs	r0, #0
 8004e46:	f7fd f909 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x66);
 8004e4a:	2066      	movs	r0, #102	; 0x66
 8004e4c:	f7fd f906 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e50:	2000      	movs	r0, #0
 8004e52:	f7fd f903 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x88);
 8004e56:	2088      	movs	r0, #136	; 0x88
 8004e58:	f7fd f900 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e5c:	2000      	movs	r0, #0
 8004e5e:	f7fd f8fd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004e62:	2099      	movs	r0, #153	; 0x99
 8004e64:	f7fd f8fa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e68:	2000      	movs	r0, #0
 8004e6a:	f7fd f8f7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xBB);
 8004e6e:	20bb      	movs	r0, #187	; 0xbb
 8004e70:	f7fd f8f4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e74:	2000      	movs	r0, #0
 8004e76:	f7fd f8f1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004e7a:	2099      	movs	r0, #153	; 0x99
 8004e7c:	f7fd f8ee 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e80:	2000      	movs	r0, #0
 8004e82:	f7fd f8eb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x66);
 8004e86:	2066      	movs	r0, #102	; 0x66
 8004e88:	f7fd f8e8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e8c:	2000      	movs	r0, #0
 8004e8e:	f7fd f8e5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x55);
 8004e92:	2055      	movs	r0, #85	; 0x55
 8004e94:	f7fd f8e2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004e98:	2000      	movs	r0, #0
 8004e9a:	f7fd f8df 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x55);
 8004e9e:	2055      	movs	r0, #85	; 0x55
 8004ea0:	f7fd f8dc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ea4:	2000      	movs	r0, #0
 8004ea6:	f7fd f8d9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x45);
 8004eaa:	2045      	movs	r0, #69	; 0x45
 8004eac:	f7fd f8d6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004eb0:	2000      	movs	r0, #0
 8004eb2:	f7fd f8d3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x43);
 8004eb6:	2043      	movs	r0, #67	; 0x43
 8004eb8:	f7fd f8d0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ebc:	2000      	movs	r0, #0
 8004ebe:	f7fd f8cd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 8004ec2:	2044      	movs	r0, #68	; 0x44
 8004ec4:	f7fd f8ca 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ec8:	2000      	movs	r0, #0
 8004eca:	f7fd f8c7 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE7);
 8004ece:	20e7      	movs	r0, #231	; 0xe7
 8004ed0:	f7fd f8a0 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x32);
 8004ed4:	2032      	movs	r0, #50	; 0x32
 8004ed6:	f7fd f8c1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004eda:	2000      	movs	r0, #0
 8004edc:	f7fd f8be 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x55);
 8004ee0:	2055      	movs	r0, #85	; 0x55
 8004ee2:	f7fd f8bb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ee6:	2000      	movs	r0, #0
 8004ee8:	f7fd f8b8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x76);
 8004eec:	2076      	movs	r0, #118	; 0x76
 8004eee:	f7fd f8b5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ef2:	2000      	movs	r0, #0
 8004ef4:	f7fd f8b2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x66);
 8004ef8:	2066      	movs	r0, #102	; 0x66
 8004efa:	f7fd f8af 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004efe:	2000      	movs	r0, #0
 8004f00:	f7fd f8ac 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x67);
 8004f04:	2067      	movs	r0, #103	; 0x67
 8004f06:	f7fd f8a9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f0a:	2000      	movs	r0, #0
 8004f0c:	f7fd f8a6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x67);
 8004f10:	2067      	movs	r0, #103	; 0x67
 8004f12:	f7fd f8a3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f16:	2000      	movs	r0, #0
 8004f18:	f7fd f8a0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x87);
 8004f1c:	2087      	movs	r0, #135	; 0x87
 8004f1e:	f7fd f89d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f22:	2000      	movs	r0, #0
 8004f24:	f7fd f89a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004f28:	2099      	movs	r0, #153	; 0x99
 8004f2a:	f7fd f897 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f2e:	2000      	movs	r0, #0
 8004f30:	f7fd f894 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xBB);
 8004f34:	20bb      	movs	r0, #187	; 0xbb
 8004f36:	f7fd f891 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f3a:	2000      	movs	r0, #0
 8004f3c:	f7fd f88e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004f40:	2099      	movs	r0, #153	; 0x99
 8004f42:	f7fd f88b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f46:	2000      	movs	r0, #0
 8004f48:	f7fd f888 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x77);
 8004f4c:	2077      	movs	r0, #119	; 0x77
 8004f4e:	f7fd f885 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f52:	2000      	movs	r0, #0
 8004f54:	f7fd f882 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 8004f58:	2044      	movs	r0, #68	; 0x44
 8004f5a:	f7fd f87f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f5e:	2000      	movs	r0, #0
 8004f60:	f7fd f87c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x56);
 8004f64:	2056      	movs	r0, #86	; 0x56
 8004f66:	f7fd f879 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f6a:	2000      	movs	r0, #0
 8004f6c:	f7fd f876 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x23);
 8004f70:	2023      	movs	r0, #35	; 0x23
 8004f72:	f7fd f873 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f76:	2000      	movs	r0, #0
 8004f78:	f7fd f870 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x33);
 8004f7c:	2033      	movs	r0, #51	; 0x33
 8004f7e:	f7fd f86d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f82:	2000      	movs	r0, #0
 8004f84:	f7fd f86a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x45);
 8004f88:	2045      	movs	r0, #69	; 0x45
 8004f8a:	f7fd f867 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004f8e:	2000      	movs	r0, #0
 8004f90:	f7fd f864 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE8);
 8004f94:	20e8      	movs	r0, #232	; 0xe8
 8004f96:	f7fd f83d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8004f9a:	2000      	movs	r0, #0
 8004f9c:	f7fd f85e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fa0:	2000      	movs	r0, #0
 8004fa2:	f7fd f85b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8004fa6:	2099      	movs	r0, #153	; 0x99
 8004fa8:	f7fd f858 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fac:	2000      	movs	r0, #0
 8004fae:	f7fd f855 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x87);
 8004fb2:	2087      	movs	r0, #135	; 0x87
 8004fb4:	f7fd f852 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fb8:	2000      	movs	r0, #0
 8004fba:	f7fd f84f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x88);
 8004fbe:	2088      	movs	r0, #136	; 0x88
 8004fc0:	f7fd f84c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fc4:	2000      	movs	r0, #0
 8004fc6:	f7fd f849 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x77);
 8004fca:	2077      	movs	r0, #119	; 0x77
 8004fcc:	f7fd f846 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fd0:	2000      	movs	r0, #0
 8004fd2:	f7fd f843 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x66);
 8004fd6:	2066      	movs	r0, #102	; 0x66
 8004fd8:	f7fd f840 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fdc:	2000      	movs	r0, #0
 8004fde:	f7fd f83d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x88);
 8004fe2:	2088      	movs	r0, #136	; 0x88
 8004fe4:	f7fd f83a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004fe8:	2000      	movs	r0, #0
 8004fea:	f7fd f837 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xAA);
 8004fee:	20aa      	movs	r0, #170	; 0xaa
 8004ff0:	f7fd f834 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8004ff4:	2000      	movs	r0, #0
 8004ff6:	f7fd f831 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0xBB);
 8004ffa:	20bb      	movs	r0, #187	; 0xbb
 8004ffc:	f7fd f82e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005000:	2000      	movs	r0, #0
 8005002:	f7fd f82b 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x99);
 8005006:	2099      	movs	r0, #153	; 0x99
 8005008:	f7fd f828 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800500c:	2000      	movs	r0, #0
 800500e:	f7fd f825 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x66);
 8005012:	2066      	movs	r0, #102	; 0x66
 8005014:	f7fd f822 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005018:	2000      	movs	r0, #0
 800501a:	f7fd f81f 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x55);
 800501e:	2055      	movs	r0, #85	; 0x55
 8005020:	f7fd f81c 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005024:	2000      	movs	r0, #0
 8005026:	f7fd f819 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x55);
 800502a:	2055      	movs	r0, #85	; 0x55
 800502c:	f7fd f816 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005030:	2000      	movs	r0, #0
 8005032:	f7fd f813 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 8005036:	2044      	movs	r0, #68	; 0x44
 8005038:	f7fd f810 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800503c:	2000      	movs	r0, #0
 800503e:	f7fd f80d 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x44);
 8005042:	2044      	movs	r0, #68	; 0x44
 8005044:	f7fd f80a 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005048:	2000      	movs	r0, #0
 800504a:	f7fd f807 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x55);
 800504e:	2055      	movs	r0, #85	; 0x55
 8005050:	f7fd f804 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005054:	2000      	movs	r0, #0
 8005056:	f7fd f801 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xE9);
 800505a:	20e9      	movs	r0, #233	; 0xe9
 800505c:	f7fc ffda 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0xAA);
 8005060:	20aa      	movs	r0, #170	; 0xaa
 8005062:	f7fc fffb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005066:	2000      	movs	r0, #0
 8005068:	f7fc fff8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800506c:	2000      	movs	r0, #0
 800506e:	f7fc fff5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005072:	2000      	movs	r0, #0
 8005074:	f7fc fff2 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0x00);
 8005078:	2000      	movs	r0, #0
 800507a:	f7fc ffcb 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0xAA);
 800507e:	20aa      	movs	r0, #170	; 0xaa
 8005080:	f7fc ffec 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xCF);
 8005084:	20cf      	movs	r0, #207	; 0xcf
 8005086:	f7fc ffc5 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 800508a:	2000      	movs	r0, #0
 800508c:	f7fc ffe6 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005090:	2000      	movs	r0, #0
 8005092:	f7fc ffe3 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005096:	2000      	movs	r0, #0
 8005098:	f7fc ffe0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800509c:	2000      	movs	r0, #0
 800509e:	f7fc ffdd 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050a2:	2000      	movs	r0, #0
 80050a4:	f7fc ffda 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050a8:	2000      	movs	r0, #0
 80050aa:	f7fc ffd7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050ae:	2000      	movs	r0, #0
 80050b0:	f7fc ffd4 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050b4:	2000      	movs	r0, #0
 80050b6:	f7fc ffd1 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050ba:	2000      	movs	r0, #0
 80050bc:	f7fc ffce 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050c0:	2000      	movs	r0, #0
 80050c2:	f7fc ffcb 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050c6:	2000      	movs	r0, #0
 80050c8:	f7fc ffc8 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050cc:	2000      	movs	r0, #0
 80050ce:	f7fc ffc5 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050d2:	2000      	movs	r0, #0
 80050d4:	f7fc ffc2 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050d8:	2000      	movs	r0, #0
 80050da:	f7fc ffbf 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050de:	2000      	movs	r0, #0
 80050e0:	f7fc ffbc 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050e4:	2000      	movs	r0, #0
 80050e6:	f7fc ffb9 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 80050ea:	2000      	movs	r0, #0
 80050ec:	f7fc ffb6 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xF0);
 80050f0:	20f0      	movs	r0, #240	; 0xf0
 80050f2:	f7fc ff8f 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 80050f6:	2000      	movs	r0, #0
 80050f8:	f7fc ffb0 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x50);
 80050fc:	2050      	movs	r0, #80	; 0x50
 80050fe:	f7fc ffad 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005102:	2000      	movs	r0, #0
 8005104:	f7fc ffaa 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005108:	2000      	movs	r0, #0
 800510a:	f7fc ffa7 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 800510e:	2000      	movs	r0, #0
 8005110:	f7fc ffa4 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xF3);
 8005114:	20f3      	movs	r0, #243	; 0xf3
 8005116:	f7fc ff7d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 800511a:	2000      	movs	r0, #0
 800511c:	f7fc ff9e 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0xF9);
 8005120:	20f9      	movs	r0, #249	; 0xf9
 8005122:	f7fc ff77 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x06);
 8005126:	2006      	movs	r0, #6
 8005128:	f7fc ff98 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x10);
 800512c:	2010      	movs	r0, #16
 800512e:	f7fc ff95 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x29);
 8005132:	2029      	movs	r0, #41	; 0x29
 8005134:	f7fc ff92 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_DATAX(0x00);
 8005138:	2000      	movs	r0, #0
 800513a:	f7fc ff8f 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0x3A);
 800513e:	203a      	movs	r0, #58	; 0x3a
 8005140:	f7fc ff68 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x55);	//66
 8005144:	2055      	movs	r0, #85	; 0x55
 8005146:	f7fc ff89 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0x11);
 800514a:	2011      	movs	r0, #17
 800514c:	f7fc ff62 	bl	8002014 <LCD_WR_REG>
		HAL_Delay(100);
 8005150:	2064      	movs	r0, #100	; 0x64
 8005152:	f7fb fcb9 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0x29);
 8005156:	2029      	movs	r0, #41	; 0x29
 8005158:	f7fc ff5c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_REG(0x35);
 800515c:	2035      	movs	r0, #53	; 0x35
 800515e:	f7fc ff59 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x00);
 8005162:	2000      	movs	r0, #0
 8005164:	f7fc ff7a 	bl	800205c <LCD_WR_DATAX>

		LCD_WR_REG(0x51);
 8005168:	2051      	movs	r0, #81	; 0x51
 800516a:	f7fc ff53 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0xFF);
 800516e:	20ff      	movs	r0, #255	; 0xff
 8005170:	f7fc ff74 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x53);
 8005174:	2053      	movs	r0, #83	; 0x53
 8005176:	f7fc ff4d 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x2C);
 800517a:	202c      	movs	r0, #44	; 0x2c
 800517c:	f7fc ff6e 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x55);
 8005180:	2055      	movs	r0, #85	; 0x55
 8005182:	f7fc ff47 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATAX(0x82);
 8005186:	2082      	movs	r0, #130	; 0x82
 8005188:	f7fc ff68 	bl	800205c <LCD_WR_DATAX>
		LCD_WR_REG(0x2c);
 800518c:	202c      	movs	r0, #44	; 0x2c
 800518e:	f7fc ff41 	bl	8002014 <LCD_WR_REG>
 8005192:	f002 bca1 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0x5510) {
 8005196:	4b04      	ldr	r3, [pc, #16]	; (80051a8 <LCD_Init+0x1504>)
 8005198:	889b      	ldrh	r3, [r3, #4]
 800519a:	f245 5210 	movw	r2, #21776	; 0x5510
 800519e:	4293      	cmp	r3, r2
 80051a0:	f040 8782 	bne.w	80060a8 <LCD_Init+0x2404>
 80051a4:	e002      	b.n	80051ac <LCD_Init+0x1508>
 80051a6:	bf00      	nop
 80051a8:	200000a8 	.word	0x200000a8
		LCD_WriteReg(0xF000, 0x55);
 80051ac:	2155      	movs	r1, #85	; 0x55
 80051ae:	f44f 4070 	mov.w	r0, #61440	; 0xf000
 80051b2:	f7fc ffbb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF001, 0xAA);
 80051b6:	21aa      	movs	r1, #170	; 0xaa
 80051b8:	f24f 0001 	movw	r0, #61441	; 0xf001
 80051bc:	f7fc ffb6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF002, 0x52);
 80051c0:	2152      	movs	r1, #82	; 0x52
 80051c2:	f24f 0002 	movw	r0, #61442	; 0xf002
 80051c6:	f7fc ffb1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF003, 0x08);
 80051ca:	2108      	movs	r1, #8
 80051cc:	f24f 0003 	movw	r0, #61443	; 0xf003
 80051d0:	f7fc ffac 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF004, 0x01);
 80051d4:	2101      	movs	r1, #1
 80051d6:	f24f 0004 	movw	r0, #61444	; 0xf004
 80051da:	f7fc ffa7 	bl	800212c <LCD_WriteReg>
		//AVDD Set AVDD 5.2V
		LCD_WriteReg(0xB000, 0x0D);
 80051de:	210d      	movs	r1, #13
 80051e0:	f44f 4030 	mov.w	r0, #45056	; 0xb000
 80051e4:	f7fc ffa2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB001, 0x0D);
 80051e8:	210d      	movs	r1, #13
 80051ea:	f24b 0001 	movw	r0, #45057	; 0xb001
 80051ee:	f7fc ff9d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB002, 0x0D);
 80051f2:	210d      	movs	r1, #13
 80051f4:	f24b 0002 	movw	r0, #45058	; 0xb002
 80051f8:	f7fc ff98 	bl	800212c <LCD_WriteReg>
		//AVDD ratio
		LCD_WriteReg(0xB600, 0x34);
 80051fc:	2134      	movs	r1, #52	; 0x34
 80051fe:	f44f 4036 	mov.w	r0, #46592	; 0xb600
 8005202:	f7fc ff93 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB601, 0x34);
 8005206:	2134      	movs	r1, #52	; 0x34
 8005208:	f24b 6001 	movw	r0, #46593	; 0xb601
 800520c:	f7fc ff8e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB602, 0x34);
 8005210:	2134      	movs	r1, #52	; 0x34
 8005212:	f24b 6002 	movw	r0, #46594	; 0xb602
 8005216:	f7fc ff89 	bl	800212c <LCD_WriteReg>
		//AVEE -5.2V
		LCD_WriteReg(0xB100, 0x0D);
 800521a:	210d      	movs	r1, #13
 800521c:	f44f 4031 	mov.w	r0, #45312	; 0xb100
 8005220:	f7fc ff84 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB101, 0x0D);
 8005224:	210d      	movs	r1, #13
 8005226:	f24b 1001 	movw	r0, #45313	; 0xb101
 800522a:	f7fc ff7f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB102, 0x0D);
 800522e:	210d      	movs	r1, #13
 8005230:	f24b 1002 	movw	r0, #45314	; 0xb102
 8005234:	f7fc ff7a 	bl	800212c <LCD_WriteReg>
		//AVEE ratio
		LCD_WriteReg(0xB700, 0x34);
 8005238:	2134      	movs	r1, #52	; 0x34
 800523a:	f44f 4037 	mov.w	r0, #46848	; 0xb700
 800523e:	f7fc ff75 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB701, 0x34);
 8005242:	2134      	movs	r1, #52	; 0x34
 8005244:	f24b 7001 	movw	r0, #46849	; 0xb701
 8005248:	f7fc ff70 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB702, 0x34);
 800524c:	2134      	movs	r1, #52	; 0x34
 800524e:	f24b 7002 	movw	r0, #46850	; 0xb702
 8005252:	f7fc ff6b 	bl	800212c <LCD_WriteReg>
		//VCL -2.5V
		LCD_WriteReg(0xB200, 0x00);
 8005256:	2100      	movs	r1, #0
 8005258:	f44f 4032 	mov.w	r0, #45568	; 0xb200
 800525c:	f7fc ff66 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB201, 0x00);
 8005260:	2100      	movs	r1, #0
 8005262:	f24b 2001 	movw	r0, #45569	; 0xb201
 8005266:	f7fc ff61 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB202, 0x00);
 800526a:	2100      	movs	r1, #0
 800526c:	f24b 2002 	movw	r0, #45570	; 0xb202
 8005270:	f7fc ff5c 	bl	800212c <LCD_WriteReg>
		//VCL ratio
		LCD_WriteReg(0xB800, 0x24);
 8005274:	2124      	movs	r1, #36	; 0x24
 8005276:	f44f 4038 	mov.w	r0, #47104	; 0xb800
 800527a:	f7fc ff57 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB801, 0x24);
 800527e:	2124      	movs	r1, #36	; 0x24
 8005280:	f64b 0001 	movw	r0, #47105	; 0xb801
 8005284:	f7fc ff52 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB802, 0x24);
 8005288:	2124      	movs	r1, #36	; 0x24
 800528a:	f64b 0002 	movw	r0, #47106	; 0xb802
 800528e:	f7fc ff4d 	bl	800212c <LCD_WriteReg>
		//VGH 15V (Free pump)
		LCD_WriteReg(0xBF00, 0x01);
 8005292:	2101      	movs	r1, #1
 8005294:	f44f 403f 	mov.w	r0, #48896	; 0xbf00
 8005298:	f7fc ff48 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB300, 0x0F);
 800529c:	210f      	movs	r1, #15
 800529e:	f44f 4033 	mov.w	r0, #45824	; 0xb300
 80052a2:	f7fc ff43 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB301, 0x0F);
 80052a6:	210f      	movs	r1, #15
 80052a8:	f24b 3001 	movw	r0, #45825	; 0xb301
 80052ac:	f7fc ff3e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB302, 0x0F);
 80052b0:	210f      	movs	r1, #15
 80052b2:	f24b 3002 	movw	r0, #45826	; 0xb302
 80052b6:	f7fc ff39 	bl	800212c <LCD_WriteReg>
		//VGH ratio
		LCD_WriteReg(0xB900, 0x34);
 80052ba:	2134      	movs	r1, #52	; 0x34
 80052bc:	f44f 4039 	mov.w	r0, #47360	; 0xb900
 80052c0:	f7fc ff34 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB901, 0x34);
 80052c4:	2134      	movs	r1, #52	; 0x34
 80052c6:	f64b 1001 	movw	r0, #47361	; 0xb901
 80052ca:	f7fc ff2f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB902, 0x34);
 80052ce:	2134      	movs	r1, #52	; 0x34
 80052d0:	f64b 1002 	movw	r0, #47362	; 0xb902
 80052d4:	f7fc ff2a 	bl	800212c <LCD_WriteReg>
		//VGL_REG -10V
		LCD_WriteReg(0xB500, 0x08);
 80052d8:	2108      	movs	r1, #8
 80052da:	f44f 4035 	mov.w	r0, #46336	; 0xb500
 80052de:	f7fc ff25 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB501, 0x08);
 80052e2:	2108      	movs	r1, #8
 80052e4:	f24b 5001 	movw	r0, #46337	; 0xb501
 80052e8:	f7fc ff20 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB502, 0x08);
 80052ec:	2108      	movs	r1, #8
 80052ee:	f24b 5002 	movw	r0, #46338	; 0xb502
 80052f2:	f7fc ff1b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xC200, 0x03);
 80052f6:	2103      	movs	r1, #3
 80052f8:	f44f 4042 	mov.w	r0, #49664	; 0xc200
 80052fc:	f7fc ff16 	bl	800212c <LCD_WriteReg>
		//VGLX ratio
		LCD_WriteReg(0xBA00, 0x24);
 8005300:	2124      	movs	r1, #36	; 0x24
 8005302:	f44f 403a 	mov.w	r0, #47616	; 0xba00
 8005306:	f7fc ff11 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBA01, 0x24);
 800530a:	2124      	movs	r1, #36	; 0x24
 800530c:	f64b 2001 	movw	r0, #47617	; 0xba01
 8005310:	f7fc ff0c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBA02, 0x24);
 8005314:	2124      	movs	r1, #36	; 0x24
 8005316:	f64b 2002 	movw	r0, #47618	; 0xba02
 800531a:	f7fc ff07 	bl	800212c <LCD_WriteReg>
		//VGMP/VGSP 4.5V/0V
		LCD_WriteReg(0xBC00, 0x00);
 800531e:	2100      	movs	r1, #0
 8005320:	f44f 403c 	mov.w	r0, #48128	; 0xbc00
 8005324:	f7fc ff02 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBC01, 0x78);
 8005328:	2178      	movs	r1, #120	; 0x78
 800532a:	f64b 4001 	movw	r0, #48129	; 0xbc01
 800532e:	f7fc fefd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBC02, 0x00);
 8005332:	2100      	movs	r1, #0
 8005334:	f64b 4002 	movw	r0, #48130	; 0xbc02
 8005338:	f7fc fef8 	bl	800212c <LCD_WriteReg>
		//VGMN/VGSN -4.5V/0V
		LCD_WriteReg(0xBD00, 0x00);
 800533c:	2100      	movs	r1, #0
 800533e:	f44f 403d 	mov.w	r0, #48384	; 0xbd00
 8005342:	f7fc fef3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBD01, 0x78);
 8005346:	2178      	movs	r1, #120	; 0x78
 8005348:	f64b 5001 	movw	r0, #48385	; 0xbd01
 800534c:	f7fc feee 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBD02, 0x00);
 8005350:	2100      	movs	r1, #0
 8005352:	f64b 5002 	movw	r0, #48386	; 0xbd02
 8005356:	f7fc fee9 	bl	800212c <LCD_WriteReg>
		//VCOM
		LCD_WriteReg(0xBE00, 0x00);
 800535a:	2100      	movs	r1, #0
 800535c:	f44f 403e 	mov.w	r0, #48640	; 0xbe00
 8005360:	f7fc fee4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBE01, 0x64);
 8005364:	2164      	movs	r1, #100	; 0x64
 8005366:	f64b 6001 	movw	r0, #48641	; 0xbe01
 800536a:	f7fc fedf 	bl	800212c <LCD_WriteReg>
		//Gamma Setting
		LCD_WriteReg(0xD100, 0x00);
 800536e:	2100      	movs	r1, #0
 8005370:	f44f 4051 	mov.w	r0, #53504	; 0xd100
 8005374:	f7fc feda 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD101, 0x33);
 8005378:	2133      	movs	r1, #51	; 0x33
 800537a:	f24d 1001 	movw	r0, #53505	; 0xd101
 800537e:	f7fc fed5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD102, 0x00);
 8005382:	2100      	movs	r1, #0
 8005384:	f24d 1002 	movw	r0, #53506	; 0xd102
 8005388:	f7fc fed0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD103, 0x34);
 800538c:	2134      	movs	r1, #52	; 0x34
 800538e:	f24d 1003 	movw	r0, #53507	; 0xd103
 8005392:	f7fc fecb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD104, 0x00);
 8005396:	2100      	movs	r1, #0
 8005398:	f24d 1004 	movw	r0, #53508	; 0xd104
 800539c:	f7fc fec6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD105, 0x3A);
 80053a0:	213a      	movs	r1, #58	; 0x3a
 80053a2:	f24d 1005 	movw	r0, #53509	; 0xd105
 80053a6:	f7fc fec1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD106, 0x00);
 80053aa:	2100      	movs	r1, #0
 80053ac:	f24d 1006 	movw	r0, #53510	; 0xd106
 80053b0:	f7fc febc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD107, 0x4A);
 80053b4:	214a      	movs	r1, #74	; 0x4a
 80053b6:	f24d 1007 	movw	r0, #53511	; 0xd107
 80053ba:	f7fc feb7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD108, 0x00);
 80053be:	2100      	movs	r1, #0
 80053c0:	f24d 1008 	movw	r0, #53512	; 0xd108
 80053c4:	f7fc feb2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD109, 0x5C);
 80053c8:	215c      	movs	r1, #92	; 0x5c
 80053ca:	f24d 1009 	movw	r0, #53513	; 0xd109
 80053ce:	f7fc fead 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD10A, 0x00);
 80053d2:	2100      	movs	r1, #0
 80053d4:	f24d 100a 	movw	r0, #53514	; 0xd10a
 80053d8:	f7fc fea8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD10B, 0x81);
 80053dc:	2181      	movs	r1, #129	; 0x81
 80053de:	f24d 100b 	movw	r0, #53515	; 0xd10b
 80053e2:	f7fc fea3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD10C, 0x00);
 80053e6:	2100      	movs	r1, #0
 80053e8:	f24d 100c 	movw	r0, #53516	; 0xd10c
 80053ec:	f7fc fe9e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD10D, 0xA6);
 80053f0:	21a6      	movs	r1, #166	; 0xa6
 80053f2:	f24d 100d 	movw	r0, #53517	; 0xd10d
 80053f6:	f7fc fe99 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD10E, 0x00);
 80053fa:	2100      	movs	r1, #0
 80053fc:	f24d 100e 	movw	r0, #53518	; 0xd10e
 8005400:	f7fc fe94 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD10F, 0xE5);
 8005404:	21e5      	movs	r1, #229	; 0xe5
 8005406:	f24d 100f 	movw	r0, #53519	; 0xd10f
 800540a:	f7fc fe8f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD110, 0x01);
 800540e:	2101      	movs	r1, #1
 8005410:	f24d 1010 	movw	r0, #53520	; 0xd110
 8005414:	f7fc fe8a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD111, 0x13);
 8005418:	2113      	movs	r1, #19
 800541a:	f24d 1011 	movw	r0, #53521	; 0xd111
 800541e:	f7fc fe85 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD112, 0x01);
 8005422:	2101      	movs	r1, #1
 8005424:	f24d 1012 	movw	r0, #53522	; 0xd112
 8005428:	f7fc fe80 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD113, 0x54);
 800542c:	2154      	movs	r1, #84	; 0x54
 800542e:	f24d 1013 	movw	r0, #53523	; 0xd113
 8005432:	f7fc fe7b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD114, 0x01);
 8005436:	2101      	movs	r1, #1
 8005438:	f24d 1014 	movw	r0, #53524	; 0xd114
 800543c:	f7fc fe76 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD115, 0x82);
 8005440:	2182      	movs	r1, #130	; 0x82
 8005442:	f24d 1015 	movw	r0, #53525	; 0xd115
 8005446:	f7fc fe71 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD116, 0x01);
 800544a:	2101      	movs	r1, #1
 800544c:	f24d 1016 	movw	r0, #53526	; 0xd116
 8005450:	f7fc fe6c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD117, 0xCA);
 8005454:	21ca      	movs	r1, #202	; 0xca
 8005456:	f24d 1017 	movw	r0, #53527	; 0xd117
 800545a:	f7fc fe67 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD118, 0x02);
 800545e:	2102      	movs	r1, #2
 8005460:	f24d 1018 	movw	r0, #53528	; 0xd118
 8005464:	f7fc fe62 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD119, 0x00);
 8005468:	2100      	movs	r1, #0
 800546a:	f24d 1019 	movw	r0, #53529	; 0xd119
 800546e:	f7fc fe5d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD11A, 0x02);
 8005472:	2102      	movs	r1, #2
 8005474:	f24d 101a 	movw	r0, #53530	; 0xd11a
 8005478:	f7fc fe58 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD11B, 0x01);
 800547c:	2101      	movs	r1, #1
 800547e:	f24d 101b 	movw	r0, #53531	; 0xd11b
 8005482:	f7fc fe53 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD11C, 0x02);
 8005486:	2102      	movs	r1, #2
 8005488:	f24d 101c 	movw	r0, #53532	; 0xd11c
 800548c:	f7fc fe4e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD11D, 0x34);
 8005490:	2134      	movs	r1, #52	; 0x34
 8005492:	f24d 101d 	movw	r0, #53533	; 0xd11d
 8005496:	f7fc fe49 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD11E, 0x02);
 800549a:	2102      	movs	r1, #2
 800549c:	f24d 101e 	movw	r0, #53534	; 0xd11e
 80054a0:	f7fc fe44 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD11F, 0x67);
 80054a4:	2167      	movs	r1, #103	; 0x67
 80054a6:	f24d 101f 	movw	r0, #53535	; 0xd11f
 80054aa:	f7fc fe3f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD120, 0x02);
 80054ae:	2102      	movs	r1, #2
 80054b0:	f24d 1020 	movw	r0, #53536	; 0xd120
 80054b4:	f7fc fe3a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD121, 0x84);
 80054b8:	2184      	movs	r1, #132	; 0x84
 80054ba:	f24d 1021 	movw	r0, #53537	; 0xd121
 80054be:	f7fc fe35 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD122, 0x02);
 80054c2:	2102      	movs	r1, #2
 80054c4:	f24d 1022 	movw	r0, #53538	; 0xd122
 80054c8:	f7fc fe30 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD123, 0xA4);
 80054cc:	21a4      	movs	r1, #164	; 0xa4
 80054ce:	f24d 1023 	movw	r0, #53539	; 0xd123
 80054d2:	f7fc fe2b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD124, 0x02);
 80054d6:	2102      	movs	r1, #2
 80054d8:	f24d 1024 	movw	r0, #53540	; 0xd124
 80054dc:	f7fc fe26 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD125, 0xB7);
 80054e0:	21b7      	movs	r1, #183	; 0xb7
 80054e2:	f24d 1025 	movw	r0, #53541	; 0xd125
 80054e6:	f7fc fe21 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD126, 0x02);
 80054ea:	2102      	movs	r1, #2
 80054ec:	f24d 1026 	movw	r0, #53542	; 0xd126
 80054f0:	f7fc fe1c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD127, 0xCF);
 80054f4:	21cf      	movs	r1, #207	; 0xcf
 80054f6:	f24d 1027 	movw	r0, #53543	; 0xd127
 80054fa:	f7fc fe17 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD128, 0x02);
 80054fe:	2102      	movs	r1, #2
 8005500:	f24d 1028 	movw	r0, #53544	; 0xd128
 8005504:	f7fc fe12 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD129, 0xDE);
 8005508:	21de      	movs	r1, #222	; 0xde
 800550a:	f24d 1029 	movw	r0, #53545	; 0xd129
 800550e:	f7fc fe0d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD12A, 0x02);
 8005512:	2102      	movs	r1, #2
 8005514:	f24d 102a 	movw	r0, #53546	; 0xd12a
 8005518:	f7fc fe08 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD12B, 0xF2);
 800551c:	21f2      	movs	r1, #242	; 0xf2
 800551e:	f24d 102b 	movw	r0, #53547	; 0xd12b
 8005522:	f7fc fe03 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD12C, 0x02);
 8005526:	2102      	movs	r1, #2
 8005528:	f24d 102c 	movw	r0, #53548	; 0xd12c
 800552c:	f7fc fdfe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD12D, 0xFE);
 8005530:	21fe      	movs	r1, #254	; 0xfe
 8005532:	f24d 102d 	movw	r0, #53549	; 0xd12d
 8005536:	f7fc fdf9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD12E, 0x03);
 800553a:	2103      	movs	r1, #3
 800553c:	f24d 102e 	movw	r0, #53550	; 0xd12e
 8005540:	f7fc fdf4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD12F, 0x10);
 8005544:	2110      	movs	r1, #16
 8005546:	f24d 102f 	movw	r0, #53551	; 0xd12f
 800554a:	f7fc fdef 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD130, 0x03);
 800554e:	2103      	movs	r1, #3
 8005550:	f24d 1030 	movw	r0, #53552	; 0xd130
 8005554:	f7fc fdea 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD131, 0x33);
 8005558:	2133      	movs	r1, #51	; 0x33
 800555a:	f24d 1031 	movw	r0, #53553	; 0xd131
 800555e:	f7fc fde5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD132, 0x03);
 8005562:	2103      	movs	r1, #3
 8005564:	f24d 1032 	movw	r0, #53554	; 0xd132
 8005568:	f7fc fde0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD133, 0x6D);
 800556c:	216d      	movs	r1, #109	; 0x6d
 800556e:	f24d 1033 	movw	r0, #53555	; 0xd133
 8005572:	f7fc fddb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD200, 0x00);
 8005576:	2100      	movs	r1, #0
 8005578:	f44f 4052 	mov.w	r0, #53760	; 0xd200
 800557c:	f7fc fdd6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD201, 0x33);
 8005580:	2133      	movs	r1, #51	; 0x33
 8005582:	f24d 2001 	movw	r0, #53761	; 0xd201
 8005586:	f7fc fdd1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD202, 0x00);
 800558a:	2100      	movs	r1, #0
 800558c:	f24d 2002 	movw	r0, #53762	; 0xd202
 8005590:	f7fc fdcc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD203, 0x34);
 8005594:	2134      	movs	r1, #52	; 0x34
 8005596:	f24d 2003 	movw	r0, #53763	; 0xd203
 800559a:	f7fc fdc7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD204, 0x00);
 800559e:	2100      	movs	r1, #0
 80055a0:	f24d 2004 	movw	r0, #53764	; 0xd204
 80055a4:	f7fc fdc2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD205, 0x3A);
 80055a8:	213a      	movs	r1, #58	; 0x3a
 80055aa:	f24d 2005 	movw	r0, #53765	; 0xd205
 80055ae:	f7fc fdbd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD206, 0x00);
 80055b2:	2100      	movs	r1, #0
 80055b4:	f24d 2006 	movw	r0, #53766	; 0xd206
 80055b8:	f7fc fdb8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD207, 0x4A);
 80055bc:	214a      	movs	r1, #74	; 0x4a
 80055be:	f24d 2007 	movw	r0, #53767	; 0xd207
 80055c2:	f7fc fdb3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD208, 0x00);
 80055c6:	2100      	movs	r1, #0
 80055c8:	f24d 2008 	movw	r0, #53768	; 0xd208
 80055cc:	f7fc fdae 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD209, 0x5C);
 80055d0:	215c      	movs	r1, #92	; 0x5c
 80055d2:	f24d 2009 	movw	r0, #53769	; 0xd209
 80055d6:	f7fc fda9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD20A, 0x00);
 80055da:	2100      	movs	r1, #0
 80055dc:	f24d 200a 	movw	r0, #53770	; 0xd20a
 80055e0:	f7fc fda4 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0xD20B, 0x81);
 80055e4:	2181      	movs	r1, #129	; 0x81
 80055e6:	f24d 200b 	movw	r0, #53771	; 0xd20b
 80055ea:	f7fc fd9f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD20C, 0x00);
 80055ee:	2100      	movs	r1, #0
 80055f0:	f24d 200c 	movw	r0, #53772	; 0xd20c
 80055f4:	f7fc fd9a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD20D, 0xA6);
 80055f8:	21a6      	movs	r1, #166	; 0xa6
 80055fa:	f24d 200d 	movw	r0, #53773	; 0xd20d
 80055fe:	f7fc fd95 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD20E, 0x00);
 8005602:	2100      	movs	r1, #0
 8005604:	f24d 200e 	movw	r0, #53774	; 0xd20e
 8005608:	f7fc fd90 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD20F, 0xE5);
 800560c:	21e5      	movs	r1, #229	; 0xe5
 800560e:	f24d 200f 	movw	r0, #53775	; 0xd20f
 8005612:	f7fc fd8b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD210, 0x01);
 8005616:	2101      	movs	r1, #1
 8005618:	f24d 2010 	movw	r0, #53776	; 0xd210
 800561c:	f7fc fd86 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD211, 0x13);
 8005620:	2113      	movs	r1, #19
 8005622:	f24d 2011 	movw	r0, #53777	; 0xd211
 8005626:	f7fc fd81 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD212, 0x01);
 800562a:	2101      	movs	r1, #1
 800562c:	f24d 2012 	movw	r0, #53778	; 0xd212
 8005630:	f7fc fd7c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD213, 0x54);
 8005634:	2154      	movs	r1, #84	; 0x54
 8005636:	f24d 2013 	movw	r0, #53779	; 0xd213
 800563a:	f7fc fd77 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD214, 0x01);
 800563e:	2101      	movs	r1, #1
 8005640:	f24d 2014 	movw	r0, #53780	; 0xd214
 8005644:	f7fc fd72 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD215, 0x82);
 8005648:	2182      	movs	r1, #130	; 0x82
 800564a:	f24d 2015 	movw	r0, #53781	; 0xd215
 800564e:	f7fc fd6d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD216, 0x01);
 8005652:	2101      	movs	r1, #1
 8005654:	f24d 2016 	movw	r0, #53782	; 0xd216
 8005658:	f7fc fd68 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD217, 0xCA);
 800565c:	21ca      	movs	r1, #202	; 0xca
 800565e:	f24d 2017 	movw	r0, #53783	; 0xd217
 8005662:	f7fc fd63 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD218, 0x02);
 8005666:	2102      	movs	r1, #2
 8005668:	f24d 2018 	movw	r0, #53784	; 0xd218
 800566c:	f7fc fd5e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD219, 0x00);
 8005670:	2100      	movs	r1, #0
 8005672:	f24d 2019 	movw	r0, #53785	; 0xd219
 8005676:	f7fc fd59 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD21A, 0x02);
 800567a:	2102      	movs	r1, #2
 800567c:	f24d 201a 	movw	r0, #53786	; 0xd21a
 8005680:	f7fc fd54 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD21B, 0x01);
 8005684:	2101      	movs	r1, #1
 8005686:	f24d 201b 	movw	r0, #53787	; 0xd21b
 800568a:	f7fc fd4f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD21C, 0x02);
 800568e:	2102      	movs	r1, #2
 8005690:	f24d 201c 	movw	r0, #53788	; 0xd21c
 8005694:	f7fc fd4a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD21D, 0x34);
 8005698:	2134      	movs	r1, #52	; 0x34
 800569a:	f24d 201d 	movw	r0, #53789	; 0xd21d
 800569e:	f7fc fd45 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD21E, 0x02);
 80056a2:	2102      	movs	r1, #2
 80056a4:	f24d 201e 	movw	r0, #53790	; 0xd21e
 80056a8:	f7fc fd40 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD21F, 0x67);
 80056ac:	2167      	movs	r1, #103	; 0x67
 80056ae:	f24d 201f 	movw	r0, #53791	; 0xd21f
 80056b2:	f7fc fd3b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD220, 0x02);
 80056b6:	2102      	movs	r1, #2
 80056b8:	f24d 2020 	movw	r0, #53792	; 0xd220
 80056bc:	f7fc fd36 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD221, 0x84);
 80056c0:	2184      	movs	r1, #132	; 0x84
 80056c2:	f24d 2021 	movw	r0, #53793	; 0xd221
 80056c6:	f7fc fd31 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD222, 0x02);
 80056ca:	2102      	movs	r1, #2
 80056cc:	f24d 2022 	movw	r0, #53794	; 0xd222
 80056d0:	f7fc fd2c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD223, 0xA4);
 80056d4:	21a4      	movs	r1, #164	; 0xa4
 80056d6:	f24d 2023 	movw	r0, #53795	; 0xd223
 80056da:	f7fc fd27 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD224, 0x02);
 80056de:	2102      	movs	r1, #2
 80056e0:	f24d 2024 	movw	r0, #53796	; 0xd224
 80056e4:	f7fc fd22 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD225, 0xB7);
 80056e8:	21b7      	movs	r1, #183	; 0xb7
 80056ea:	f24d 2025 	movw	r0, #53797	; 0xd225
 80056ee:	f7fc fd1d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD226, 0x02);
 80056f2:	2102      	movs	r1, #2
 80056f4:	f24d 2026 	movw	r0, #53798	; 0xd226
 80056f8:	f7fc fd18 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD227, 0xCF);
 80056fc:	21cf      	movs	r1, #207	; 0xcf
 80056fe:	f24d 2027 	movw	r0, #53799	; 0xd227
 8005702:	f7fc fd13 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD228, 0x02);
 8005706:	2102      	movs	r1, #2
 8005708:	f24d 2028 	movw	r0, #53800	; 0xd228
 800570c:	f7fc fd0e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD229, 0xDE);
 8005710:	21de      	movs	r1, #222	; 0xde
 8005712:	f24d 2029 	movw	r0, #53801	; 0xd229
 8005716:	f7fc fd09 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD22A, 0x02);
 800571a:	2102      	movs	r1, #2
 800571c:	f24d 202a 	movw	r0, #53802	; 0xd22a
 8005720:	f7fc fd04 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD22B, 0xF2);
 8005724:	21f2      	movs	r1, #242	; 0xf2
 8005726:	f24d 202b 	movw	r0, #53803	; 0xd22b
 800572a:	f7fc fcff 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD22C, 0x02);
 800572e:	2102      	movs	r1, #2
 8005730:	f24d 202c 	movw	r0, #53804	; 0xd22c
 8005734:	f7fc fcfa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD22D, 0xFE);
 8005738:	21fe      	movs	r1, #254	; 0xfe
 800573a:	f24d 202d 	movw	r0, #53805	; 0xd22d
 800573e:	f7fc fcf5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD22E, 0x03);
 8005742:	2103      	movs	r1, #3
 8005744:	f24d 202e 	movw	r0, #53806	; 0xd22e
 8005748:	f7fc fcf0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD22F, 0x10);
 800574c:	2110      	movs	r1, #16
 800574e:	f24d 202f 	movw	r0, #53807	; 0xd22f
 8005752:	f7fc fceb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD230, 0x03);
 8005756:	2103      	movs	r1, #3
 8005758:	f24d 2030 	movw	r0, #53808	; 0xd230
 800575c:	f7fc fce6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD231, 0x33);
 8005760:	2133      	movs	r1, #51	; 0x33
 8005762:	f24d 2031 	movw	r0, #53809	; 0xd231
 8005766:	f7fc fce1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD232, 0x03);
 800576a:	2103      	movs	r1, #3
 800576c:	f24d 2032 	movw	r0, #53810	; 0xd232
 8005770:	f7fc fcdc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD233, 0x6D);
 8005774:	216d      	movs	r1, #109	; 0x6d
 8005776:	f24d 2033 	movw	r0, #53811	; 0xd233
 800577a:	f7fc fcd7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD300, 0x00);
 800577e:	2100      	movs	r1, #0
 8005780:	f44f 4053 	mov.w	r0, #54016	; 0xd300
 8005784:	f7fc fcd2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD301, 0x33);
 8005788:	2133      	movs	r1, #51	; 0x33
 800578a:	f24d 3001 	movw	r0, #54017	; 0xd301
 800578e:	f7fc fccd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD302, 0x00);
 8005792:	2100      	movs	r1, #0
 8005794:	f24d 3002 	movw	r0, #54018	; 0xd302
 8005798:	f7fc fcc8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD303, 0x34);
 800579c:	2134      	movs	r1, #52	; 0x34
 800579e:	f24d 3003 	movw	r0, #54019	; 0xd303
 80057a2:	f7fc fcc3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD304, 0x00);
 80057a6:	2100      	movs	r1, #0
 80057a8:	f24d 3004 	movw	r0, #54020	; 0xd304
 80057ac:	f7fc fcbe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD305, 0x3A);
 80057b0:	213a      	movs	r1, #58	; 0x3a
 80057b2:	f24d 3005 	movw	r0, #54021	; 0xd305
 80057b6:	f7fc fcb9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD306, 0x00);
 80057ba:	2100      	movs	r1, #0
 80057bc:	f24d 3006 	movw	r0, #54022	; 0xd306
 80057c0:	f7fc fcb4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD307, 0x4A);
 80057c4:	214a      	movs	r1, #74	; 0x4a
 80057c6:	f24d 3007 	movw	r0, #54023	; 0xd307
 80057ca:	f7fc fcaf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD308, 0x00);
 80057ce:	2100      	movs	r1, #0
 80057d0:	f24d 3008 	movw	r0, #54024	; 0xd308
 80057d4:	f7fc fcaa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD309, 0x5C);
 80057d8:	215c      	movs	r1, #92	; 0x5c
 80057da:	f24d 3009 	movw	r0, #54025	; 0xd309
 80057de:	f7fc fca5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD30A, 0x00);
 80057e2:	2100      	movs	r1, #0
 80057e4:	f24d 300a 	movw	r0, #54026	; 0xd30a
 80057e8:	f7fc fca0 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0xD30B, 0x81);
 80057ec:	2181      	movs	r1, #129	; 0x81
 80057ee:	f24d 300b 	movw	r0, #54027	; 0xd30b
 80057f2:	f7fc fc9b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD30C, 0x00);
 80057f6:	2100      	movs	r1, #0
 80057f8:	f24d 300c 	movw	r0, #54028	; 0xd30c
 80057fc:	f7fc fc96 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD30D, 0xA6);
 8005800:	21a6      	movs	r1, #166	; 0xa6
 8005802:	f24d 300d 	movw	r0, #54029	; 0xd30d
 8005806:	f7fc fc91 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD30E, 0x00);
 800580a:	2100      	movs	r1, #0
 800580c:	f24d 300e 	movw	r0, #54030	; 0xd30e
 8005810:	f7fc fc8c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD30F, 0xE5);
 8005814:	21e5      	movs	r1, #229	; 0xe5
 8005816:	f24d 300f 	movw	r0, #54031	; 0xd30f
 800581a:	f7fc fc87 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD310, 0x01);
 800581e:	2101      	movs	r1, #1
 8005820:	f24d 3010 	movw	r0, #54032	; 0xd310
 8005824:	f7fc fc82 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD311, 0x13);
 8005828:	2113      	movs	r1, #19
 800582a:	f24d 3011 	movw	r0, #54033	; 0xd311
 800582e:	f7fc fc7d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD312, 0x01);
 8005832:	2101      	movs	r1, #1
 8005834:	f24d 3012 	movw	r0, #54034	; 0xd312
 8005838:	f7fc fc78 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD313, 0x54);
 800583c:	2154      	movs	r1, #84	; 0x54
 800583e:	f24d 3013 	movw	r0, #54035	; 0xd313
 8005842:	f7fc fc73 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD314, 0x01);
 8005846:	2101      	movs	r1, #1
 8005848:	f24d 3014 	movw	r0, #54036	; 0xd314
 800584c:	f7fc fc6e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD315, 0x82);
 8005850:	2182      	movs	r1, #130	; 0x82
 8005852:	f24d 3015 	movw	r0, #54037	; 0xd315
 8005856:	f7fc fc69 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD316, 0x01);
 800585a:	2101      	movs	r1, #1
 800585c:	f24d 3016 	movw	r0, #54038	; 0xd316
 8005860:	f7fc fc64 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD317, 0xCA);
 8005864:	21ca      	movs	r1, #202	; 0xca
 8005866:	f24d 3017 	movw	r0, #54039	; 0xd317
 800586a:	f7fc fc5f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD318, 0x02);
 800586e:	2102      	movs	r1, #2
 8005870:	f24d 3018 	movw	r0, #54040	; 0xd318
 8005874:	f7fc fc5a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD319, 0x00);
 8005878:	2100      	movs	r1, #0
 800587a:	f24d 3019 	movw	r0, #54041	; 0xd319
 800587e:	f7fc fc55 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD31A, 0x02);
 8005882:	2102      	movs	r1, #2
 8005884:	f24d 301a 	movw	r0, #54042	; 0xd31a
 8005888:	f7fc fc50 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD31B, 0x01);
 800588c:	2101      	movs	r1, #1
 800588e:	f24d 301b 	movw	r0, #54043	; 0xd31b
 8005892:	f7fc fc4b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD31C, 0x02);
 8005896:	2102      	movs	r1, #2
 8005898:	f24d 301c 	movw	r0, #54044	; 0xd31c
 800589c:	f7fc fc46 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD31D, 0x34);
 80058a0:	2134      	movs	r1, #52	; 0x34
 80058a2:	f24d 301d 	movw	r0, #54045	; 0xd31d
 80058a6:	f7fc fc41 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD31E, 0x02);
 80058aa:	2102      	movs	r1, #2
 80058ac:	f24d 301e 	movw	r0, #54046	; 0xd31e
 80058b0:	f7fc fc3c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD31F, 0x67);
 80058b4:	2167      	movs	r1, #103	; 0x67
 80058b6:	f24d 301f 	movw	r0, #54047	; 0xd31f
 80058ba:	f7fc fc37 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD320, 0x02);
 80058be:	2102      	movs	r1, #2
 80058c0:	f24d 3020 	movw	r0, #54048	; 0xd320
 80058c4:	f7fc fc32 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD321, 0x84);
 80058c8:	2184      	movs	r1, #132	; 0x84
 80058ca:	f24d 3021 	movw	r0, #54049	; 0xd321
 80058ce:	f7fc fc2d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD322, 0x02);
 80058d2:	2102      	movs	r1, #2
 80058d4:	f24d 3022 	movw	r0, #54050	; 0xd322
 80058d8:	f7fc fc28 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD323, 0xA4);
 80058dc:	21a4      	movs	r1, #164	; 0xa4
 80058de:	f24d 3023 	movw	r0, #54051	; 0xd323
 80058e2:	f7fc fc23 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD324, 0x02);
 80058e6:	2102      	movs	r1, #2
 80058e8:	f24d 3024 	movw	r0, #54052	; 0xd324
 80058ec:	f7fc fc1e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD325, 0xB7);
 80058f0:	21b7      	movs	r1, #183	; 0xb7
 80058f2:	f24d 3025 	movw	r0, #54053	; 0xd325
 80058f6:	f7fc fc19 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD326, 0x02);
 80058fa:	2102      	movs	r1, #2
 80058fc:	f24d 3026 	movw	r0, #54054	; 0xd326
 8005900:	f7fc fc14 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD327, 0xCF);
 8005904:	21cf      	movs	r1, #207	; 0xcf
 8005906:	f24d 3027 	movw	r0, #54055	; 0xd327
 800590a:	f7fc fc0f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD328, 0x02);
 800590e:	2102      	movs	r1, #2
 8005910:	f24d 3028 	movw	r0, #54056	; 0xd328
 8005914:	f7fc fc0a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD329, 0xDE);
 8005918:	21de      	movs	r1, #222	; 0xde
 800591a:	f24d 3029 	movw	r0, #54057	; 0xd329
 800591e:	f7fc fc05 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD32A, 0x02);
 8005922:	2102      	movs	r1, #2
 8005924:	f24d 302a 	movw	r0, #54058	; 0xd32a
 8005928:	f7fc fc00 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD32B, 0xF2);
 800592c:	21f2      	movs	r1, #242	; 0xf2
 800592e:	f24d 302b 	movw	r0, #54059	; 0xd32b
 8005932:	f7fc fbfb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD32C, 0x02);
 8005936:	2102      	movs	r1, #2
 8005938:	f24d 302c 	movw	r0, #54060	; 0xd32c
 800593c:	f7fc fbf6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD32D, 0xFE);
 8005940:	21fe      	movs	r1, #254	; 0xfe
 8005942:	f24d 302d 	movw	r0, #54061	; 0xd32d
 8005946:	f7fc fbf1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD32E, 0x03);
 800594a:	2103      	movs	r1, #3
 800594c:	f24d 302e 	movw	r0, #54062	; 0xd32e
 8005950:	f7fc fbec 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD32F, 0x10);
 8005954:	2110      	movs	r1, #16
 8005956:	f24d 302f 	movw	r0, #54063	; 0xd32f
 800595a:	f7fc fbe7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD330, 0x03);
 800595e:	2103      	movs	r1, #3
 8005960:	f24d 3030 	movw	r0, #54064	; 0xd330
 8005964:	f7fc fbe2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD331, 0x33);
 8005968:	2133      	movs	r1, #51	; 0x33
 800596a:	f24d 3031 	movw	r0, #54065	; 0xd331
 800596e:	f7fc fbdd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD332, 0x03);
 8005972:	2103      	movs	r1, #3
 8005974:	f24d 3032 	movw	r0, #54066	; 0xd332
 8005978:	f7fc fbd8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD333, 0x6D);
 800597c:	216d      	movs	r1, #109	; 0x6d
 800597e:	f24d 3033 	movw	r0, #54067	; 0xd333
 8005982:	f7fc fbd3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD400, 0x00);
 8005986:	2100      	movs	r1, #0
 8005988:	f44f 4054 	mov.w	r0, #54272	; 0xd400
 800598c:	f7fc fbce 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD401, 0x33);
 8005990:	2133      	movs	r1, #51	; 0x33
 8005992:	f24d 4001 	movw	r0, #54273	; 0xd401
 8005996:	f7fc fbc9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD402, 0x00);
 800599a:	2100      	movs	r1, #0
 800599c:	f24d 4002 	movw	r0, #54274	; 0xd402
 80059a0:	f7fc fbc4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD403, 0x34);
 80059a4:	2134      	movs	r1, #52	; 0x34
 80059a6:	f24d 4003 	movw	r0, #54275	; 0xd403
 80059aa:	f7fc fbbf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD404, 0x00);
 80059ae:	2100      	movs	r1, #0
 80059b0:	f24d 4004 	movw	r0, #54276	; 0xd404
 80059b4:	f7fc fbba 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD405, 0x3A);
 80059b8:	213a      	movs	r1, #58	; 0x3a
 80059ba:	f24d 4005 	movw	r0, #54277	; 0xd405
 80059be:	f7fc fbb5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD406, 0x00);
 80059c2:	2100      	movs	r1, #0
 80059c4:	f24d 4006 	movw	r0, #54278	; 0xd406
 80059c8:	f7fc fbb0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD407, 0x4A);
 80059cc:	214a      	movs	r1, #74	; 0x4a
 80059ce:	f24d 4007 	movw	r0, #54279	; 0xd407
 80059d2:	f7fc fbab 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD408, 0x00);
 80059d6:	2100      	movs	r1, #0
 80059d8:	f24d 4008 	movw	r0, #54280	; 0xd408
 80059dc:	f7fc fba6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD409, 0x5C);
 80059e0:	215c      	movs	r1, #92	; 0x5c
 80059e2:	f24d 4009 	movw	r0, #54281	; 0xd409
 80059e6:	f7fc fba1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD40A, 0x00);
 80059ea:	2100      	movs	r1, #0
 80059ec:	f24d 400a 	movw	r0, #54282	; 0xd40a
 80059f0:	f7fc fb9c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD40B, 0x81);
 80059f4:	2181      	movs	r1, #129	; 0x81
 80059f6:	f24d 400b 	movw	r0, #54283	; 0xd40b
 80059fa:	f7fc fb97 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0xD40C, 0x00);
 80059fe:	2100      	movs	r1, #0
 8005a00:	f24d 400c 	movw	r0, #54284	; 0xd40c
 8005a04:	f7fc fb92 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD40D, 0xA6);
 8005a08:	21a6      	movs	r1, #166	; 0xa6
 8005a0a:	f24d 400d 	movw	r0, #54285	; 0xd40d
 8005a0e:	f7fc fb8d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD40E, 0x00);
 8005a12:	2100      	movs	r1, #0
 8005a14:	f24d 400e 	movw	r0, #54286	; 0xd40e
 8005a18:	f7fc fb88 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD40F, 0xE5);
 8005a1c:	21e5      	movs	r1, #229	; 0xe5
 8005a1e:	f24d 400f 	movw	r0, #54287	; 0xd40f
 8005a22:	f7fc fb83 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD410, 0x01);
 8005a26:	2101      	movs	r1, #1
 8005a28:	f24d 4010 	movw	r0, #54288	; 0xd410
 8005a2c:	f7fc fb7e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD411, 0x13);
 8005a30:	2113      	movs	r1, #19
 8005a32:	f24d 4011 	movw	r0, #54289	; 0xd411
 8005a36:	f7fc fb79 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD412, 0x01);
 8005a3a:	2101      	movs	r1, #1
 8005a3c:	f24d 4012 	movw	r0, #54290	; 0xd412
 8005a40:	f7fc fb74 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD413, 0x54);
 8005a44:	2154      	movs	r1, #84	; 0x54
 8005a46:	f24d 4013 	movw	r0, #54291	; 0xd413
 8005a4a:	f7fc fb6f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD414, 0x01);
 8005a4e:	2101      	movs	r1, #1
 8005a50:	f24d 4014 	movw	r0, #54292	; 0xd414
 8005a54:	f7fc fb6a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD415, 0x82);
 8005a58:	2182      	movs	r1, #130	; 0x82
 8005a5a:	f24d 4015 	movw	r0, #54293	; 0xd415
 8005a5e:	f7fc fb65 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD416, 0x01);
 8005a62:	2101      	movs	r1, #1
 8005a64:	f24d 4016 	movw	r0, #54294	; 0xd416
 8005a68:	f7fc fb60 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD417, 0xCA);
 8005a6c:	21ca      	movs	r1, #202	; 0xca
 8005a6e:	f24d 4017 	movw	r0, #54295	; 0xd417
 8005a72:	f7fc fb5b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD418, 0x02);
 8005a76:	2102      	movs	r1, #2
 8005a78:	f24d 4018 	movw	r0, #54296	; 0xd418
 8005a7c:	f7fc fb56 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD419, 0x00);
 8005a80:	2100      	movs	r1, #0
 8005a82:	f24d 4019 	movw	r0, #54297	; 0xd419
 8005a86:	f7fc fb51 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD41A, 0x02);
 8005a8a:	2102      	movs	r1, #2
 8005a8c:	f24d 401a 	movw	r0, #54298	; 0xd41a
 8005a90:	f7fc fb4c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD41B, 0x01);
 8005a94:	2101      	movs	r1, #1
 8005a96:	f24d 401b 	movw	r0, #54299	; 0xd41b
 8005a9a:	f7fc fb47 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD41C, 0x02);
 8005a9e:	2102      	movs	r1, #2
 8005aa0:	f24d 401c 	movw	r0, #54300	; 0xd41c
 8005aa4:	f7fc fb42 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD41D, 0x34);
 8005aa8:	2134      	movs	r1, #52	; 0x34
 8005aaa:	f24d 401d 	movw	r0, #54301	; 0xd41d
 8005aae:	f7fc fb3d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD41E, 0x02);
 8005ab2:	2102      	movs	r1, #2
 8005ab4:	f24d 401e 	movw	r0, #54302	; 0xd41e
 8005ab8:	f7fc fb38 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD41F, 0x67);
 8005abc:	2167      	movs	r1, #103	; 0x67
 8005abe:	f24d 401f 	movw	r0, #54303	; 0xd41f
 8005ac2:	f7fc fb33 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD420, 0x02);
 8005ac6:	2102      	movs	r1, #2
 8005ac8:	f24d 4020 	movw	r0, #54304	; 0xd420
 8005acc:	f7fc fb2e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD421, 0x84);
 8005ad0:	2184      	movs	r1, #132	; 0x84
 8005ad2:	f24d 4021 	movw	r0, #54305	; 0xd421
 8005ad6:	f7fc fb29 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD422, 0x02);
 8005ada:	2102      	movs	r1, #2
 8005adc:	f24d 4022 	movw	r0, #54306	; 0xd422
 8005ae0:	f7fc fb24 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD423, 0xA4);
 8005ae4:	21a4      	movs	r1, #164	; 0xa4
 8005ae6:	f24d 4023 	movw	r0, #54307	; 0xd423
 8005aea:	f7fc fb1f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD424, 0x02);
 8005aee:	2102      	movs	r1, #2
 8005af0:	f24d 4024 	movw	r0, #54308	; 0xd424
 8005af4:	f7fc fb1a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD425, 0xB7);
 8005af8:	21b7      	movs	r1, #183	; 0xb7
 8005afa:	f24d 4025 	movw	r0, #54309	; 0xd425
 8005afe:	f7fc fb15 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD426, 0x02);
 8005b02:	2102      	movs	r1, #2
 8005b04:	f24d 4026 	movw	r0, #54310	; 0xd426
 8005b08:	f7fc fb10 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD427, 0xCF);
 8005b0c:	21cf      	movs	r1, #207	; 0xcf
 8005b0e:	f24d 4027 	movw	r0, #54311	; 0xd427
 8005b12:	f7fc fb0b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD428, 0x02);
 8005b16:	2102      	movs	r1, #2
 8005b18:	f24d 4028 	movw	r0, #54312	; 0xd428
 8005b1c:	f7fc fb06 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD429, 0xDE);
 8005b20:	21de      	movs	r1, #222	; 0xde
 8005b22:	f24d 4029 	movw	r0, #54313	; 0xd429
 8005b26:	f7fc fb01 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD42A, 0x02);
 8005b2a:	2102      	movs	r1, #2
 8005b2c:	f24d 402a 	movw	r0, #54314	; 0xd42a
 8005b30:	f7fc fafc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD42B, 0xF2);
 8005b34:	21f2      	movs	r1, #242	; 0xf2
 8005b36:	f24d 402b 	movw	r0, #54315	; 0xd42b
 8005b3a:	f7fc faf7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD42C, 0x02);
 8005b3e:	2102      	movs	r1, #2
 8005b40:	f24d 402c 	movw	r0, #54316	; 0xd42c
 8005b44:	f7fc faf2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD42D, 0xFE);
 8005b48:	21fe      	movs	r1, #254	; 0xfe
 8005b4a:	f24d 402d 	movw	r0, #54317	; 0xd42d
 8005b4e:	f7fc faed 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD42E, 0x03);
 8005b52:	2103      	movs	r1, #3
 8005b54:	f24d 402e 	movw	r0, #54318	; 0xd42e
 8005b58:	f7fc fae8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD42F, 0x10);
 8005b5c:	2110      	movs	r1, #16
 8005b5e:	f24d 402f 	movw	r0, #54319	; 0xd42f
 8005b62:	f7fc fae3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD430, 0x03);
 8005b66:	2103      	movs	r1, #3
 8005b68:	f24d 4030 	movw	r0, #54320	; 0xd430
 8005b6c:	f7fc fade 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD431, 0x33);
 8005b70:	2133      	movs	r1, #51	; 0x33
 8005b72:	f24d 4031 	movw	r0, #54321	; 0xd431
 8005b76:	f7fc fad9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD432, 0x03);
 8005b7a:	2103      	movs	r1, #3
 8005b7c:	f24d 4032 	movw	r0, #54322	; 0xd432
 8005b80:	f7fc fad4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD433, 0x6D);
 8005b84:	216d      	movs	r1, #109	; 0x6d
 8005b86:	f24d 4033 	movw	r0, #54323	; 0xd433
 8005b8a:	f7fc facf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD500, 0x00);
 8005b8e:	2100      	movs	r1, #0
 8005b90:	f44f 4055 	mov.w	r0, #54528	; 0xd500
 8005b94:	f7fc faca 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD501, 0x33);
 8005b98:	2133      	movs	r1, #51	; 0x33
 8005b9a:	f24d 5001 	movw	r0, #54529	; 0xd501
 8005b9e:	f7fc fac5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD502, 0x00);
 8005ba2:	2100      	movs	r1, #0
 8005ba4:	f24d 5002 	movw	r0, #54530	; 0xd502
 8005ba8:	f7fc fac0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD503, 0x34);
 8005bac:	2134      	movs	r1, #52	; 0x34
 8005bae:	f24d 5003 	movw	r0, #54531	; 0xd503
 8005bb2:	f7fc fabb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD504, 0x00);
 8005bb6:	2100      	movs	r1, #0
 8005bb8:	f24d 5004 	movw	r0, #54532	; 0xd504
 8005bbc:	f7fc fab6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD505, 0x3A);
 8005bc0:	213a      	movs	r1, #58	; 0x3a
 8005bc2:	f24d 5005 	movw	r0, #54533	; 0xd505
 8005bc6:	f7fc fab1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD506, 0x00);
 8005bca:	2100      	movs	r1, #0
 8005bcc:	f24d 5006 	movw	r0, #54534	; 0xd506
 8005bd0:	f7fc faac 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD507, 0x4A);
 8005bd4:	214a      	movs	r1, #74	; 0x4a
 8005bd6:	f24d 5007 	movw	r0, #54535	; 0xd507
 8005bda:	f7fc faa7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD508, 0x00);
 8005bde:	2100      	movs	r1, #0
 8005be0:	f24d 5008 	movw	r0, #54536	; 0xd508
 8005be4:	f7fc faa2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD509, 0x5C);
 8005be8:	215c      	movs	r1, #92	; 0x5c
 8005bea:	f24d 5009 	movw	r0, #54537	; 0xd509
 8005bee:	f7fc fa9d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD50A, 0x00);
 8005bf2:	2100      	movs	r1, #0
 8005bf4:	f24d 500a 	movw	r0, #54538	; 0xd50a
 8005bf8:	f7fc fa98 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD50B, 0x81);
 8005bfc:	2181      	movs	r1, #129	; 0x81
 8005bfe:	f24d 500b 	movw	r0, #54539	; 0xd50b
 8005c02:	f7fc fa93 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0xD50C, 0x00);
 8005c06:	2100      	movs	r1, #0
 8005c08:	f24d 500c 	movw	r0, #54540	; 0xd50c
 8005c0c:	f7fc fa8e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD50D, 0xA6);
 8005c10:	21a6      	movs	r1, #166	; 0xa6
 8005c12:	f24d 500d 	movw	r0, #54541	; 0xd50d
 8005c16:	f7fc fa89 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD50E, 0x00);
 8005c1a:	2100      	movs	r1, #0
 8005c1c:	f24d 500e 	movw	r0, #54542	; 0xd50e
 8005c20:	f7fc fa84 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD50F, 0xE5);
 8005c24:	21e5      	movs	r1, #229	; 0xe5
 8005c26:	f24d 500f 	movw	r0, #54543	; 0xd50f
 8005c2a:	f7fc fa7f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD510, 0x01);
 8005c2e:	2101      	movs	r1, #1
 8005c30:	f24d 5010 	movw	r0, #54544	; 0xd510
 8005c34:	f7fc fa7a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD511, 0x13);
 8005c38:	2113      	movs	r1, #19
 8005c3a:	f24d 5011 	movw	r0, #54545	; 0xd511
 8005c3e:	f7fc fa75 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD512, 0x01);
 8005c42:	2101      	movs	r1, #1
 8005c44:	f24d 5012 	movw	r0, #54546	; 0xd512
 8005c48:	f7fc fa70 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD513, 0x54);
 8005c4c:	2154      	movs	r1, #84	; 0x54
 8005c4e:	f24d 5013 	movw	r0, #54547	; 0xd513
 8005c52:	f7fc fa6b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD514, 0x01);
 8005c56:	2101      	movs	r1, #1
 8005c58:	f24d 5014 	movw	r0, #54548	; 0xd514
 8005c5c:	f7fc fa66 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD515, 0x82);
 8005c60:	2182      	movs	r1, #130	; 0x82
 8005c62:	f24d 5015 	movw	r0, #54549	; 0xd515
 8005c66:	f7fc fa61 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD516, 0x01);
 8005c6a:	2101      	movs	r1, #1
 8005c6c:	f24d 5016 	movw	r0, #54550	; 0xd516
 8005c70:	f7fc fa5c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD517, 0xCA);
 8005c74:	21ca      	movs	r1, #202	; 0xca
 8005c76:	f24d 5017 	movw	r0, #54551	; 0xd517
 8005c7a:	f7fc fa57 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD518, 0x02);
 8005c7e:	2102      	movs	r1, #2
 8005c80:	f24d 5018 	movw	r0, #54552	; 0xd518
 8005c84:	f7fc fa52 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD519, 0x00);
 8005c88:	2100      	movs	r1, #0
 8005c8a:	f24d 5019 	movw	r0, #54553	; 0xd519
 8005c8e:	f7fc fa4d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD51A, 0x02);
 8005c92:	2102      	movs	r1, #2
 8005c94:	f24d 501a 	movw	r0, #54554	; 0xd51a
 8005c98:	f7fc fa48 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD51B, 0x01);
 8005c9c:	2101      	movs	r1, #1
 8005c9e:	f24d 501b 	movw	r0, #54555	; 0xd51b
 8005ca2:	f7fc fa43 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD51C, 0x02);
 8005ca6:	2102      	movs	r1, #2
 8005ca8:	f24d 501c 	movw	r0, #54556	; 0xd51c
 8005cac:	f7fc fa3e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD51D, 0x34);
 8005cb0:	2134      	movs	r1, #52	; 0x34
 8005cb2:	f24d 501d 	movw	r0, #54557	; 0xd51d
 8005cb6:	f7fc fa39 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD51E, 0x02);
 8005cba:	2102      	movs	r1, #2
 8005cbc:	f24d 501e 	movw	r0, #54558	; 0xd51e
 8005cc0:	f7fc fa34 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD51F, 0x67);
 8005cc4:	2167      	movs	r1, #103	; 0x67
 8005cc6:	f24d 501f 	movw	r0, #54559	; 0xd51f
 8005cca:	f7fc fa2f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD520, 0x02);
 8005cce:	2102      	movs	r1, #2
 8005cd0:	f24d 5020 	movw	r0, #54560	; 0xd520
 8005cd4:	f7fc fa2a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD521, 0x84);
 8005cd8:	2184      	movs	r1, #132	; 0x84
 8005cda:	f24d 5021 	movw	r0, #54561	; 0xd521
 8005cde:	f7fc fa25 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD522, 0x02);
 8005ce2:	2102      	movs	r1, #2
 8005ce4:	f24d 5022 	movw	r0, #54562	; 0xd522
 8005ce8:	f7fc fa20 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD523, 0xA4);
 8005cec:	21a4      	movs	r1, #164	; 0xa4
 8005cee:	f24d 5023 	movw	r0, #54563	; 0xd523
 8005cf2:	f7fc fa1b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD524, 0x02);
 8005cf6:	2102      	movs	r1, #2
 8005cf8:	f24d 5024 	movw	r0, #54564	; 0xd524
 8005cfc:	f7fc fa16 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD525, 0xB7);
 8005d00:	21b7      	movs	r1, #183	; 0xb7
 8005d02:	f24d 5025 	movw	r0, #54565	; 0xd525
 8005d06:	f7fc fa11 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD526, 0x02);
 8005d0a:	2102      	movs	r1, #2
 8005d0c:	f24d 5026 	movw	r0, #54566	; 0xd526
 8005d10:	f7fc fa0c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD527, 0xCF);
 8005d14:	21cf      	movs	r1, #207	; 0xcf
 8005d16:	f24d 5027 	movw	r0, #54567	; 0xd527
 8005d1a:	f7fc fa07 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD528, 0x02);
 8005d1e:	2102      	movs	r1, #2
 8005d20:	f24d 5028 	movw	r0, #54568	; 0xd528
 8005d24:	f7fc fa02 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD529, 0xDE);
 8005d28:	21de      	movs	r1, #222	; 0xde
 8005d2a:	f24d 5029 	movw	r0, #54569	; 0xd529
 8005d2e:	f7fc f9fd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD52A, 0x02);
 8005d32:	2102      	movs	r1, #2
 8005d34:	f24d 502a 	movw	r0, #54570	; 0xd52a
 8005d38:	f7fc f9f8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD52B, 0xF2);
 8005d3c:	21f2      	movs	r1, #242	; 0xf2
 8005d3e:	f24d 502b 	movw	r0, #54571	; 0xd52b
 8005d42:	f7fc f9f3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD52C, 0x02);
 8005d46:	2102      	movs	r1, #2
 8005d48:	f24d 502c 	movw	r0, #54572	; 0xd52c
 8005d4c:	f7fc f9ee 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD52D, 0xFE);
 8005d50:	21fe      	movs	r1, #254	; 0xfe
 8005d52:	f24d 502d 	movw	r0, #54573	; 0xd52d
 8005d56:	f7fc f9e9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD52E, 0x03);
 8005d5a:	2103      	movs	r1, #3
 8005d5c:	f24d 502e 	movw	r0, #54574	; 0xd52e
 8005d60:	f7fc f9e4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD52F, 0x10);
 8005d64:	2110      	movs	r1, #16
 8005d66:	f24d 502f 	movw	r0, #54575	; 0xd52f
 8005d6a:	f7fc f9df 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD530, 0x03);
 8005d6e:	2103      	movs	r1, #3
 8005d70:	f24d 5030 	movw	r0, #54576	; 0xd530
 8005d74:	f7fc f9da 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD531, 0x33);
 8005d78:	2133      	movs	r1, #51	; 0x33
 8005d7a:	f24d 5031 	movw	r0, #54577	; 0xd531
 8005d7e:	f7fc f9d5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD532, 0x03);
 8005d82:	2103      	movs	r1, #3
 8005d84:	f24d 5032 	movw	r0, #54578	; 0xd532
 8005d88:	f7fc f9d0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD533, 0x6D);
 8005d8c:	216d      	movs	r1, #109	; 0x6d
 8005d8e:	f24d 5033 	movw	r0, #54579	; 0xd533
 8005d92:	f7fc f9cb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD600, 0x00);
 8005d96:	2100      	movs	r1, #0
 8005d98:	f44f 4056 	mov.w	r0, #54784	; 0xd600
 8005d9c:	f7fc f9c6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD601, 0x33);
 8005da0:	2133      	movs	r1, #51	; 0x33
 8005da2:	f24d 6001 	movw	r0, #54785	; 0xd601
 8005da6:	f7fc f9c1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD602, 0x00);
 8005daa:	2100      	movs	r1, #0
 8005dac:	f24d 6002 	movw	r0, #54786	; 0xd602
 8005db0:	f7fc f9bc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD603, 0x34);
 8005db4:	2134      	movs	r1, #52	; 0x34
 8005db6:	f24d 6003 	movw	r0, #54787	; 0xd603
 8005dba:	f7fc f9b7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD604, 0x00);
 8005dbe:	2100      	movs	r1, #0
 8005dc0:	f24d 6004 	movw	r0, #54788	; 0xd604
 8005dc4:	f7fc f9b2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD605, 0x3A);
 8005dc8:	213a      	movs	r1, #58	; 0x3a
 8005dca:	f24d 6005 	movw	r0, #54789	; 0xd605
 8005dce:	f7fc f9ad 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD606, 0x00);
 8005dd2:	2100      	movs	r1, #0
 8005dd4:	f24d 6006 	movw	r0, #54790	; 0xd606
 8005dd8:	f7fc f9a8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD607, 0x4A);
 8005ddc:	214a      	movs	r1, #74	; 0x4a
 8005dde:	f24d 6007 	movw	r0, #54791	; 0xd607
 8005de2:	f7fc f9a3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD608, 0x00);
 8005de6:	2100      	movs	r1, #0
 8005de8:	f24d 6008 	movw	r0, #54792	; 0xd608
 8005dec:	f7fc f99e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD609, 0x5C);
 8005df0:	215c      	movs	r1, #92	; 0x5c
 8005df2:	f24d 6009 	movw	r0, #54793	; 0xd609
 8005df6:	f7fc f999 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD60A, 0x00);
 8005dfa:	2100      	movs	r1, #0
 8005dfc:	f24d 600a 	movw	r0, #54794	; 0xd60a
 8005e00:	f7fc f994 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD60B, 0x81);
 8005e04:	2181      	movs	r1, #129	; 0x81
 8005e06:	f24d 600b 	movw	r0, #54795	; 0xd60b
 8005e0a:	f7fc f98f 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0xD60C, 0x00);
 8005e0e:	2100      	movs	r1, #0
 8005e10:	f24d 600c 	movw	r0, #54796	; 0xd60c
 8005e14:	f7fc f98a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD60D, 0xA6);
 8005e18:	21a6      	movs	r1, #166	; 0xa6
 8005e1a:	f24d 600d 	movw	r0, #54797	; 0xd60d
 8005e1e:	f7fc f985 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD60E, 0x00);
 8005e22:	2100      	movs	r1, #0
 8005e24:	f24d 600e 	movw	r0, #54798	; 0xd60e
 8005e28:	f7fc f980 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD60F, 0xE5);
 8005e2c:	21e5      	movs	r1, #229	; 0xe5
 8005e2e:	f24d 600f 	movw	r0, #54799	; 0xd60f
 8005e32:	f7fc f97b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD610, 0x01);
 8005e36:	2101      	movs	r1, #1
 8005e38:	f24d 6010 	movw	r0, #54800	; 0xd610
 8005e3c:	f7fc f976 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD611, 0x13);
 8005e40:	2113      	movs	r1, #19
 8005e42:	f24d 6011 	movw	r0, #54801	; 0xd611
 8005e46:	f7fc f971 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD612, 0x01);
 8005e4a:	2101      	movs	r1, #1
 8005e4c:	f24d 6012 	movw	r0, #54802	; 0xd612
 8005e50:	f7fc f96c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD613, 0x54);
 8005e54:	2154      	movs	r1, #84	; 0x54
 8005e56:	f24d 6013 	movw	r0, #54803	; 0xd613
 8005e5a:	f7fc f967 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD614, 0x01);
 8005e5e:	2101      	movs	r1, #1
 8005e60:	f24d 6014 	movw	r0, #54804	; 0xd614
 8005e64:	f7fc f962 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD615, 0x82);
 8005e68:	2182      	movs	r1, #130	; 0x82
 8005e6a:	f24d 6015 	movw	r0, #54805	; 0xd615
 8005e6e:	f7fc f95d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD616, 0x01);
 8005e72:	2101      	movs	r1, #1
 8005e74:	f24d 6016 	movw	r0, #54806	; 0xd616
 8005e78:	f7fc f958 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD617, 0xCA);
 8005e7c:	21ca      	movs	r1, #202	; 0xca
 8005e7e:	f24d 6017 	movw	r0, #54807	; 0xd617
 8005e82:	f7fc f953 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD618, 0x02);
 8005e86:	2102      	movs	r1, #2
 8005e88:	f24d 6018 	movw	r0, #54808	; 0xd618
 8005e8c:	f7fc f94e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD619, 0x00);
 8005e90:	2100      	movs	r1, #0
 8005e92:	f24d 6019 	movw	r0, #54809	; 0xd619
 8005e96:	f7fc f949 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD61A, 0x02);
 8005e9a:	2102      	movs	r1, #2
 8005e9c:	f24d 601a 	movw	r0, #54810	; 0xd61a
 8005ea0:	f7fc f944 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD61B, 0x01);
 8005ea4:	2101      	movs	r1, #1
 8005ea6:	f24d 601b 	movw	r0, #54811	; 0xd61b
 8005eaa:	f7fc f93f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD61C, 0x02);
 8005eae:	2102      	movs	r1, #2
 8005eb0:	f24d 601c 	movw	r0, #54812	; 0xd61c
 8005eb4:	f7fc f93a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD61D, 0x34);
 8005eb8:	2134      	movs	r1, #52	; 0x34
 8005eba:	f24d 601d 	movw	r0, #54813	; 0xd61d
 8005ebe:	f7fc f935 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD61E, 0x02);
 8005ec2:	2102      	movs	r1, #2
 8005ec4:	f24d 601e 	movw	r0, #54814	; 0xd61e
 8005ec8:	f7fc f930 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD61F, 0x67);
 8005ecc:	2167      	movs	r1, #103	; 0x67
 8005ece:	f24d 601f 	movw	r0, #54815	; 0xd61f
 8005ed2:	f7fc f92b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD620, 0x02);
 8005ed6:	2102      	movs	r1, #2
 8005ed8:	f24d 6020 	movw	r0, #54816	; 0xd620
 8005edc:	f7fc f926 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD621, 0x84);
 8005ee0:	2184      	movs	r1, #132	; 0x84
 8005ee2:	f24d 6021 	movw	r0, #54817	; 0xd621
 8005ee6:	f7fc f921 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD622, 0x02);
 8005eea:	2102      	movs	r1, #2
 8005eec:	f24d 6022 	movw	r0, #54818	; 0xd622
 8005ef0:	f7fc f91c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD623, 0xA4);
 8005ef4:	21a4      	movs	r1, #164	; 0xa4
 8005ef6:	f24d 6023 	movw	r0, #54819	; 0xd623
 8005efa:	f7fc f917 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD624, 0x02);
 8005efe:	2102      	movs	r1, #2
 8005f00:	f24d 6024 	movw	r0, #54820	; 0xd624
 8005f04:	f7fc f912 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD625, 0xB7);
 8005f08:	21b7      	movs	r1, #183	; 0xb7
 8005f0a:	f24d 6025 	movw	r0, #54821	; 0xd625
 8005f0e:	f7fc f90d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD626, 0x02);
 8005f12:	2102      	movs	r1, #2
 8005f14:	f24d 6026 	movw	r0, #54822	; 0xd626
 8005f18:	f7fc f908 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD627, 0xCF);
 8005f1c:	21cf      	movs	r1, #207	; 0xcf
 8005f1e:	f24d 6027 	movw	r0, #54823	; 0xd627
 8005f22:	f7fc f903 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD628, 0x02);
 8005f26:	2102      	movs	r1, #2
 8005f28:	f24d 6028 	movw	r0, #54824	; 0xd628
 8005f2c:	f7fc f8fe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD629, 0xDE);
 8005f30:	21de      	movs	r1, #222	; 0xde
 8005f32:	f24d 6029 	movw	r0, #54825	; 0xd629
 8005f36:	f7fc f8f9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD62A, 0x02);
 8005f3a:	2102      	movs	r1, #2
 8005f3c:	f24d 602a 	movw	r0, #54826	; 0xd62a
 8005f40:	f7fc f8f4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD62B, 0xF2);
 8005f44:	21f2      	movs	r1, #242	; 0xf2
 8005f46:	f24d 602b 	movw	r0, #54827	; 0xd62b
 8005f4a:	f7fc f8ef 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD62C, 0x02);
 8005f4e:	2102      	movs	r1, #2
 8005f50:	f24d 602c 	movw	r0, #54828	; 0xd62c
 8005f54:	f7fc f8ea 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD62D, 0xFE);
 8005f58:	21fe      	movs	r1, #254	; 0xfe
 8005f5a:	f24d 602d 	movw	r0, #54829	; 0xd62d
 8005f5e:	f7fc f8e5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD62E, 0x03);
 8005f62:	2103      	movs	r1, #3
 8005f64:	f24d 602e 	movw	r0, #54830	; 0xd62e
 8005f68:	f7fc f8e0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD62F, 0x10);
 8005f6c:	2110      	movs	r1, #16
 8005f6e:	f24d 602f 	movw	r0, #54831	; 0xd62f
 8005f72:	f7fc f8db 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD630, 0x03);
 8005f76:	2103      	movs	r1, #3
 8005f78:	f24d 6030 	movw	r0, #54832	; 0xd630
 8005f7c:	f7fc f8d6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD631, 0x33);
 8005f80:	2133      	movs	r1, #51	; 0x33
 8005f82:	f24d 6031 	movw	r0, #54833	; 0xd631
 8005f86:	f7fc f8d1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD632, 0x03);
 8005f8a:	2103      	movs	r1, #3
 8005f8c:	f24d 6032 	movw	r0, #54834	; 0xd632
 8005f90:	f7fc f8cc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xD633, 0x6D);
 8005f94:	216d      	movs	r1, #109	; 0x6d
 8005f96:	f24d 6033 	movw	r0, #54835	; 0xd633
 8005f9a:	f7fc f8c7 	bl	800212c <LCD_WriteReg>
		//LV2 Page 0 enable
		LCD_WriteReg(0xF000, 0x55);
 8005f9e:	2155      	movs	r1, #85	; 0x55
 8005fa0:	f44f 4070 	mov.w	r0, #61440	; 0xf000
 8005fa4:	f7fc f8c2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF001, 0xAA);
 8005fa8:	21aa      	movs	r1, #170	; 0xaa
 8005faa:	f24f 0001 	movw	r0, #61441	; 0xf001
 8005fae:	f7fc f8bd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF002, 0x52);
 8005fb2:	2152      	movs	r1, #82	; 0x52
 8005fb4:	f24f 0002 	movw	r0, #61442	; 0xf002
 8005fb8:	f7fc f8b8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF003, 0x08);
 8005fbc:	2108      	movs	r1, #8
 8005fbe:	f24f 0003 	movw	r0, #61443	; 0xf003
 8005fc2:	f7fc f8b3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xF004, 0x00);
 8005fc6:	2100      	movs	r1, #0
 8005fc8:	f24f 0004 	movw	r0, #61444	; 0xf004
 8005fcc:	f7fc f8ae 	bl	800212c <LCD_WriteReg>
		//Display control
		LCD_WriteReg(0xB100, 0xCC);
 8005fd0:	21cc      	movs	r1, #204	; 0xcc
 8005fd2:	f44f 4031 	mov.w	r0, #45312	; 0xb100
 8005fd6:	f7fc f8a9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB101, 0x00);
 8005fda:	2100      	movs	r1, #0
 8005fdc:	f24b 1001 	movw	r0, #45313	; 0xb101
 8005fe0:	f7fc f8a4 	bl	800212c <LCD_WriteReg>
		//Source hold time
		LCD_WriteReg(0xB600, 0x05);
 8005fe4:	2105      	movs	r1, #5
 8005fe6:	f44f 4036 	mov.w	r0, #46592	; 0xb600
 8005fea:	f7fc f89f 	bl	800212c <LCD_WriteReg>
		//Gate EQ control
		LCD_WriteReg(0xB700, 0x70);
 8005fee:	2170      	movs	r1, #112	; 0x70
 8005ff0:	f44f 4037 	mov.w	r0, #46848	; 0xb700
 8005ff4:	f7fc f89a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB701, 0x70);
 8005ff8:	2170      	movs	r1, #112	; 0x70
 8005ffa:	f24b 7001 	movw	r0, #46849	; 0xb701
 8005ffe:	f7fc f895 	bl	800212c <LCD_WriteReg>
		//Source EQ control (Mode 2)
		LCD_WriteReg(0xB800, 0x01);
 8006002:	2101      	movs	r1, #1
 8006004:	f44f 4038 	mov.w	r0, #47104	; 0xb800
 8006008:	f7fc f890 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB801, 0x03);
 800600c:	2103      	movs	r1, #3
 800600e:	f64b 0001 	movw	r0, #47105	; 0xb801
 8006012:	f7fc f88b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB802, 0x03);
 8006016:	2103      	movs	r1, #3
 8006018:	f64b 0002 	movw	r0, #47106	; 0xb802
 800601c:	f7fc f886 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xB803, 0x03);
 8006020:	2103      	movs	r1, #3
 8006022:	f64b 0003 	movw	r0, #47107	; 0xb803
 8006026:	f7fc f881 	bl	800212c <LCD_WriteReg>
		//Inversion mode (2-dot)
		LCD_WriteReg(0xBC00, 0x02);
 800602a:	2102      	movs	r1, #2
 800602c:	f44f 403c 	mov.w	r0, #48128	; 0xbc00
 8006030:	f7fc f87c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBC01, 0x00);
 8006034:	2100      	movs	r1, #0
 8006036:	f64b 4001 	movw	r0, #48129	; 0xbc01
 800603a:	f7fc f877 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xBC02, 0x00);
 800603e:	2100      	movs	r1, #0
 8006040:	f64b 4002 	movw	r0, #48130	; 0xbc02
 8006044:	f7fc f872 	bl	800212c <LCD_WriteReg>
		//Timing control 4H w/ 4-delay
		LCD_WriteReg(0xC900, 0xD0);
 8006048:	21d0      	movs	r1, #208	; 0xd0
 800604a:	f44f 4049 	mov.w	r0, #51456	; 0xc900
 800604e:	f7fc f86d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xC901, 0x02);
 8006052:	2102      	movs	r1, #2
 8006054:	f64c 1001 	movw	r0, #51457	; 0xc901
 8006058:	f7fc f868 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xC902, 0x50);
 800605c:	2150      	movs	r1, #80	; 0x50
 800605e:	f64c 1002 	movw	r0, #51458	; 0xc902
 8006062:	f7fc f863 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xC903, 0x50);
 8006066:	2150      	movs	r1, #80	; 0x50
 8006068:	f64c 1003 	movw	r0, #51459	; 0xc903
 800606c:	f7fc f85e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xC904, 0x50);
 8006070:	2150      	movs	r1, #80	; 0x50
 8006072:	f64c 1004 	movw	r0, #51460	; 0xc904
 8006076:	f7fc f859 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x3500, 0x00);
 800607a:	2100      	movs	r1, #0
 800607c:	f44f 5054 	mov.w	r0, #13568	; 0x3500
 8006080:	f7fc f854 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x3A00, 0x55);  //16-bit/pixel
 8006084:	2155      	movs	r1, #85	; 0x55
 8006086:	f44f 5068 	mov.w	r0, #14848	; 0x3a00
 800608a:	f7fc f84f 	bl	800212c <LCD_WriteReg>
		LCD_WR_REG(0x1100);
 800608e:	f44f 5088 	mov.w	r0, #4352	; 0x1100
 8006092:	f7fb ffbf 	bl	8002014 <LCD_WR_REG>
//		delay_us(120); // us
		HAL_Delay(1);
 8006096:	2001      	movs	r0, #1
 8006098:	f7fa fd16 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0x2900);
 800609c:	f44f 5024 	mov.w	r0, #10496	; 0x2900
 80060a0:	f7fb ffb8 	bl	8002014 <LCD_WR_REG>
 80060a4:	f001 bd18 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0x9325)  //9325
 80060a8:	4bec      	ldr	r3, [pc, #944]	; (800645c <LCD_Init+0x27b8>)
 80060aa:	889b      	ldrh	r3, [r3, #4]
 80060ac:	f249 3225 	movw	r2, #37669	; 0x9325
 80060b0:	4293      	cmp	r3, r2
 80060b2:	f040 80d7 	bne.w	8006264 <LCD_Init+0x25c0>
			{
		LCD_WriteReg(0x00E5, 0x78F0);
 80060b6:	f647 01f0 	movw	r1, #30960	; 0x78f0
 80060ba:	20e5      	movs	r0, #229	; 0xe5
 80060bc:	f7fc f836 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0001, 0x0100);
 80060c0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80060c4:	2001      	movs	r0, #1
 80060c6:	f7fc f831 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0700);
 80060ca:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 80060ce:	2002      	movs	r0, #2
 80060d0:	f7fc f82c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0003, 0x1030);
 80060d4:	f241 0130 	movw	r1, #4144	; 0x1030
 80060d8:	2003      	movs	r0, #3
 80060da:	f7fc f827 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0004, 0x0000);
 80060de:	2100      	movs	r1, #0
 80060e0:	2004      	movs	r0, #4
 80060e2:	f7fc f823 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0008, 0x0202);
 80060e6:	f240 2102 	movw	r1, #514	; 0x202
 80060ea:	2008      	movs	r0, #8
 80060ec:	f7fc f81e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0009, 0x0000);
 80060f0:	2100      	movs	r1, #0
 80060f2:	2009      	movs	r0, #9
 80060f4:	f7fc f81a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000A, 0x0000);
 80060f8:	2100      	movs	r1, #0
 80060fa:	200a      	movs	r0, #10
 80060fc:	f7fc f816 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000C, 0x0000);
 8006100:	2100      	movs	r1, #0
 8006102:	200c      	movs	r0, #12
 8006104:	f7fc f812 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000D, 0x0000);
 8006108:	2100      	movs	r1, #0
 800610a:	200d      	movs	r0, #13
 800610c:	f7fc f80e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000F, 0x0000);
 8006110:	2100      	movs	r1, #0
 8006112:	200f      	movs	r0, #15
 8006114:	f7fc f80a 	bl	800212c <LCD_WriteReg>
		//power on sequence VGHVGL
		LCD_WriteReg(0x0010, 0x0000);
 8006118:	2100      	movs	r1, #0
 800611a:	2010      	movs	r0, #16
 800611c:	f7fc f806 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0007);
 8006120:	2107      	movs	r1, #7
 8006122:	2011      	movs	r0, #17
 8006124:	f7fc f802 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x0000);
 8006128:	2100      	movs	r1, #0
 800612a:	2012      	movs	r0, #18
 800612c:	f7fb fffe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0013, 0x0000);
 8006130:	2100      	movs	r1, #0
 8006132:	2013      	movs	r0, #19
 8006134:	f7fb fffa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0000);
 8006138:	2100      	movs	r1, #0
 800613a:	2007      	movs	r0, #7
 800613c:	f7fb fff6 	bl	800212c <LCD_WriteReg>
		//vgh 
		LCD_WriteReg(0x0010, 0x1690);
 8006140:	f241 6190 	movw	r1, #5776	; 0x1690
 8006144:	2010      	movs	r0, #16
 8006146:	f7fb fff1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0227);
 800614a:	f240 2127 	movw	r1, #551	; 0x227
 800614e:	2011      	movs	r0, #17
 8006150:	f7fb ffec 	bl	800212c <LCD_WriteReg>
		//delayms(100);
		//vregiout 
		LCD_WriteReg(0x0012, 0x009D); //0x001b
 8006154:	219d      	movs	r1, #157	; 0x9d
 8006156:	2012      	movs	r0, #18
 8006158:	f7fb ffe8 	bl	800212c <LCD_WriteReg>
		//delayms(100); 
		//vom amplitude
		LCD_WriteReg(0x0013, 0x1900);
 800615c:	f44f 51c8 	mov.w	r1, #6400	; 0x1900
 8006160:	2013      	movs	r0, #19
 8006162:	f7fb ffe3 	bl	800212c <LCD_WriteReg>
		//delayms(100); 
		//vom H
		LCD_WriteReg(0x0029, 0x0025);
 8006166:	2125      	movs	r1, #37	; 0x25
 8006168:	2029      	movs	r0, #41	; 0x29
 800616a:	f7fb ffdf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x002B, 0x000D);
 800616e:	210d      	movs	r1, #13
 8006170:	202b      	movs	r0, #43	; 0x2b
 8006172:	f7fb ffdb 	bl	800212c <LCD_WriteReg>
		//gamma
		LCD_WriteReg(0x0030, 0x0007);
 8006176:	2107      	movs	r1, #7
 8006178:	2030      	movs	r0, #48	; 0x30
 800617a:	f7fb ffd7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x0303);
 800617e:	f240 3103 	movw	r1, #771	; 0x303
 8006182:	2031      	movs	r0, #49	; 0x31
 8006184:	f7fb ffd2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0003);		// 0006
 8006188:	2103      	movs	r1, #3
 800618a:	2032      	movs	r0, #50	; 0x32
 800618c:	f7fb ffce 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x0206);
 8006190:	f240 2106 	movw	r1, #518	; 0x206
 8006194:	2035      	movs	r0, #53	; 0x35
 8006196:	f7fb ffc9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x0008);
 800619a:	2108      	movs	r1, #8
 800619c:	2036      	movs	r0, #54	; 0x36
 800619e:	f7fb ffc5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x0406);
 80061a2:	f240 4106 	movw	r1, #1030	; 0x406
 80061a6:	2037      	movs	r0, #55	; 0x37
 80061a8:	f7fb ffc0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0038, 0x0304);		//0200
 80061ac:	f44f 7141 	mov.w	r1, #772	; 0x304
 80061b0:	2038      	movs	r0, #56	; 0x38
 80061b2:	f7fb ffbb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0039, 0x0007);
 80061b6:	2107      	movs	r1, #7
 80061b8:	2039      	movs	r0, #57	; 0x39
 80061ba:	f7fb ffb7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003C, 0x0602);		// 0504
 80061be:	f240 6102 	movw	r1, #1538	; 0x602
 80061c2:	203c      	movs	r0, #60	; 0x3c
 80061c4:	f7fb ffb2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003D, 0x0008);
 80061c8:	2108      	movs	r1, #8
 80061ca:	203d      	movs	r0, #61	; 0x3d
 80061cc:	f7fb ffae 	bl	800212c <LCD_WriteReg>
		//ram
		LCD_WriteReg(0x0050, 0x0000);
 80061d0:	2100      	movs	r1, #0
 80061d2:	2050      	movs	r0, #80	; 0x50
 80061d4:	f7fb ffaa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0051, 0x00EF);
 80061d8:	21ef      	movs	r1, #239	; 0xef
 80061da:	2051      	movs	r0, #81	; 0x51
 80061dc:	f7fb ffa6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0052, 0x0000);
 80061e0:	2100      	movs	r1, #0
 80061e2:	2052      	movs	r0, #82	; 0x52
 80061e4:	f7fb ffa2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0053, 0x013F);
 80061e8:	f240 113f 	movw	r1, #319	; 0x13f
 80061ec:	2053      	movs	r0, #83	; 0x53
 80061ee:	f7fb ff9d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0060, 0xA700);
 80061f2:	f44f 4127 	mov.w	r1, #42752	; 0xa700
 80061f6:	2060      	movs	r0, #96	; 0x60
 80061f8:	f7fb ff98 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0061, 0x0001);
 80061fc:	2101      	movs	r1, #1
 80061fe:	2061      	movs	r0, #97	; 0x61
 8006200:	f7fb ff94 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x006A, 0x0000);
 8006204:	2100      	movs	r1, #0
 8006206:	206a      	movs	r0, #106	; 0x6a
 8006208:	f7fb ff90 	bl	800212c <LCD_WriteReg>
		//
		LCD_WriteReg(0x0080, 0x0000);
 800620c:	2100      	movs	r1, #0
 800620e:	2080      	movs	r0, #128	; 0x80
 8006210:	f7fb ff8c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0081, 0x0000);
 8006214:	2100      	movs	r1, #0
 8006216:	2081      	movs	r0, #129	; 0x81
 8006218:	f7fb ff88 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0082, 0x0000);
 800621c:	2100      	movs	r1, #0
 800621e:	2082      	movs	r0, #130	; 0x82
 8006220:	f7fb ff84 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0083, 0x0000);
 8006224:	2100      	movs	r1, #0
 8006226:	2083      	movs	r0, #131	; 0x83
 8006228:	f7fb ff80 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0084, 0x0000);
 800622c:	2100      	movs	r1, #0
 800622e:	2084      	movs	r0, #132	; 0x84
 8006230:	f7fb ff7c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0085, 0x0000);
 8006234:	2100      	movs	r1, #0
 8006236:	2085      	movs	r0, #133	; 0x85
 8006238:	f7fb ff78 	bl	800212c <LCD_WriteReg>
		//
		LCD_WriteReg(0x0090, 0x0010);
 800623c:	2110      	movs	r1, #16
 800623e:	2090      	movs	r0, #144	; 0x90
 8006240:	f7fb ff74 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0092, 0x0600);
 8006244:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006248:	2092      	movs	r0, #146	; 0x92
 800624a:	f7fb ff6f 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0007, 0x0133);
 800624e:	f240 1133 	movw	r1, #307	; 0x133
 8006252:	2007      	movs	r0, #7
 8006254:	f7fb ff6a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x00, 0x0022);		//
 8006258:	2122      	movs	r1, #34	; 0x22
 800625a:	2000      	movs	r0, #0
 800625c:	f7fb ff66 	bl	800212c <LCD_WriteReg>
 8006260:	f001 bc3a 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0x9328)		//ILI9328   OK
 8006264:	4b7d      	ldr	r3, [pc, #500]	; (800645c <LCD_Init+0x27b8>)
 8006266:	889b      	ldrh	r3, [r3, #4]
 8006268:	f249 3228 	movw	r2, #37672	; 0x9328
 800626c:	4293      	cmp	r3, r2
 800626e:	f040 80f7 	bne.w	8006460 <LCD_Init+0x27bc>
			{
		LCD_WriteReg(0x00EC, 0x108F);		// internal timeing
 8006272:	f241 018f 	movw	r1, #4239	; 0x108f
 8006276:	20ec      	movs	r0, #236	; 0xec
 8006278:	f7fb ff58 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x00EF, 0x1234);		// ADD
 800627c:	f241 2134 	movw	r1, #4660	; 0x1234
 8006280:	20ef      	movs	r0, #239	; 0xef
 8006282:	f7fb ff53 	bl	800212c <LCD_WriteReg>
		//LCD_WriteReg(0x00e7,0x0010);      
		//LCD_WriteReg(0x0000,0x0001);//开启内部时钟
		LCD_WriteReg(0x0001, 0x0100);
 8006286:	f44f 7180 	mov.w	r1, #256	; 0x100
 800628a:	2001      	movs	r0, #1
 800628c:	f7fb ff4e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0700);        //电源开启
 8006290:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8006294:	2002      	movs	r0, #2
 8006296:	f7fb ff49 	bl	800212c <LCD_WriteReg>
		// 1  1   0    D->U	L->R
		// 0  0   1	   R->L U->D
		// 1  0   1    U->D	R->L
		// 0  1   1    L->R U->D 正常就用这个.
		// 1  1   1	   U->D	L->R
		LCD_WriteReg(0x0003, (1 << 12) | (3 << 4) | (0 << 3));		//65K
 800629a:	f241 0130 	movw	r1, #4144	; 0x1030
 800629e:	2003      	movs	r0, #3
 80062a0:	f7fb ff44 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0004, 0x0000);
 80062a4:	2100      	movs	r1, #0
 80062a6:	2004      	movs	r0, #4
 80062a8:	f7fb ff40 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0008, 0x0202);
 80062ac:	f240 2102 	movw	r1, #514	; 0x202
 80062b0:	2008      	movs	r0, #8
 80062b2:	f7fb ff3b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0009, 0x0000);
 80062b6:	2100      	movs	r1, #0
 80062b8:	2009      	movs	r0, #9
 80062ba:	f7fb ff37 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000a, 0x0000);		//display setting
 80062be:	2100      	movs	r1, #0
 80062c0:	200a      	movs	r0, #10
 80062c2:	f7fb ff33 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000c, 0x0001);		//display setting
 80062c6:	2101      	movs	r1, #1
 80062c8:	200c      	movs	r0, #12
 80062ca:	f7fb ff2f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000d, 0x0000);		//0f3c
 80062ce:	2100      	movs	r1, #0
 80062d0:	200d      	movs	r0, #13
 80062d2:	f7fb ff2b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000f, 0x0000);
 80062d6:	2100      	movs	r1, #0
 80062d8:	200f      	movs	r0, #15
 80062da:	f7fb ff27 	bl	800212c <LCD_WriteReg>
		//电源配置
		LCD_WriteReg(0x0010, 0x0000);
 80062de:	2100      	movs	r1, #0
 80062e0:	2010      	movs	r0, #16
 80062e2:	f7fb ff23 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0007);
 80062e6:	2107      	movs	r1, #7
 80062e8:	2011      	movs	r0, #17
 80062ea:	f7fb ff1f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x0000);
 80062ee:	2100      	movs	r1, #0
 80062f0:	2012      	movs	r0, #18
 80062f2:	f7fb ff1b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0013, 0x0000);
 80062f6:	2100      	movs	r1, #0
 80062f8:	2013      	movs	r0, #19
 80062fa:	f7fb ff17 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0001);
 80062fe:	2101      	movs	r1, #1
 8006300:	2007      	movs	r0, #7
 8006302:	f7fb ff13 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 8006306:	2032      	movs	r0, #50	; 0x32
 8006308:	f7fa fbde 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0010, 0x1490);
 800630c:	f241 4190 	movw	r1, #5264	; 0x1490
 8006310:	2010      	movs	r0, #16
 8006312:	f7fb ff0b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0227);
 8006316:	f240 2127 	movw	r1, #551	; 0x227
 800631a:	2011      	movs	r0, #17
 800631c:	f7fb ff06 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 8006320:	2032      	movs	r0, #50	; 0x32
 8006322:	f7fa fbd1 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0012, 0x008A);
 8006326:	218a      	movs	r1, #138	; 0x8a
 8006328:	2012      	movs	r0, #18
 800632a:	f7fb feff 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 800632e:	2032      	movs	r0, #50	; 0x32
 8006330:	f7fa fbca 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0013, 0x1a00);
 8006334:	f44f 51d0 	mov.w	r1, #6656	; 0x1a00
 8006338:	2013      	movs	r0, #19
 800633a:	f7fb fef7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0029, 0x0006);
 800633e:	2106      	movs	r1, #6
 8006340:	2029      	movs	r0, #41	; 0x29
 8006342:	f7fb fef3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x002b, 0x000d);
 8006346:	210d      	movs	r1, #13
 8006348:	202b      	movs	r0, #43	; 0x2b
 800634a:	f7fb feef 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 800634e:	2032      	movs	r0, #50	; 0x32
 8006350:	f7fa fbba 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0020, 0x0000);
 8006354:	2100      	movs	r1, #0
 8006356:	2020      	movs	r0, #32
 8006358:	f7fb fee8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0021, 0x0000);
 800635c:	2100      	movs	r1, #0
 800635e:	2021      	movs	r0, #33	; 0x21
 8006360:	f7fb fee4 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 8006364:	2032      	movs	r0, #50	; 0x32
 8006366:	f7fa fbaf 	bl	8000ac8 <HAL_Delay>
		//伽马校正
		LCD_WriteReg(0x0030, 0x0000);
 800636a:	2100      	movs	r1, #0
 800636c:	2030      	movs	r0, #48	; 0x30
 800636e:	f7fb fedd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x0604);
 8006372:	f240 6104 	movw	r1, #1540	; 0x604
 8006376:	2031      	movs	r0, #49	; 0x31
 8006378:	f7fb fed8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0305);
 800637c:	f240 3105 	movw	r1, #773	; 0x305
 8006380:	2032      	movs	r0, #50	; 0x32
 8006382:	f7fb fed3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x0000);
 8006386:	2100      	movs	r1, #0
 8006388:	2035      	movs	r0, #53	; 0x35
 800638a:	f7fb fecf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x0C09);
 800638e:	f640 4109 	movw	r1, #3081	; 0xc09
 8006392:	2036      	movs	r0, #54	; 0x36
 8006394:	f7fb feca 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x0204);
 8006398:	f44f 7101 	mov.w	r1, #516	; 0x204
 800639c:	2037      	movs	r0, #55	; 0x37
 800639e:	f7fb fec5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0038, 0x0301);
 80063a2:	f240 3101 	movw	r1, #769	; 0x301
 80063a6:	2038      	movs	r0, #56	; 0x38
 80063a8:	f7fb fec0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0039, 0x0707);
 80063ac:	f240 7107 	movw	r1, #1799	; 0x707
 80063b0:	2039      	movs	r0, #57	; 0x39
 80063b2:	f7fb febb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003c, 0x0000);
 80063b6:	2100      	movs	r1, #0
 80063b8:	203c      	movs	r0, #60	; 0x3c
 80063ba:	f7fb feb7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003d, 0x0a0a);
 80063be:	f640 210a 	movw	r1, #2570	; 0xa0a
 80063c2:	203d      	movs	r0, #61	; 0x3d
 80063c4:	f7fb feb2 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 80063c8:	2032      	movs	r0, #50	; 0x32
 80063ca:	f7fa fb7d 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0050, 0x0000); //水平GRAM起始位置
 80063ce:	2100      	movs	r1, #0
 80063d0:	2050      	movs	r0, #80	; 0x50
 80063d2:	f7fb feab 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0051, 0x00ef); //水平GRAM终止位置
 80063d6:	21ef      	movs	r1, #239	; 0xef
 80063d8:	2051      	movs	r0, #81	; 0x51
 80063da:	f7fb fea7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0052, 0x0000); //垂直GRAM起始位置
 80063de:	2100      	movs	r1, #0
 80063e0:	2052      	movs	r0, #82	; 0x52
 80063e2:	f7fb fea3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0053, 0x013f); //垂直GRAM终止位置
 80063e6:	f240 113f 	movw	r1, #319	; 0x13f
 80063ea:	2053      	movs	r0, #83	; 0x53
 80063ec:	f7fb fe9e 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0060, 0xa700);
 80063f0:	f44f 4127 	mov.w	r1, #42752	; 0xa700
 80063f4:	2060      	movs	r0, #96	; 0x60
 80063f6:	f7fb fe99 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0061, 0x0001);
 80063fa:	2101      	movs	r1, #1
 80063fc:	2061      	movs	r0, #97	; 0x61
 80063fe:	f7fb fe95 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x006a, 0x0000);
 8006402:	2100      	movs	r1, #0
 8006404:	206a      	movs	r0, #106	; 0x6a
 8006406:	f7fb fe91 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0080, 0x0000);
 800640a:	2100      	movs	r1, #0
 800640c:	2080      	movs	r0, #128	; 0x80
 800640e:	f7fb fe8d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0081, 0x0000);
 8006412:	2100      	movs	r1, #0
 8006414:	2081      	movs	r0, #129	; 0x81
 8006416:	f7fb fe89 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0082, 0x0000);
 800641a:	2100      	movs	r1, #0
 800641c:	2082      	movs	r0, #130	; 0x82
 800641e:	f7fb fe85 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0083, 0x0000);
 8006422:	2100      	movs	r1, #0
 8006424:	2083      	movs	r0, #131	; 0x83
 8006426:	f7fb fe81 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0084, 0x0000);
 800642a:	2100      	movs	r1, #0
 800642c:	2084      	movs	r0, #132	; 0x84
 800642e:	f7fb fe7d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0085, 0x0000);
 8006432:	2100      	movs	r1, #0
 8006434:	2085      	movs	r0, #133	; 0x85
 8006436:	f7fb fe79 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0090, 0x0010);
 800643a:	2110      	movs	r1, #16
 800643c:	2090      	movs	r0, #144	; 0x90
 800643e:	f7fb fe75 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0092, 0x0600);
 8006442:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006446:	2092      	movs	r0, #146	; 0x92
 8006448:	f7fb fe70 	bl	800212c <LCD_WriteReg>
		//开启显示设置
		LCD_WriteReg(0x0007, 0x0133);
 800644c:	f240 1133 	movw	r1, #307	; 0x133
 8006450:	2007      	movs	r0, #7
 8006452:	f7fb fe6b 	bl	800212c <LCD_WriteReg>
 8006456:	f001 bb3f 	b.w	8007ad8 <LCD_Init+0x3e34>
 800645a:	bf00      	nop
 800645c:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0x9320) //测试OK.
 8006460:	4bce      	ldr	r3, [pc, #824]	; (800679c <LCD_Init+0x2af8>)
 8006462:	889b      	ldrh	r3, [r3, #4]
 8006464:	f249 3220 	movw	r2, #37664	; 0x9320
 8006468:	4293      	cmp	r3, r2
 800646a:	f040 80ad 	bne.w	80065c8 <LCD_Init+0x2924>
			{
		LCD_WriteReg(0x00, 0x0000);
 800646e:	2100      	movs	r1, #0
 8006470:	2000      	movs	r0, #0
 8006472:	f7fb fe5b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x01, 0x0100);	//Driver Output Contral.
 8006476:	f44f 7180 	mov.w	r1, #256	; 0x100
 800647a:	2001      	movs	r0, #1
 800647c:	f7fb fe56 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x02, 0x0700);	//LCD Driver Waveform Contral.
 8006480:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8006484:	2002      	movs	r0, #2
 8006486:	f7fb fe51 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x03, 0x1030);	//Entry Mode Set.
 800648a:	f241 0130 	movw	r1, #4144	; 0x1030
 800648e:	2003      	movs	r0, #3
 8006490:	f7fb fe4c 	bl	800212c <LCD_WriteReg>
		//LCD_WriteReg(0x03,0x1018);	//Entry Mode Set.

		LCD_WriteReg(0x04, 0x0000);	//Scalling Contral.
 8006494:	2100      	movs	r1, #0
 8006496:	2004      	movs	r0, #4
 8006498:	f7fb fe48 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x08, 0x0202);	//Display Contral 2.(0x0207)
 800649c:	f240 2102 	movw	r1, #514	; 0x202
 80064a0:	2008      	movs	r0, #8
 80064a2:	f7fb fe43 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x09, 0x0000);	//Display Contral 3.(0x0000)
 80064a6:	2100      	movs	r1, #0
 80064a8:	2009      	movs	r0, #9
 80064aa:	f7fb fe3f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0a, 0x0000);	//Frame Cycle Contal.(0x0000)
 80064ae:	2100      	movs	r1, #0
 80064b0:	200a      	movs	r0, #10
 80064b2:	f7fb fe3b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0c, (1 << 0));	//Extern Display Interface Contral 1.(0x0000)
 80064b6:	2101      	movs	r1, #1
 80064b8:	200c      	movs	r0, #12
 80064ba:	f7fb fe37 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0d, 0x0000);	//Frame Maker Position.
 80064be:	2100      	movs	r1, #0
 80064c0:	200d      	movs	r0, #13
 80064c2:	f7fb fe33 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0f, 0x0000);	//Extern Display Interface Contral 2.
 80064c6:	2100      	movs	r1, #0
 80064c8:	200f      	movs	r0, #15
 80064ca:	f7fb fe2f 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 80064ce:	2032      	movs	r0, #50	; 0x32
 80064d0:	f7fa fafa 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x07, 0x0101);	//Display Contral.
 80064d4:	f240 1101 	movw	r1, #257	; 0x101
 80064d8:	2007      	movs	r0, #7
 80064da:	f7fb fe27 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 80064de:	2032      	movs	r0, #50	; 0x32
 80064e0:	f7fa faf2 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x10, (1 << 12) | (0 << 8) | (1 << 7) | (1 << 6) | (0 << 4));//Power Control 1.(0x16b0)
 80064e4:	f44f 5186 	mov.w	r1, #4288	; 0x10c0
 80064e8:	2010      	movs	r0, #16
 80064ea:	f7fb fe1f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x11, 0x0007);								//Power Control 2.(0x0001)
 80064ee:	2107      	movs	r1, #7
 80064f0:	2011      	movs	r0, #17
 80064f2:	f7fb fe1b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x12, (1 << 8) | (1 << 4) | (0 << 0));	//Power Control 3.(0x0138)
 80064f6:	f44f 7188 	mov.w	r1, #272	; 0x110
 80064fa:	2012      	movs	r0, #18
 80064fc:	f7fb fe16 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x13, 0x0b00);								//Power Control 4.
 8006500:	f44f 6130 	mov.w	r1, #2816	; 0xb00
 8006504:	2013      	movs	r0, #19
 8006506:	f7fb fe11 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x29, 0x0000);								//Power Control 7.
 800650a:	2100      	movs	r1, #0
 800650c:	2029      	movs	r0, #41	; 0x29
 800650e:	f7fb fe0d 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x2b, (1 << 14) | (1 << 4));
 8006512:	f244 0110 	movw	r1, #16400	; 0x4010
 8006516:	202b      	movs	r0, #43	; 0x2b
 8006518:	f7fb fe08 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x50, 0);	//Set X Star
 800651c:	2100      	movs	r1, #0
 800651e:	2050      	movs	r0, #80	; 0x50
 8006520:	f7fb fe04 	bl	800212c <LCD_WriteReg>
		//水平GRAM终止位置Set X End.
		LCD_WriteReg(0x51, 239);	//Set Y Star
 8006524:	21ef      	movs	r1, #239	; 0xef
 8006526:	2051      	movs	r0, #81	; 0x51
 8006528:	f7fb fe00 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x52, 0);	//Set Y End.t.
 800652c:	2100      	movs	r1, #0
 800652e:	2052      	movs	r0, #82	; 0x52
 8006530:	f7fb fdfc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x53, 319);	//
 8006534:	f240 113f 	movw	r1, #319	; 0x13f
 8006538:	2053      	movs	r0, #83	; 0x53
 800653a:	f7fb fdf7 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x60, 0x2700);	//Driver Output Control.
 800653e:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006542:	2060      	movs	r0, #96	; 0x60
 8006544:	f7fb fdf2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x61, 0x0001);	//Driver Output Control.
 8006548:	2101      	movs	r1, #1
 800654a:	2061      	movs	r0, #97	; 0x61
 800654c:	f7fb fdee 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x6a, 0x0000);	//Vertical Srcoll Control.
 8006550:	2100      	movs	r1, #0
 8006552:	206a      	movs	r0, #106	; 0x6a
 8006554:	f7fb fdea 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x80, 0x0000);	//Display Position? Partial Display 1.
 8006558:	2100      	movs	r1, #0
 800655a:	2080      	movs	r0, #128	; 0x80
 800655c:	f7fb fde6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x81, 0x0000);	//RAM Address Start? Partial Display 1.
 8006560:	2100      	movs	r1, #0
 8006562:	2081      	movs	r0, #129	; 0x81
 8006564:	f7fb fde2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x82, 0x0000);	//RAM Address End-Partial Display 1.
 8006568:	2100      	movs	r1, #0
 800656a:	2082      	movs	r0, #130	; 0x82
 800656c:	f7fb fdde 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x83, 0x0000);	//Displsy Position? Partial Display 2.
 8006570:	2100      	movs	r1, #0
 8006572:	2083      	movs	r0, #131	; 0x83
 8006574:	f7fb fdda 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x84, 0x0000);	//RAM Address Start? Partial Display 2.
 8006578:	2100      	movs	r1, #0
 800657a:	2084      	movs	r0, #132	; 0x84
 800657c:	f7fb fdd6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x85, 0x0000);	//RAM Address End? Partial Display 2.
 8006580:	2100      	movs	r1, #0
 8006582:	2085      	movs	r0, #133	; 0x85
 8006584:	f7fb fdd2 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x90, (0 << 7) | (16 << 0));	//Frame Cycle Contral.(0x0013)
 8006588:	2110      	movs	r1, #16
 800658a:	2090      	movs	r0, #144	; 0x90
 800658c:	f7fb fdce 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x92, 0x0000);	//Panel Interface Contral 2.(0x0000)
 8006590:	2100      	movs	r1, #0
 8006592:	2092      	movs	r0, #146	; 0x92
 8006594:	f7fb fdca 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x93, 0x0001);	//Panel Interface Contral 3.
 8006598:	2101      	movs	r1, #1
 800659a:	2093      	movs	r0, #147	; 0x93
 800659c:	f7fb fdc6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x95, 0x0110);	//Frame Cycle Contral.(0x0110)
 80065a0:	f44f 7188 	mov.w	r1, #272	; 0x110
 80065a4:	2095      	movs	r0, #149	; 0x95
 80065a6:	f7fb fdc1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x97, (0 << 8));	//
 80065aa:	2100      	movs	r1, #0
 80065ac:	2097      	movs	r0, #151	; 0x97
 80065ae:	f7fb fdbd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x98, 0x0000);	//Frame Cycle Contral.
 80065b2:	2100      	movs	r1, #0
 80065b4:	2098      	movs	r0, #152	; 0x98
 80065b6:	f7fb fdb9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x07, 0x0173);	//(0x0173)
 80065ba:	f240 1173 	movw	r1, #371	; 0x173
 80065be:	2007      	movs	r0, #7
 80065c0:	f7fb fdb4 	bl	800212c <LCD_WriteReg>
 80065c4:	f001 ba88 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0X9331)	//OK |/|/|
 80065c8:	4b74      	ldr	r3, [pc, #464]	; (800679c <LCD_Init+0x2af8>)
 80065ca:	889b      	ldrh	r3, [r3, #4]
 80065cc:	f249 3231 	movw	r2, #37681	; 0x9331
 80065d0:	4293      	cmp	r3, r2
 80065d2:	f040 80e5 	bne.w	80067a0 <LCD_Init+0x2afc>
			{
		LCD_WriteReg(0x00E7, 0x1014);
 80065d6:	f241 0114 	movw	r1, #4116	; 0x1014
 80065da:	20e7      	movs	r0, #231	; 0xe7
 80065dc:	f7fb fda6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0001, 0x0100); // set SS and SM bit
 80065e0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80065e4:	2001      	movs	r0, #1
 80065e6:	f7fb fda1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0200); // set 1 line inversion
 80065ea:	f44f 7100 	mov.w	r1, #512	; 0x200
 80065ee:	2002      	movs	r0, #2
 80065f0:	f7fb fd9c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0003, (1 << 12) | (3 << 4) | (1 << 3)); //65K
 80065f4:	f241 0138 	movw	r1, #4152	; 0x1038
 80065f8:	2003      	movs	r0, #3
 80065fa:	f7fb fd97 	bl	800212c <LCD_WriteReg>
		//LCD_WriteReg(0x0003, 0x1030); // set GRAM write direction and BGR=1.
		LCD_WriteReg(0x0008, 0x0202); // set the back porch and front porch
 80065fe:	f240 2102 	movw	r1, #514	; 0x202
 8006602:	2008      	movs	r0, #8
 8006604:	f7fb fd92 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0009, 0x0000); // set non-display area refresh cycle ISC[3:0]
 8006608:	2100      	movs	r1, #0
 800660a:	2009      	movs	r0, #9
 800660c:	f7fb fd8e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000A, 0x0000); // FMARK function
 8006610:	2100      	movs	r1, #0
 8006612:	200a      	movs	r0, #10
 8006614:	f7fb fd8a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000C, 0x0000); // RGB interface setting
 8006618:	2100      	movs	r1, #0
 800661a:	200c      	movs	r0, #12
 800661c:	f7fb fd86 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000D, 0x0000); // Frame marker Position
 8006620:	2100      	movs	r1, #0
 8006622:	200d      	movs	r0, #13
 8006624:	f7fb fd82 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000F, 0x0000); // RGB interface polarity
 8006628:	2100      	movs	r1, #0
 800662a:	200f      	movs	r0, #15
 800662c:	f7fb fd7e 	bl	800212c <LCD_WriteReg>
		//*************Power On sequence ****************//
		LCD_WriteReg(0x0010, 0x0000); // SAP, BT[3:0], AP, DSTB, SLP, STB
 8006630:	2100      	movs	r1, #0
 8006632:	2010      	movs	r0, #16
 8006634:	f7fb fd7a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0007); // DC1[2:0], DC0[2:0], VC[2:0]
 8006638:	2107      	movs	r1, #7
 800663a:	2011      	movs	r0, #17
 800663c:	f7fb fd76 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x0000); // VREG1OUT voltage
 8006640:	2100      	movs	r1, #0
 8006642:	2012      	movs	r0, #18
 8006644:	f7fb fd72 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0013, 0x0000); // VDV[4:0] for VCOM amplitude
 8006648:	2100      	movs	r1, #0
 800664a:	2013      	movs	r0, #19
 800664c:	f7fb fd6e 	bl	800212c <LCD_WriteReg>
		HAL_Delay(200); // Dis-charge capacitor power voltage
 8006650:	20c8      	movs	r0, #200	; 0xc8
 8006652:	f7fa fa39 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0010, 0x1690); // SAP, BT[3:0], AP, DSTB, SLP, STB
 8006656:	f241 6190 	movw	r1, #5776	; 0x1690
 800665a:	2010      	movs	r0, #16
 800665c:	f7fb fd66 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0227); // DC1[2:0], DC0[2:0], VC[2:0]
 8006660:	f240 2127 	movw	r1, #551	; 0x227
 8006664:	2011      	movs	r0, #17
 8006666:	f7fb fd61 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50); // Delay 50ms
 800666a:	2032      	movs	r0, #50	; 0x32
 800666c:	f7fa fa2c 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0012, 0x000C); // Internal reference voltage= Vci;
 8006670:	210c      	movs	r1, #12
 8006672:	2012      	movs	r0, #18
 8006674:	f7fb fd5a 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50); // Delay 50ms
 8006678:	2032      	movs	r0, #50	; 0x32
 800667a:	f7fa fa25 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0013, 0x0800); // Set VDV[4:0] for VCOM amplitude
 800667e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8006682:	2013      	movs	r0, #19
 8006684:	f7fb fd52 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0029, 0x0011); // Set VCM[5:0] for VCOMH
 8006688:	2111      	movs	r1, #17
 800668a:	2029      	movs	r0, #41	; 0x29
 800668c:	f7fb fd4e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x002B, 0x000B); // Set Frame Rate
 8006690:	210b      	movs	r1, #11
 8006692:	202b      	movs	r0, #43	; 0x2b
 8006694:	f7fb fd4a 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50); // Delay 50ms
 8006698:	2032      	movs	r0, #50	; 0x32
 800669a:	f7fa fa15 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0020, 0x0000); // GRAM horizontal Address
 800669e:	2100      	movs	r1, #0
 80066a0:	2020      	movs	r0, #32
 80066a2:	f7fb fd43 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0021, 0x013f); // GRAM Vertical Address
 80066a6:	f240 113f 	movw	r1, #319	; 0x13f
 80066aa:	2021      	movs	r0, #33	; 0x21
 80066ac:	f7fb fd3e 	bl	800212c <LCD_WriteReg>
		// ----------- Adjust the Gamma Curve ----------//
		LCD_WriteReg(0x0030, 0x0000);
 80066b0:	2100      	movs	r1, #0
 80066b2:	2030      	movs	r0, #48	; 0x30
 80066b4:	f7fb fd3a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x0106);
 80066b8:	f44f 7183 	mov.w	r1, #262	; 0x106
 80066bc:	2031      	movs	r0, #49	; 0x31
 80066be:	f7fb fd35 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0000);
 80066c2:	2100      	movs	r1, #0
 80066c4:	2032      	movs	r0, #50	; 0x32
 80066c6:	f7fb fd31 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x0204);
 80066ca:	f44f 7101 	mov.w	r1, #516	; 0x204
 80066ce:	2035      	movs	r0, #53	; 0x35
 80066d0:	f7fb fd2c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x160A);
 80066d4:	f241 610a 	movw	r1, #5642	; 0x160a
 80066d8:	2036      	movs	r0, #54	; 0x36
 80066da:	f7fb fd27 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x0707);
 80066de:	f240 7107 	movw	r1, #1799	; 0x707
 80066e2:	2037      	movs	r0, #55	; 0x37
 80066e4:	f7fb fd22 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0038, 0x0106);
 80066e8:	f44f 7183 	mov.w	r1, #262	; 0x106
 80066ec:	2038      	movs	r0, #56	; 0x38
 80066ee:	f7fb fd1d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0039, 0x0707);
 80066f2:	f240 7107 	movw	r1, #1799	; 0x707
 80066f6:	2039      	movs	r0, #57	; 0x39
 80066f8:	f7fb fd18 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003C, 0x0402);
 80066fc:	f240 4102 	movw	r1, #1026	; 0x402
 8006700:	203c      	movs	r0, #60	; 0x3c
 8006702:	f7fb fd13 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003D, 0x0C0F);
 8006706:	f640 410f 	movw	r1, #3087	; 0xc0f
 800670a:	203d      	movs	r0, #61	; 0x3d
 800670c:	f7fb fd0e 	bl	800212c <LCD_WriteReg>
		//------------------ Set GRAM area ---------------//
		LCD_WriteReg(0x0050, 0x0000); // Horizontal GRAM Start Address
 8006710:	2100      	movs	r1, #0
 8006712:	2050      	movs	r0, #80	; 0x50
 8006714:	f7fb fd0a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0051, 0x00EF); // Horizontal GRAM End Address
 8006718:	21ef      	movs	r1, #239	; 0xef
 800671a:	2051      	movs	r0, #81	; 0x51
 800671c:	f7fb fd06 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0052, 0x0000); // Vertical GRAM Start Address
 8006720:	2100      	movs	r1, #0
 8006722:	2052      	movs	r0, #82	; 0x52
 8006724:	f7fb fd02 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0053, 0x013F); // Vertical GRAM Start Address
 8006728:	f240 113f 	movw	r1, #319	; 0x13f
 800672c:	2053      	movs	r0, #83	; 0x53
 800672e:	f7fb fcfd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0060, 0x2700); // Gate Scan Line
 8006732:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006736:	2060      	movs	r0, #96	; 0x60
 8006738:	f7fb fcf8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0061, 0x0001); // NDL,VLE, REV 
 800673c:	2101      	movs	r1, #1
 800673e:	2061      	movs	r0, #97	; 0x61
 8006740:	f7fb fcf4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x006A, 0x0000); // set scrolling line
 8006744:	2100      	movs	r1, #0
 8006746:	206a      	movs	r0, #106	; 0x6a
 8006748:	f7fb fcf0 	bl	800212c <LCD_WriteReg>
		//-------------- Partial Display Control ---------//
		LCD_WriteReg(0x0080, 0x0000);
 800674c:	2100      	movs	r1, #0
 800674e:	2080      	movs	r0, #128	; 0x80
 8006750:	f7fb fcec 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0081, 0x0000);
 8006754:	2100      	movs	r1, #0
 8006756:	2081      	movs	r0, #129	; 0x81
 8006758:	f7fb fce8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0082, 0x0000);
 800675c:	2100      	movs	r1, #0
 800675e:	2082      	movs	r0, #130	; 0x82
 8006760:	f7fb fce4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0083, 0x0000);
 8006764:	2100      	movs	r1, #0
 8006766:	2083      	movs	r0, #131	; 0x83
 8006768:	f7fb fce0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0084, 0x0000);
 800676c:	2100      	movs	r1, #0
 800676e:	2084      	movs	r0, #132	; 0x84
 8006770:	f7fb fcdc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0085, 0x0000);
 8006774:	2100      	movs	r1, #0
 8006776:	2085      	movs	r0, #133	; 0x85
 8006778:	f7fb fcd8 	bl	800212c <LCD_WriteReg>
		//-------------- Panel Control -------------------//
		LCD_WriteReg(0x0090, 0x0010);
 800677c:	2110      	movs	r1, #16
 800677e:	2090      	movs	r0, #144	; 0x90
 8006780:	f7fb fcd4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0092, 0x0600);
 8006784:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006788:	2092      	movs	r0, #146	; 0x92
 800678a:	f7fb fccf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0133); // 262K color and display ON
 800678e:	f240 1133 	movw	r1, #307	; 0x133
 8006792:	2007      	movs	r0, #7
 8006794:	f7fb fcca 	bl	800212c <LCD_WriteReg>
 8006798:	f001 b99e 	b.w	8007ad8 <LCD_Init+0x3e34>
 800679c:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0x5408) {
 80067a0:	4be2      	ldr	r3, [pc, #904]	; (8006b2c <LCD_Init+0x2e88>)
 80067a2:	889b      	ldrh	r3, [r3, #4]
 80067a4:	f245 4208 	movw	r2, #21512	; 0x5408
 80067a8:	4293      	cmp	r3, r2
 80067aa:	f040 80a3 	bne.w	80068f4 <LCD_Init+0x2c50>
		LCD_WriteReg(0x01, 0x0100);
 80067ae:	f44f 7180 	mov.w	r1, #256	; 0x100
 80067b2:	2001      	movs	r0, #1
 80067b4:	f7fb fcba 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x02, 0x0700); //LCD Driving Waveform Contral
 80067b8:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 80067bc:	2002      	movs	r0, #2
 80067be:	f7fb fcb5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x03, 0x1030); //Entry Mode设置
 80067c2:	f241 0130 	movw	r1, #4144	; 0x1030
 80067c6:	2003      	movs	r0, #3
 80067c8:	f7fb fcb0 	bl	800212c <LCD_WriteReg>
		//指针从左至右自上而下的自动增模式
		//Normal Mode(Window Mode disable)
		//RGB格式
		//16位数据2次传输的8总线设置
		LCD_WriteReg(0x04, 0x0000); //Scalling Control register
 80067cc:	2100      	movs	r1, #0
 80067ce:	2004      	movs	r0, #4
 80067d0:	f7fb fcac 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x08, 0x0207); //Display Control 2
 80067d4:	f240 2107 	movw	r1, #519	; 0x207
 80067d8:	2008      	movs	r0, #8
 80067da:	f7fb fca7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x09, 0x0000); //Display Control 3
 80067de:	2100      	movs	r1, #0
 80067e0:	2009      	movs	r0, #9
 80067e2:	f7fb fca3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0A, 0x0000); //Frame Cycle Control
 80067e6:	2100      	movs	r1, #0
 80067e8:	200a      	movs	r0, #10
 80067ea:	f7fb fc9f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0C, 0x0000); //External Display Interface Control 1
 80067ee:	2100      	movs	r1, #0
 80067f0:	200c      	movs	r0, #12
 80067f2:	f7fb fc9b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0D, 0x0000); //Frame Maker Position
 80067f6:	2100      	movs	r1, #0
 80067f8:	200d      	movs	r0, #13
 80067fa:	f7fb fc97 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0F, 0x0000); //External Display Interface Control 2
 80067fe:	2100      	movs	r1, #0
 8006800:	200f      	movs	r0, #15
 8006802:	f7fb fc93 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006806:	2014      	movs	r0, #20
 8006808:	f7fa f95e 	bl	8000ac8 <HAL_Delay>
		//TFT 液晶彩色图像显示方法14
		LCD_WriteReg(0x10, 0x16B0); //0x14B0 //Power Control 1
 800680c:	f241 61b0 	movw	r1, #5808	; 0x16b0
 8006810:	2010      	movs	r0, #16
 8006812:	f7fb fc8b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x11, 0x0001); //0x0007 //Power Control 2
 8006816:	2101      	movs	r1, #1
 8006818:	2011      	movs	r0, #17
 800681a:	f7fb fc87 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x17, 0x0001); //0x0000 //Power Control 3
 800681e:	2101      	movs	r1, #1
 8006820:	2017      	movs	r0, #23
 8006822:	f7fb fc83 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x12, 0x0138); //0x013B //Power Control 4
 8006826:	f44f 719c 	mov.w	r1, #312	; 0x138
 800682a:	2012      	movs	r0, #18
 800682c:	f7fb fc7e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x13, 0x0800); //0x0800 //Power Control 5
 8006830:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8006834:	2013      	movs	r0, #19
 8006836:	f7fb fc79 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x29, 0x0009); //NVM read data 2
 800683a:	2109      	movs	r1, #9
 800683c:	2029      	movs	r0, #41	; 0x29
 800683e:	f7fb fc75 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x2a, 0x0009); //NVM read data 3
 8006842:	2109      	movs	r1, #9
 8006844:	202a      	movs	r0, #42	; 0x2a
 8006846:	f7fb fc71 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0xa4, 0x0000);
 800684a:	2100      	movs	r1, #0
 800684c:	20a4      	movs	r0, #164	; 0xa4
 800684e:	f7fb fc6d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x50, 0x0000); //设置操作窗口的X轴开始列
 8006852:	2100      	movs	r1, #0
 8006854:	2050      	movs	r0, #80	; 0x50
 8006856:	f7fb fc69 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x51, 0x00EF); //设置操作窗口的X轴结束列
 800685a:	21ef      	movs	r1, #239	; 0xef
 800685c:	2051      	movs	r0, #81	; 0x51
 800685e:	f7fb fc65 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x52, 0x0000); //设置操作窗口的Y轴开始行
 8006862:	2100      	movs	r1, #0
 8006864:	2052      	movs	r0, #82	; 0x52
 8006866:	f7fb fc61 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x53, 0x013F); //设置操作窗口的Y轴结束行
 800686a:	f240 113f 	movw	r1, #319	; 0x13f
 800686e:	2053      	movs	r0, #83	; 0x53
 8006870:	f7fb fc5c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x60, 0x2700); //Driver Output Control
 8006874:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006878:	2060      	movs	r0, #96	; 0x60
 800687a:	f7fb fc57 	bl	800212c <LCD_WriteReg>
		//设置屏幕的点数以及扫描的起始行
		LCD_WriteReg(0x61, 0x0001); //Driver Output Control
 800687e:	2101      	movs	r1, #1
 8006880:	2061      	movs	r0, #97	; 0x61
 8006882:	f7fb fc53 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x6A, 0x0000); //Vertical Scroll Control
 8006886:	2100      	movs	r1, #0
 8006888:	206a      	movs	r0, #106	; 0x6a
 800688a:	f7fb fc4f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x80, 0x0000); //Display Position – Partial Display 1
 800688e:	2100      	movs	r1, #0
 8006890:	2080      	movs	r0, #128	; 0x80
 8006892:	f7fb fc4b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x81, 0x0000); //RAM Address Start – Partial Display 1
 8006896:	2100      	movs	r1, #0
 8006898:	2081      	movs	r0, #129	; 0x81
 800689a:	f7fb fc47 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x82, 0x0000); //RAM address End - Partial Display 1
 800689e:	2100      	movs	r1, #0
 80068a0:	2082      	movs	r0, #130	; 0x82
 80068a2:	f7fb fc43 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x83, 0x0000); //Display Position – Partial Display 2
 80068a6:	2100      	movs	r1, #0
 80068a8:	2083      	movs	r0, #131	; 0x83
 80068aa:	f7fb fc3f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x84, 0x0000); //RAM Address Start – Partial Display 2
 80068ae:	2100      	movs	r1, #0
 80068b0:	2084      	movs	r0, #132	; 0x84
 80068b2:	f7fb fc3b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x85, 0x0000); //RAM address End – Partail Display2
 80068b6:	2100      	movs	r1, #0
 80068b8:	2085      	movs	r0, #133	; 0x85
 80068ba:	f7fb fc37 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x90, 0x0013); //Frame Cycle Control
 80068be:	2113      	movs	r1, #19
 80068c0:	2090      	movs	r0, #144	; 0x90
 80068c2:	f7fb fc33 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x92, 0x0000);  //Panel Interface Control 2
 80068c6:	2100      	movs	r1, #0
 80068c8:	2092      	movs	r0, #146	; 0x92
 80068ca:	f7fb fc2f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x93, 0x0003); //Panel Interface control 3
 80068ce:	2103      	movs	r1, #3
 80068d0:	2093      	movs	r0, #147	; 0x93
 80068d2:	f7fb fc2b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x95, 0x0110);  //Frame Cycle Control
 80068d6:	f44f 7188 	mov.w	r1, #272	; 0x110
 80068da:	2095      	movs	r0, #149	; 0x95
 80068dc:	f7fb fc26 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x07, 0x0173);
 80068e0:	f240 1173 	movw	r1, #371	; 0x173
 80068e4:	2007      	movs	r0, #7
 80068e6:	f7fb fc21 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 80068ea:	2032      	movs	r0, #50	; 0x32
 80068ec:	f7fa f8ec 	bl	8000ac8 <HAL_Delay>
 80068f0:	f001 b8f2 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0x1505)  //OK
 80068f4:	4b8d      	ldr	r3, [pc, #564]	; (8006b2c <LCD_Init+0x2e88>)
 80068f6:	889b      	ldrh	r3, [r3, #4]
 80068f8:	f241 5205 	movw	r2, #5381	; 0x1505
 80068fc:	4293      	cmp	r3, r2
 80068fe:	f040 8117 	bne.w	8006b30 <LCD_Init+0x2e8c>
			{
		// second release on 3/5  ,luminance is acceptable,water wave appear during camera preview
		LCD_WriteReg(0x0007, 0x0000);
 8006902:	2100      	movs	r1, #0
 8006904:	2007      	movs	r0, #7
 8006906:	f7fb fc11 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 800690a:	2032      	movs	r0, #50	; 0x32
 800690c:	f7fa f8dc 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0012, 0x011C);  //0x011A   why need to set several times?
 8006910:	f44f 718e 	mov.w	r1, #284	; 0x11c
 8006914:	2012      	movs	r0, #18
 8006916:	f7fb fc09 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x00A4, 0x0001);  //NVM
 800691a:	2101      	movs	r1, #1
 800691c:	20a4      	movs	r0, #164	; 0xa4
 800691e:	f7fb fc05 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0008, 0x000F);
 8006922:	210f      	movs	r1, #15
 8006924:	2008      	movs	r0, #8
 8006926:	f7fb fc01 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000A, 0x0008);
 800692a:	2108      	movs	r1, #8
 800692c:	200a      	movs	r0, #10
 800692e:	f7fb fbfd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000D, 0x0008);
 8006932:	2108      	movs	r1, #8
 8006934:	200d      	movs	r0, #13
 8006936:	f7fb fbf9 	bl	800212c <LCD_WriteReg>
		//伽马校正
		LCD_WriteReg(0x0030, 0x0707);
 800693a:	f240 7107 	movw	r1, #1799	; 0x707
 800693e:	2030      	movs	r0, #48	; 0x30
 8006940:	f7fb fbf4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x0007); //0x0707
 8006944:	2107      	movs	r1, #7
 8006946:	2031      	movs	r0, #49	; 0x31
 8006948:	f7fb fbf0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0603);
 800694c:	f240 6103 	movw	r1, #1539	; 0x603
 8006950:	2032      	movs	r0, #50	; 0x32
 8006952:	f7fb fbeb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0033, 0x0700);
 8006956:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 800695a:	2033      	movs	r0, #51	; 0x33
 800695c:	f7fb fbe6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0034, 0x0202);
 8006960:	f240 2102 	movw	r1, #514	; 0x202
 8006964:	2034      	movs	r0, #52	; 0x34
 8006966:	f7fb fbe1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x0002); //?0x0606
 800696a:	2102      	movs	r1, #2
 800696c:	2035      	movs	r0, #53	; 0x35
 800696e:	f7fb fbdd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x1F0F);
 8006972:	f641 710f 	movw	r1, #7951	; 0x1f0f
 8006976:	2036      	movs	r0, #54	; 0x36
 8006978:	f7fb fbd8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x0707); //0x0f0f  0x0105
 800697c:	f240 7107 	movw	r1, #1799	; 0x707
 8006980:	2037      	movs	r0, #55	; 0x37
 8006982:	f7fb fbd3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0038, 0x0000);
 8006986:	2100      	movs	r1, #0
 8006988:	2038      	movs	r0, #56	; 0x38
 800698a:	f7fb fbcf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0039, 0x0000);
 800698e:	2100      	movs	r1, #0
 8006990:	2039      	movs	r0, #57	; 0x39
 8006992:	f7fb fbcb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003A, 0x0707);
 8006996:	f240 7107 	movw	r1, #1799	; 0x707
 800699a:	203a      	movs	r0, #58	; 0x3a
 800699c:	f7fb fbc6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003B, 0x0000); //0x0303
 80069a0:	2100      	movs	r1, #0
 80069a2:	203b      	movs	r0, #59	; 0x3b
 80069a4:	f7fb fbc2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003C, 0x0007); //?0x0707
 80069a8:	2107      	movs	r1, #7
 80069aa:	203c      	movs	r0, #60	; 0x3c
 80069ac:	f7fb fbbe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003D, 0x0000); //0x1313//0x1f08
 80069b0:	2100      	movs	r1, #0
 80069b2:	203d      	movs	r0, #61	; 0x3d
 80069b4:	f7fb fbba 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 80069b8:	2032      	movs	r0, #50	; 0x32
 80069ba:	f7fa f885 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0007, 0x0001);
 80069be:	2101      	movs	r1, #1
 80069c0:	2007      	movs	r0, #7
 80069c2:	f7fb fbb3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0017, 0x0001); //开启电源
 80069c6:	2101      	movs	r1, #1
 80069c8:	2017      	movs	r0, #23
 80069ca:	f7fb fbaf 	bl	800212c <LCD_WriteReg>
		HAL_Delay(50);
 80069ce:	2032      	movs	r0, #50	; 0x32
 80069d0:	f7fa f87a 	bl	8000ac8 <HAL_Delay>
		//电源配置
		LCD_WriteReg(0x0010, 0x17A0);
 80069d4:	f44f 51bd 	mov.w	r1, #6048	; 0x17a0
 80069d8:	2010      	movs	r0, #16
 80069da:	f7fb fba7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0217); //reference voltage VC[2:0]   Vciout = 1.00*Vcivl
 80069de:	f240 2117 	movw	r1, #535	; 0x217
 80069e2:	2011      	movs	r0, #17
 80069e4:	f7fb fba2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x011E); //0x011c  //Vreg1out = Vcilvl*1.80   is it the same as Vgama1out ?
 80069e8:	f44f 718f 	mov.w	r1, #286	; 0x11e
 80069ec:	2012      	movs	r0, #18
 80069ee:	f7fb fb9d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0013, 0x0F00); //VDV[4:0]-->VCOM Amplitude VcomL = VcomH - Vcom Ampl
 80069f2:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 80069f6:	2013      	movs	r0, #19
 80069f8:	f7fb fb98 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x002A, 0x0000);
 80069fc:	2100      	movs	r1, #0
 80069fe:	202a      	movs	r0, #42	; 0x2a
 8006a00:	f7fb fb94 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0029, 0x000A); //0x0001F  Vcomh = VCM1[4:0]*Vreg1out    gate source voltage??
 8006a04:	210a      	movs	r1, #10
 8006a06:	2029      	movs	r0, #41	; 0x29
 8006a08:	f7fb fb90 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x013E); // 0x013C  power supply on
 8006a0c:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8006a10:	2012      	movs	r0, #18
 8006a12:	f7fb fb8b 	bl	800212c <LCD_WriteReg>
		//Coordinates Control//
		LCD_WriteReg(0x0050, 0x0000);        //0x0e00
 8006a16:	2100      	movs	r1, #0
 8006a18:	2050      	movs	r0, #80	; 0x50
 8006a1a:	f7fb fb87 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0051, 0x00EF);
 8006a1e:	21ef      	movs	r1, #239	; 0xef
 8006a20:	2051      	movs	r0, #81	; 0x51
 8006a22:	f7fb fb83 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0052, 0x0000);
 8006a26:	2100      	movs	r1, #0
 8006a28:	2052      	movs	r0, #82	; 0x52
 8006a2a:	f7fb fb7f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0053, 0x013F);
 8006a2e:	f240 113f 	movw	r1, #319	; 0x13f
 8006a32:	2053      	movs	r0, #83	; 0x53
 8006a34:	f7fb fb7a 	bl	800212c <LCD_WriteReg>
		//Pannel Image Control//
		LCD_WriteReg(0x0060, 0x2700);
 8006a38:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006a3c:	2060      	movs	r0, #96	; 0x60
 8006a3e:	f7fb fb75 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0061, 0x0001);
 8006a42:	2101      	movs	r1, #1
 8006a44:	2061      	movs	r0, #97	; 0x61
 8006a46:	f7fb fb71 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x006A, 0x0000);
 8006a4a:	2100      	movs	r1, #0
 8006a4c:	206a      	movs	r0, #106	; 0x6a
 8006a4e:	f7fb fb6d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0080, 0x0000);
 8006a52:	2100      	movs	r1, #0
 8006a54:	2080      	movs	r0, #128	; 0x80
 8006a56:	f7fb fb69 	bl	800212c <LCD_WriteReg>
		//Partial Image Control//
		LCD_WriteReg(0x0081, 0x0000);
 8006a5a:	2100      	movs	r1, #0
 8006a5c:	2081      	movs	r0, #129	; 0x81
 8006a5e:	f7fb fb65 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0082, 0x0000);
 8006a62:	2100      	movs	r1, #0
 8006a64:	2082      	movs	r0, #130	; 0x82
 8006a66:	f7fb fb61 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0083, 0x0000);
 8006a6a:	2100      	movs	r1, #0
 8006a6c:	2083      	movs	r0, #131	; 0x83
 8006a6e:	f7fb fb5d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0084, 0x0000);
 8006a72:	2100      	movs	r1, #0
 8006a74:	2084      	movs	r0, #132	; 0x84
 8006a76:	f7fb fb59 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0085, 0x0000);
 8006a7a:	2100      	movs	r1, #0
 8006a7c:	2085      	movs	r0, #133	; 0x85
 8006a7e:	f7fb fb55 	bl	800212c <LCD_WriteReg>
		//Panel Interface Control//
		LCD_WriteReg(0x0090, 0x0013);        //0x0010 frenqucy
 8006a82:	2113      	movs	r1, #19
 8006a84:	2090      	movs	r0, #144	; 0x90
 8006a86:	f7fb fb51 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0092, 0x0300);
 8006a8a:	f44f 7140 	mov.w	r1, #768	; 0x300
 8006a8e:	2092      	movs	r0, #146	; 0x92
 8006a90:	f7fb fb4c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0093, 0x0005);
 8006a94:	2105      	movs	r1, #5
 8006a96:	2093      	movs	r0, #147	; 0x93
 8006a98:	f7fb fb48 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0095, 0x0000);
 8006a9c:	2100      	movs	r1, #0
 8006a9e:	2095      	movs	r0, #149	; 0x95
 8006aa0:	f7fb fb44 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0097, 0x0000);
 8006aa4:	2100      	movs	r1, #0
 8006aa6:	2097      	movs	r0, #151	; 0x97
 8006aa8:	f7fb fb40 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0098, 0x0000);
 8006aac:	2100      	movs	r1, #0
 8006aae:	2098      	movs	r0, #152	; 0x98
 8006ab0:	f7fb fb3c 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0001, 0x0100);
 8006ab4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006ab8:	2001      	movs	r0, #1
 8006aba:	f7fb fb37 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0700);
 8006abe:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8006ac2:	2002      	movs	r0, #2
 8006ac4:	f7fb fb32 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0003, 0x1038);        //扫描方向 上->下  左->右
 8006ac8:	f241 0138 	movw	r1, #4152	; 0x1038
 8006acc:	2003      	movs	r0, #3
 8006ace:	f7fb fb2d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0004, 0x0000);
 8006ad2:	2100      	movs	r1, #0
 8006ad4:	2004      	movs	r0, #4
 8006ad6:	f7fb fb29 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000C, 0x0000);
 8006ada:	2100      	movs	r1, #0
 8006adc:	200c      	movs	r0, #12
 8006ade:	f7fb fb25 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000F, 0x0000);
 8006ae2:	2100      	movs	r1, #0
 8006ae4:	200f      	movs	r0, #15
 8006ae6:	f7fb fb21 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0020, 0x0000);
 8006aea:	2100      	movs	r1, #0
 8006aec:	2020      	movs	r0, #32
 8006aee:	f7fb fb1d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0021, 0x0000);
 8006af2:	2100      	movs	r1, #0
 8006af4:	2021      	movs	r0, #33	; 0x21
 8006af6:	f7fb fb19 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0021);
 8006afa:	2121      	movs	r1, #33	; 0x21
 8006afc:	2007      	movs	r0, #7
 8006afe:	f7fb fb15 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006b02:	2014      	movs	r0, #20
 8006b04:	f7f9 ffe0 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0007, 0x0061);
 8006b08:	2161      	movs	r1, #97	; 0x61
 8006b0a:	2007      	movs	r0, #7
 8006b0c:	f7fb fb0e 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006b10:	2014      	movs	r0, #20
 8006b12:	f7f9 ffd9 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0007, 0x0173);
 8006b16:	f240 1173 	movw	r1, #371	; 0x173
 8006b1a:	2007      	movs	r0, #7
 8006b1c:	f7fb fb06 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006b20:	2014      	movs	r0, #20
 8006b22:	f7f9 ffd1 	bl	8000ac8 <HAL_Delay>
 8006b26:	f000 bfd7 	b.w	8007ad8 <LCD_Init+0x3e34>
 8006b2a:	bf00      	nop
 8006b2c:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0xB505) {
 8006b30:	4bf0      	ldr	r3, [pc, #960]	; (8006ef4 <LCD_Init+0x3250>)
 8006b32:	889b      	ldrh	r3, [r3, #4]
 8006b34:	f24b 5205 	movw	r2, #46341	; 0xb505
 8006b38:	4293      	cmp	r3, r2
 8006b3a:	f040 8103 	bne.w	8006d44 <LCD_Init+0x30a0>
		LCD_WriteReg(0x0000, 0x0000);
 8006b3e:	2100      	movs	r1, #0
 8006b40:	2000      	movs	r0, #0
 8006b42:	f7fb faf3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006b46:	2100      	movs	r1, #0
 8006b48:	2000      	movs	r0, #0
 8006b4a:	f7fb faef 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006b4e:	2100      	movs	r1, #0
 8006b50:	2000      	movs	r0, #0
 8006b52:	f7fb faeb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006b56:	2100      	movs	r1, #0
 8006b58:	2000      	movs	r0, #0
 8006b5a:	f7fb fae7 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x00a4, 0x0001);
 8006b5e:	2101      	movs	r1, #1
 8006b60:	20a4      	movs	r0, #164	; 0xa4
 8006b62:	f7fb fae3 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006b66:	2014      	movs	r0, #20
 8006b68:	f7f9 ffae 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0060, 0x2700);
 8006b6c:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006b70:	2060      	movs	r0, #96	; 0x60
 8006b72:	f7fb fadb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0008, 0x0202);
 8006b76:	f240 2102 	movw	r1, #514	; 0x202
 8006b7a:	2008      	movs	r0, #8
 8006b7c:	f7fb fad6 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0030, 0x0214);
 8006b80:	f44f 7105 	mov.w	r1, #532	; 0x214
 8006b84:	2030      	movs	r0, #48	; 0x30
 8006b86:	f7fb fad1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x3715);
 8006b8a:	f243 7115 	movw	r1, #14101	; 0x3715
 8006b8e:	2031      	movs	r0, #49	; 0x31
 8006b90:	f7fb facc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0604);
 8006b94:	f240 6104 	movw	r1, #1540	; 0x604
 8006b98:	2032      	movs	r0, #50	; 0x32
 8006b9a:	f7fb fac7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0033, 0x0e16);
 8006b9e:	f640 6116 	movw	r1, #3606	; 0xe16
 8006ba2:	2033      	movs	r0, #51	; 0x33
 8006ba4:	f7fb fac2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0034, 0x2211);
 8006ba8:	f242 2111 	movw	r1, #8721	; 0x2211
 8006bac:	2034      	movs	r0, #52	; 0x34
 8006bae:	f7fb fabd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x1500);
 8006bb2:	f44f 51a8 	mov.w	r1, #5376	; 0x1500
 8006bb6:	2035      	movs	r0, #53	; 0x35
 8006bb8:	f7fb fab8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x8507);
 8006bbc:	f248 5107 	movw	r1, #34055	; 0x8507
 8006bc0:	2036      	movs	r0, #54	; 0x36
 8006bc2:	f7fb fab3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x1407);
 8006bc6:	f241 4107 	movw	r1, #5127	; 0x1407
 8006bca:	2037      	movs	r0, #55	; 0x37
 8006bcc:	f7fb faae 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0038, 0x1403);
 8006bd0:	f241 4103 	movw	r1, #5123	; 0x1403
 8006bd4:	2038      	movs	r0, #56	; 0x38
 8006bd6:	f7fb faa9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0039, 0x0020);
 8006bda:	2120      	movs	r1, #32
 8006bdc:	2039      	movs	r0, #57	; 0x39
 8006bde:	f7fb faa5 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0090, 0x001a);
 8006be2:	211a      	movs	r1, #26
 8006be4:	2090      	movs	r0, #144	; 0x90
 8006be6:	f7fb faa1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0010, 0x0000);
 8006bea:	2100      	movs	r1, #0
 8006bec:	2010      	movs	r0, #16
 8006bee:	f7fb fa9d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0007);
 8006bf2:	2107      	movs	r1, #7
 8006bf4:	2011      	movs	r0, #17
 8006bf6:	f7fb fa99 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x0000);
 8006bfa:	2100      	movs	r1, #0
 8006bfc:	2012      	movs	r0, #18
 8006bfe:	f7fb fa95 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0013, 0x0000);
 8006c02:	2100      	movs	r1, #0
 8006c04:	2013      	movs	r0, #19
 8006c06:	f7fb fa91 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006c0a:	2014      	movs	r0, #20
 8006c0c:	f7f9 ff5c 	bl	8000ac8 <HAL_Delay>

		LCD_WriteReg(0x0010, 0x0730);
 8006c10:	f44f 61e6 	mov.w	r1, #1840	; 0x730
 8006c14:	2010      	movs	r0, #16
 8006c16:	f7fb fa89 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0137);
 8006c1a:	f240 1137 	movw	r1, #311	; 0x137
 8006c1e:	2011      	movs	r0, #17
 8006c20:	f7fb fa84 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006c24:	2014      	movs	r0, #20
 8006c26:	f7f9 ff4f 	bl	8000ac8 <HAL_Delay>

		LCD_WriteReg(0x0012, 0x01b8);
 8006c2a:	f44f 71dc 	mov.w	r1, #440	; 0x1b8
 8006c2e:	2012      	movs	r0, #18
 8006c30:	f7fb fa7c 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006c34:	2014      	movs	r0, #20
 8006c36:	f7f9 ff47 	bl	8000ac8 <HAL_Delay>

		LCD_WriteReg(0x0013, 0x0f00);
 8006c3a:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 8006c3e:	2013      	movs	r0, #19
 8006c40:	f7fb fa74 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x002a, 0x0080);
 8006c44:	2180      	movs	r1, #128	; 0x80
 8006c46:	202a      	movs	r0, #42	; 0x2a
 8006c48:	f7fb fa70 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0029, 0x0048);
 8006c4c:	2148      	movs	r1, #72	; 0x48
 8006c4e:	2029      	movs	r0, #41	; 0x29
 8006c50:	f7fb fa6c 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006c54:	2014      	movs	r0, #20
 8006c56:	f7f9 ff37 	bl	8000ac8 <HAL_Delay>

		LCD_WriteReg(0x0001, 0x0100);
 8006c5a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006c5e:	2001      	movs	r0, #1
 8006c60:	f7fb fa64 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0700);
 8006c64:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8006c68:	2002      	movs	r0, #2
 8006c6a:	f7fb fa5f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0003, 0x1038);        //扫描方向 上->下  左->右
 8006c6e:	f241 0138 	movw	r1, #4152	; 0x1038
 8006c72:	2003      	movs	r0, #3
 8006c74:	f7fb fa5a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0008, 0x0202);
 8006c78:	f240 2102 	movw	r1, #514	; 0x202
 8006c7c:	2008      	movs	r0, #8
 8006c7e:	f7fb fa55 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000a, 0x0000);
 8006c82:	2100      	movs	r1, #0
 8006c84:	200a      	movs	r0, #10
 8006c86:	f7fb fa51 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000c, 0x0000);
 8006c8a:	2100      	movs	r1, #0
 8006c8c:	200c      	movs	r0, #12
 8006c8e:	f7fb fa4d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000d, 0x0000);
 8006c92:	2100      	movs	r1, #0
 8006c94:	200d      	movs	r0, #13
 8006c96:	f7fb fa49 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000e, 0x0030);
 8006c9a:	2130      	movs	r1, #48	; 0x30
 8006c9c:	200e      	movs	r0, #14
 8006c9e:	f7fb fa45 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0050, 0x0000);
 8006ca2:	2100      	movs	r1, #0
 8006ca4:	2050      	movs	r0, #80	; 0x50
 8006ca6:	f7fb fa41 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0051, 0x00ef);
 8006caa:	21ef      	movs	r1, #239	; 0xef
 8006cac:	2051      	movs	r0, #81	; 0x51
 8006cae:	f7fb fa3d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0052, 0x0000);
 8006cb2:	2100      	movs	r1, #0
 8006cb4:	2052      	movs	r0, #82	; 0x52
 8006cb6:	f7fb fa39 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0053, 0x013f);
 8006cba:	f240 113f 	movw	r1, #319	; 0x13f
 8006cbe:	2053      	movs	r0, #83	; 0x53
 8006cc0:	f7fb fa34 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0060, 0x2700);
 8006cc4:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006cc8:	2060      	movs	r0, #96	; 0x60
 8006cca:	f7fb fa2f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0061, 0x0001);
 8006cce:	2101      	movs	r1, #1
 8006cd0:	2061      	movs	r0, #97	; 0x61
 8006cd2:	f7fb fa2b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x006a, 0x0000);
 8006cd6:	2100      	movs	r1, #0
 8006cd8:	206a      	movs	r0, #106	; 0x6a
 8006cda:	f7fb fa27 	bl	800212c <LCD_WriteReg>
		//LCD_WriteReg(0x0080,0x0000);
		//LCD_WriteReg(0x0081,0x0000);
		LCD_WriteReg(0x0090, 0X0011);
 8006cde:	2111      	movs	r1, #17
 8006ce0:	2090      	movs	r0, #144	; 0x90
 8006ce2:	f7fb fa23 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0092, 0x0600);
 8006ce6:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006cea:	2092      	movs	r0, #146	; 0x92
 8006cec:	f7fb fa1e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0093, 0x0402);
 8006cf0:	f240 4102 	movw	r1, #1026	; 0x402
 8006cf4:	2093      	movs	r0, #147	; 0x93
 8006cf6:	f7fb fa19 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0094, 0x0002);
 8006cfa:	2102      	movs	r1, #2
 8006cfc:	2094      	movs	r0, #148	; 0x94
 8006cfe:	f7fb fa15 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006d02:	2014      	movs	r0, #20
 8006d04:	f7f9 fee0 	bl	8000ac8 <HAL_Delay>

		LCD_WriteReg(0x0007, 0x0001);
 8006d08:	2101      	movs	r1, #1
 8006d0a:	2007      	movs	r0, #7
 8006d0c:	f7fb fa0e 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006d10:	2014      	movs	r0, #20
 8006d12:	f7f9 fed9 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0007, 0x0061);
 8006d16:	2161      	movs	r1, #97	; 0x61
 8006d18:	2007      	movs	r0, #7
 8006d1a:	f7fb fa07 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0173);
 8006d1e:	f240 1173 	movw	r1, #371	; 0x173
 8006d22:	2007      	movs	r0, #7
 8006d24:	f7fb fa02 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0020, 0x0000);
 8006d28:	2100      	movs	r1, #0
 8006d2a:	2020      	movs	r0, #32
 8006d2c:	f7fb f9fe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0021, 0x0000);
 8006d30:	2100      	movs	r1, #0
 8006d32:	2021      	movs	r0, #33	; 0x21
 8006d34:	f7fb f9fa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x00, 0x22);
 8006d38:	2122      	movs	r1, #34	; 0x22
 8006d3a:	2000      	movs	r0, #0
 8006d3c:	f7fb f9f6 	bl	800212c <LCD_WriteReg>
 8006d40:	f000 beca 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0xC505) {
 8006d44:	4b6b      	ldr	r3, [pc, #428]	; (8006ef4 <LCD_Init+0x3250>)
 8006d46:	889b      	ldrh	r3, [r3, #4]
 8006d48:	f24c 5205 	movw	r2, #50437	; 0xc505
 8006d4c:	4293      	cmp	r3, r2
 8006d4e:	f040 80d3 	bne.w	8006ef8 <LCD_Init+0x3254>
		LCD_WriteReg(0x0000, 0x0000);
 8006d52:	2100      	movs	r1, #0
 8006d54:	2000      	movs	r0, #0
 8006d56:	f7fb f9e9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006d5a:	2100      	movs	r1, #0
 8006d5c:	2000      	movs	r0, #0
 8006d5e:	f7fb f9e5 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006d62:	2014      	movs	r0, #20
 8006d64:	f7f9 feb0 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0000, 0x0000);
 8006d68:	2100      	movs	r1, #0
 8006d6a:	2000      	movs	r0, #0
 8006d6c:	f7fb f9de 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006d70:	2100      	movs	r1, #0
 8006d72:	2000      	movs	r0, #0
 8006d74:	f7fb f9da 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006d78:	2100      	movs	r1, #0
 8006d7a:	2000      	movs	r0, #0
 8006d7c:	f7fb f9d6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0000, 0x0000);
 8006d80:	2100      	movs	r1, #0
 8006d82:	2000      	movs	r0, #0
 8006d84:	f7fb f9d2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x00a4, 0x0001);
 8006d88:	2101      	movs	r1, #1
 8006d8a:	20a4      	movs	r0, #164	; 0xa4
 8006d8c:	f7fb f9ce 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006d90:	2014      	movs	r0, #20
 8006d92:	f7f9 fe99 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0060, 0x2700);
 8006d96:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8006d9a:	2060      	movs	r0, #96	; 0x60
 8006d9c:	f7fb f9c6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0008, 0x0806);
 8006da0:	f640 0106 	movw	r1, #2054	; 0x806
 8006da4:	2008      	movs	r0, #8
 8006da6:	f7fb f9c1 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0030, 0x0703);		//gamma setting
 8006daa:	f240 7103 	movw	r1, #1795	; 0x703
 8006dae:	2030      	movs	r0, #48	; 0x30
 8006db0:	f7fb f9bc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x0001);
 8006db4:	2101      	movs	r1, #1
 8006db6:	2031      	movs	r0, #49	; 0x31
 8006db8:	f7fb f9b8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0004);
 8006dbc:	2104      	movs	r1, #4
 8006dbe:	2032      	movs	r0, #50	; 0x32
 8006dc0:	f7fb f9b4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0033, 0x0102);
 8006dc4:	f44f 7181 	mov.w	r1, #258	; 0x102
 8006dc8:	2033      	movs	r0, #51	; 0x33
 8006dca:	f7fb f9af 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0034, 0x0300);
 8006dce:	f44f 7140 	mov.w	r1, #768	; 0x300
 8006dd2:	2034      	movs	r0, #52	; 0x34
 8006dd4:	f7fb f9aa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x0103);
 8006dd8:	f240 1103 	movw	r1, #259	; 0x103
 8006ddc:	2035      	movs	r0, #53	; 0x35
 8006dde:	f7fb f9a5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x001F);
 8006de2:	211f      	movs	r1, #31
 8006de4:	2036      	movs	r0, #54	; 0x36
 8006de6:	f7fb f9a1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x0703);
 8006dea:	f240 7103 	movw	r1, #1795	; 0x703
 8006dee:	2037      	movs	r0, #55	; 0x37
 8006df0:	f7fb f99c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0038, 0x0001);
 8006df4:	2101      	movs	r1, #1
 8006df6:	2038      	movs	r0, #56	; 0x38
 8006df8:	f7fb f998 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0039, 0x0004);
 8006dfc:	2104      	movs	r1, #4
 8006dfe:	2039      	movs	r0, #57	; 0x39
 8006e00:	f7fb f994 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0090, 0x0015);	//80Hz
 8006e04:	2115      	movs	r1, #21
 8006e06:	2090      	movs	r0, #144	; 0x90
 8006e08:	f7fb f990 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0010, 0X0410);	//BT,AP
 8006e0c:	f44f 6182 	mov.w	r1, #1040	; 0x410
 8006e10:	2010      	movs	r0, #16
 8006e12:	f7fb f98b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x0247);	//DC1,DC0,VC
 8006e16:	f240 2147 	movw	r1, #583	; 0x247
 8006e1a:	2011      	movs	r0, #17
 8006e1c:	f7fb f986 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0012, 0x01BC);
 8006e20:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 8006e24:	2012      	movs	r0, #18
 8006e26:	f7fb f981 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0013, 0x0e00);
 8006e2a:	f44f 6160 	mov.w	r1, #3584	; 0xe00
 8006e2e:	2013      	movs	r0, #19
 8006e30:	f7fb f97c 	bl	800212c <LCD_WriteReg>
		HAL_Delay(120);
 8006e34:	2078      	movs	r0, #120	; 0x78
 8006e36:	f7f9 fe47 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0001, 0x0100);
 8006e3a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006e3e:	2001      	movs	r0, #1
 8006e40:	f7fb f974 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0200);
 8006e44:	f44f 7100 	mov.w	r1, #512	; 0x200
 8006e48:	2002      	movs	r0, #2
 8006e4a:	f7fb f96f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0003, 0x1030);
 8006e4e:	f241 0130 	movw	r1, #4144	; 0x1030
 8006e52:	2003      	movs	r0, #3
 8006e54:	f7fb f96a 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x000A, 0x0008);
 8006e58:	2108      	movs	r1, #8
 8006e5a:	200a      	movs	r0, #10
 8006e5c:	f7fb f966 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000C, 0x0000);
 8006e60:	2100      	movs	r1, #0
 8006e62:	200c      	movs	r0, #12
 8006e64:	f7fb f962 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x000E, 0x0020);
 8006e68:	2120      	movs	r1, #32
 8006e6a:	200e      	movs	r0, #14
 8006e6c:	f7fb f95e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000F, 0x0000);
 8006e70:	2100      	movs	r1, #0
 8006e72:	200f      	movs	r0, #15
 8006e74:	f7fb f95a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0020, 0x0000);	//H Start
 8006e78:	2100      	movs	r1, #0
 8006e7a:	2020      	movs	r0, #32
 8006e7c:	f7fb f956 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0021, 0x0000);	//V Start
 8006e80:	2100      	movs	r1, #0
 8006e82:	2021      	movs	r0, #33	; 0x21
 8006e84:	f7fb f952 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x002A, 0x003D);	//vcom2
 8006e88:	213d      	movs	r1, #61	; 0x3d
 8006e8a:	202a      	movs	r0, #42	; 0x2a
 8006e8c:	f7fb f94e 	bl	800212c <LCD_WriteReg>
		HAL_Delay(20);
 8006e90:	2014      	movs	r0, #20
 8006e92:	f7f9 fe19 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0x0029, 0x002d);
 8006e96:	212d      	movs	r1, #45	; 0x2d
 8006e98:	2029      	movs	r0, #41	; 0x29
 8006e9a:	f7fb f947 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0050, 0x0000);
 8006e9e:	2100      	movs	r1, #0
 8006ea0:	2050      	movs	r0, #80	; 0x50
 8006ea2:	f7fb f943 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0051, 0xD0EF);
 8006ea6:	f24d 01ef 	movw	r1, #53487	; 0xd0ef
 8006eaa:	2051      	movs	r0, #81	; 0x51
 8006eac:	f7fb f93e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0052, 0x0000);
 8006eb0:	2100      	movs	r1, #0
 8006eb2:	2052      	movs	r0, #82	; 0x52
 8006eb4:	f7fb f93a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0053, 0x013F);
 8006eb8:	f240 113f 	movw	r1, #319	; 0x13f
 8006ebc:	2053      	movs	r0, #83	; 0x53
 8006ebe:	f7fb f935 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0061, 0x0000);
 8006ec2:	2100      	movs	r1, #0
 8006ec4:	2061      	movs	r0, #97	; 0x61
 8006ec6:	f7fb f931 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x006A, 0x0000);
 8006eca:	2100      	movs	r1, #0
 8006ecc:	206a      	movs	r0, #106	; 0x6a
 8006ece:	f7fb f92d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0092, 0x0300);
 8006ed2:	f44f 7140 	mov.w	r1, #768	; 0x300
 8006ed6:	2092      	movs	r0, #146	; 0x92
 8006ed8:	f7fb f928 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0x0093, 0x0005);
 8006edc:	2105      	movs	r1, #5
 8006ede:	2093      	movs	r0, #147	; 0x93
 8006ee0:	f7fb f924 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0100);
 8006ee4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006ee8:	2007      	movs	r0, #7
 8006eea:	f7fb f91f 	bl	800212c <LCD_WriteReg>
 8006eee:	f000 bdf3 	b.w	8007ad8 <LCD_Init+0x3e34>
 8006ef2:	bf00      	nop
 8006ef4:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0x8989)	//OK |/|/|
 8006ef8:	4bc2      	ldr	r3, [pc, #776]	; (8007204 <LCD_Init+0x3560>)
 8006efa:	889b      	ldrh	r3, [r3, #4]
 8006efc:	f648 1289 	movw	r2, #35209	; 0x8989
 8006f00:	4293      	cmp	r3, r2
 8006f02:	f040 80bc 	bne.w	800707e <LCD_Init+0x33da>
			{
		LCD_WriteReg(0x0000, 0x0001);	//打开晶振
 8006f06:	2101      	movs	r1, #1
 8006f08:	2000      	movs	r0, #0
 8006f0a:	f7fb f90f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0003, 0xA8A4);	//0xA8A4
 8006f0e:	f64a 01a4 	movw	r1, #43172	; 0xa8a4
 8006f12:	2003      	movs	r0, #3
 8006f14:	f7fb f90a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000C, 0x0000);
 8006f18:	2100      	movs	r1, #0
 8006f1a:	200c      	movs	r0, #12
 8006f1c:	f7fb f906 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000D, 0x080C);
 8006f20:	f640 010c 	movw	r1, #2060	; 0x80c
 8006f24:	200d      	movs	r0, #13
 8006f26:	f7fb f901 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000E, 0x2B00);
 8006f2a:	f44f 512c 	mov.w	r1, #11008	; 0x2b00
 8006f2e:	200e      	movs	r0, #14
 8006f30:	f7fb f8fc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x001E, 0x00B0);
 8006f34:	21b0      	movs	r1, #176	; 0xb0
 8006f36:	201e      	movs	r0, #30
 8006f38:	f7fb f8f8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0001, 0x2B3F);	//驱动输出控制320*240  0x6B3F
 8006f3c:	f642 313f 	movw	r1, #11071	; 0x2b3f
 8006f40:	2001      	movs	r0, #1
 8006f42:	f7fb f8f3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0002, 0x0600);
 8006f46:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006f4a:	2002      	movs	r0, #2
 8006f4c:	f7fb f8ee 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0010, 0x0000);
 8006f50:	2100      	movs	r1, #0
 8006f52:	2010      	movs	r0, #16
 8006f54:	f7fb f8ea 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0011, 0x6078); //定义数据格式  16位色 		横屏 0x6058
 8006f58:	f246 0178 	movw	r1, #24696	; 0x6078
 8006f5c:	2011      	movs	r0, #17
 8006f5e:	f7fb f8e5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0005, 0x0000);
 8006f62:	2100      	movs	r1, #0
 8006f64:	2005      	movs	r0, #5
 8006f66:	f7fb f8e1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0006, 0x0000);
 8006f6a:	2100      	movs	r1, #0
 8006f6c:	2006      	movs	r0, #6
 8006f6e:	f7fb f8dd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0016, 0xEF1C);
 8006f72:	f64e 711c 	movw	r1, #61212	; 0xef1c
 8006f76:	2016      	movs	r0, #22
 8006f78:	f7fb f8d8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0017, 0x0003);
 8006f7c:	2103      	movs	r1, #3
 8006f7e:	2017      	movs	r0, #23
 8006f80:	f7fb f8d4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0007, 0x0233); //0x0233
 8006f84:	f240 2133 	movw	r1, #563	; 0x233
 8006f88:	2007      	movs	r0, #7
 8006f8a:	f7fb f8cf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000B, 0x0000);
 8006f8e:	2100      	movs	r1, #0
 8006f90:	200b      	movs	r0, #11
 8006f92:	f7fb f8cb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x000F, 0x0000); //扫描开始地址
 8006f96:	2100      	movs	r1, #0
 8006f98:	200f      	movs	r0, #15
 8006f9a:	f7fb f8c7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0041, 0x0000);
 8006f9e:	2100      	movs	r1, #0
 8006fa0:	2041      	movs	r0, #65	; 0x41
 8006fa2:	f7fb f8c3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0042, 0x0000);
 8006fa6:	2100      	movs	r1, #0
 8006fa8:	2042      	movs	r0, #66	; 0x42
 8006faa:	f7fb f8bf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0048, 0x0000);
 8006fae:	2100      	movs	r1, #0
 8006fb0:	2048      	movs	r0, #72	; 0x48
 8006fb2:	f7fb f8bb 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0049, 0x013F);
 8006fb6:	f240 113f 	movw	r1, #319	; 0x13f
 8006fba:	2049      	movs	r0, #73	; 0x49
 8006fbc:	f7fb f8b6 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x004A, 0x0000);
 8006fc0:	2100      	movs	r1, #0
 8006fc2:	204a      	movs	r0, #74	; 0x4a
 8006fc4:	f7fb f8b2 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x004B, 0x0000);
 8006fc8:	2100      	movs	r1, #0
 8006fca:	204b      	movs	r0, #75	; 0x4b
 8006fcc:	f7fb f8ae 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0044, 0xEF00);
 8006fd0:	f44f 416f 	mov.w	r1, #61184	; 0xef00
 8006fd4:	2044      	movs	r0, #68	; 0x44
 8006fd6:	f7fb f8a9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0045, 0x0000);
 8006fda:	2100      	movs	r1, #0
 8006fdc:	2045      	movs	r0, #69	; 0x45
 8006fde:	f7fb f8a5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0046, 0x013F);
 8006fe2:	f240 113f 	movw	r1, #319	; 0x13f
 8006fe6:	2046      	movs	r0, #70	; 0x46
 8006fe8:	f7fb f8a0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0030, 0x0707);
 8006fec:	f240 7107 	movw	r1, #1799	; 0x707
 8006ff0:	2030      	movs	r0, #48	; 0x30
 8006ff2:	f7fb f89b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0031, 0x0204);
 8006ff6:	f44f 7101 	mov.w	r1, #516	; 0x204
 8006ffa:	2031      	movs	r0, #49	; 0x31
 8006ffc:	f7fb f896 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0032, 0x0204);
 8007000:	f44f 7101 	mov.w	r1, #516	; 0x204
 8007004:	2032      	movs	r0, #50	; 0x32
 8007006:	f7fb f891 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0033, 0x0502);
 800700a:	f240 5102 	movw	r1, #1282	; 0x502
 800700e:	2033      	movs	r0, #51	; 0x33
 8007010:	f7fb f88c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0034, 0x0507);
 8007014:	f240 5107 	movw	r1, #1287	; 0x507
 8007018:	2034      	movs	r0, #52	; 0x34
 800701a:	f7fb f887 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0035, 0x0204);
 800701e:	f44f 7101 	mov.w	r1, #516	; 0x204
 8007022:	2035      	movs	r0, #53	; 0x35
 8007024:	f7fb f882 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0036, 0x0204);
 8007028:	f44f 7101 	mov.w	r1, #516	; 0x204
 800702c:	2036      	movs	r0, #54	; 0x36
 800702e:	f7fb f87d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0037, 0x0502);
 8007032:	f240 5102 	movw	r1, #1282	; 0x502
 8007036:	2037      	movs	r0, #55	; 0x37
 8007038:	f7fb f878 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003A, 0x0302);
 800703c:	f240 3102 	movw	r1, #770	; 0x302
 8007040:	203a      	movs	r0, #58	; 0x3a
 8007042:	f7fb f873 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x003B, 0x0302);
 8007046:	f240 3102 	movw	r1, #770	; 0x302
 800704a:	203b      	movs	r0, #59	; 0x3b
 800704c:	f7fb f86e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0023, 0x0000);
 8007050:	2100      	movs	r1, #0
 8007052:	2023      	movs	r0, #35	; 0x23
 8007054:	f7fb f86a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0024, 0x0000);
 8007058:	2100      	movs	r1, #0
 800705a:	2024      	movs	r0, #36	; 0x24
 800705c:	f7fb f866 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x0025, 0x8000);
 8007060:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8007064:	2025      	movs	r0, #37	; 0x25
 8007066:	f7fb f861 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x004f, 0);        //行首址0
 800706a:	2100      	movs	r1, #0
 800706c:	204f      	movs	r0, #79	; 0x4f
 800706e:	f7fb f85d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0x004e, 0);        //列首址0
 8007072:	2100      	movs	r1, #0
 8007074:	204e      	movs	r0, #78	; 0x4e
 8007076:	f7fb f859 	bl	800212c <LCD_WriteReg>
 800707a:	f000 bd2d 	b.w	8007ad8 <LCD_Init+0x3e34>
	} else if (lcddev.id == 0x4531)        //OK |/|/|
 800707e:	4b61      	ldr	r3, [pc, #388]	; (8007204 <LCD_Init+0x3560>)
 8007080:	889b      	ldrh	r3, [r3, #4]
 8007082:	f244 5231 	movw	r2, #17713	; 0x4531
 8007086:	4293      	cmp	r3, r2
 8007088:	f040 80be 	bne.w	8007208 <LCD_Init+0x3564>
			{
		LCD_WriteReg(0X00, 0X0001);
 800708c:	2101      	movs	r1, #1
 800708e:	2000      	movs	r0, #0
 8007090:	f7fb f84c 	bl	800212c <LCD_WriteReg>
		HAL_Delay(10);
 8007094:	200a      	movs	r0, #10
 8007096:	f7f9 fd17 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X10, 0X1628);
 800709a:	f241 6128 	movw	r1, #5672	; 0x1628
 800709e:	2010      	movs	r0, #16
 80070a0:	f7fb f844 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X12, 0X000e);        //0x0006
 80070a4:	210e      	movs	r1, #14
 80070a6:	2012      	movs	r0, #18
 80070a8:	f7fb f840 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X13, 0X0A39);
 80070ac:	f640 2139 	movw	r1, #2617	; 0xa39
 80070b0:	2013      	movs	r0, #19
 80070b2:	f7fb f83b 	bl	800212c <LCD_WriteReg>
		HAL_Delay(10);
 80070b6:	200a      	movs	r0, #10
 80070b8:	f7f9 fd06 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X11, 0X0040);
 80070bc:	2140      	movs	r1, #64	; 0x40
 80070be:	2011      	movs	r0, #17
 80070c0:	f7fb f834 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X15, 0X0050);
 80070c4:	2150      	movs	r1, #80	; 0x50
 80070c6:	2015      	movs	r0, #21
 80070c8:	f7fb f830 	bl	800212c <LCD_WriteReg>
		HAL_Delay(10);
 80070cc:	200a      	movs	r0, #10
 80070ce:	f7f9 fcfb 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X12, 0X001e);        //16
 80070d2:	211e      	movs	r1, #30
 80070d4:	2012      	movs	r0, #18
 80070d6:	f7fb f829 	bl	800212c <LCD_WriteReg>
		HAL_Delay(10);
 80070da:	200a      	movs	r0, #10
 80070dc:	f7f9 fcf4 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X10, 0X1620);
 80070e0:	f44f 51b1 	mov.w	r1, #5664	; 0x1620
 80070e4:	2010      	movs	r0, #16
 80070e6:	f7fb f821 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X13, 0X2A39);
 80070ea:	f642 2139 	movw	r1, #10809	; 0x2a39
 80070ee:	2013      	movs	r0, #19
 80070f0:	f7fb f81c 	bl	800212c <LCD_WriteReg>
		HAL_Delay(10);
 80070f4:	200a      	movs	r0, #10
 80070f6:	f7f9 fce7 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X01, 0X0100);
 80070fa:	f44f 7180 	mov.w	r1, #256	; 0x100
 80070fe:	2001      	movs	r0, #1
 8007100:	f7fb f814 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X02, 0X0300);
 8007104:	f44f 7140 	mov.w	r1, #768	; 0x300
 8007108:	2002      	movs	r0, #2
 800710a:	f7fb f80f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X03, 0X1038);        //改变方向的
 800710e:	f241 0138 	movw	r1, #4152	; 0x1038
 8007112:	2003      	movs	r0, #3
 8007114:	f7fb f80a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X08, 0X0202);
 8007118:	f240 2102 	movw	r1, #514	; 0x202
 800711c:	2008      	movs	r0, #8
 800711e:	f7fb f805 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X0A, 0X0008);
 8007122:	2108      	movs	r1, #8
 8007124:	200a      	movs	r0, #10
 8007126:	f7fb f801 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X30, 0X0000);
 800712a:	2100      	movs	r1, #0
 800712c:	2030      	movs	r0, #48	; 0x30
 800712e:	f7fa fffd 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X31, 0X0402);
 8007132:	f240 4102 	movw	r1, #1026	; 0x402
 8007136:	2031      	movs	r0, #49	; 0x31
 8007138:	f7fa fff8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X32, 0X0106);
 800713c:	f44f 7183 	mov.w	r1, #262	; 0x106
 8007140:	2032      	movs	r0, #50	; 0x32
 8007142:	f7fa fff3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X33, 0X0503);
 8007146:	f240 5103 	movw	r1, #1283	; 0x503
 800714a:	2033      	movs	r0, #51	; 0x33
 800714c:	f7fa ffee 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X34, 0X0104);
 8007150:	f44f 7182 	mov.w	r1, #260	; 0x104
 8007154:	2034      	movs	r0, #52	; 0x34
 8007156:	f7fa ffe9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X35, 0X0301);
 800715a:	f240 3101 	movw	r1, #769	; 0x301
 800715e:	2035      	movs	r0, #53	; 0x35
 8007160:	f7fa ffe4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X36, 0X0707);
 8007164:	f240 7107 	movw	r1, #1799	; 0x707
 8007168:	2036      	movs	r0, #54	; 0x36
 800716a:	f7fa ffdf 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X37, 0X0305);
 800716e:	f240 3105 	movw	r1, #773	; 0x305
 8007172:	2037      	movs	r0, #55	; 0x37
 8007174:	f7fa ffda 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X38, 0X0208);
 8007178:	f44f 7102 	mov.w	r1, #520	; 0x208
 800717c:	2038      	movs	r0, #56	; 0x38
 800717e:	f7fa ffd5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X39, 0X0F0B);
 8007182:	f640 710b 	movw	r1, #3851	; 0xf0b
 8007186:	2039      	movs	r0, #57	; 0x39
 8007188:	f7fa ffd0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X41, 0X0002);
 800718c:	2102      	movs	r1, #2
 800718e:	2041      	movs	r0, #65	; 0x41
 8007190:	f7fa ffcc 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X60, 0X2700);
 8007194:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 8007198:	2060      	movs	r0, #96	; 0x60
 800719a:	f7fa ffc7 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X61, 0X0001);
 800719e:	2101      	movs	r1, #1
 80071a0:	2061      	movs	r0, #97	; 0x61
 80071a2:	f7fa ffc3 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X90, 0X0210);
 80071a6:	f44f 7104 	mov.w	r1, #528	; 0x210
 80071aa:	2090      	movs	r0, #144	; 0x90
 80071ac:	f7fa ffbe 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X92, 0X010A);
 80071b0:	f44f 7185 	mov.w	r1, #266	; 0x10a
 80071b4:	2092      	movs	r0, #146	; 0x92
 80071b6:	f7fa ffb9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X93, 0X0004);
 80071ba:	2104      	movs	r1, #4
 80071bc:	2093      	movs	r0, #147	; 0x93
 80071be:	f7fa ffb5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0XA0, 0X0100);
 80071c2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80071c6:	20a0      	movs	r0, #160	; 0xa0
 80071c8:	f7fa ffb0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0001);
 80071cc:	2101      	movs	r1, #1
 80071ce:	2007      	movs	r0, #7
 80071d0:	f7fa ffac 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0021);
 80071d4:	2121      	movs	r1, #33	; 0x21
 80071d6:	2007      	movs	r0, #7
 80071d8:	f7fa ffa8 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0023);
 80071dc:	2123      	movs	r1, #35	; 0x23
 80071de:	2007      	movs	r0, #7
 80071e0:	f7fa ffa4 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0033);
 80071e4:	2133      	movs	r1, #51	; 0x33
 80071e6:	2007      	movs	r0, #7
 80071e8:	f7fa ffa0 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0133);
 80071ec:	f240 1133 	movw	r1, #307	; 0x133
 80071f0:	2007      	movs	r0, #7
 80071f2:	f7fa ff9b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0XA0, 0X0000);
 80071f6:	2100      	movs	r1, #0
 80071f8:	20a0      	movs	r0, #160	; 0xa0
 80071fa:	f7fa ff97 	bl	800212c <LCD_WriteReg>
 80071fe:	f000 bc6b 	b.w	8007ad8 <LCD_Init+0x3e34>
 8007202:	bf00      	nop
 8007204:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0x4535) {
 8007208:	4b5b      	ldr	r3, [pc, #364]	; (8007378 <LCD_Init+0x36d4>)
 800720a:	889b      	ldrh	r3, [r3, #4]
 800720c:	f244 5235 	movw	r2, #17717	; 0x4535
 8007210:	4293      	cmp	r3, r2
 8007212:	f040 80b3 	bne.w	800737c <LCD_Init+0x36d8>
		LCD_WriteReg(0X15, 0X0030);
 8007216:	2130      	movs	r1, #48	; 0x30
 8007218:	2015      	movs	r0, #21
 800721a:	f7fa ff87 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X9A, 0X0010);
 800721e:	2110      	movs	r1, #16
 8007220:	209a      	movs	r0, #154	; 0x9a
 8007222:	f7fa ff83 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X11, 0X0020);
 8007226:	2120      	movs	r1, #32
 8007228:	2011      	movs	r0, #17
 800722a:	f7fa ff7f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X10, 0X3428);
 800722e:	f243 4128 	movw	r1, #13352	; 0x3428
 8007232:	2010      	movs	r0, #16
 8007234:	f7fa ff7a 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X12, 0X0002);        //16
 8007238:	2102      	movs	r1, #2
 800723a:	2012      	movs	r0, #18
 800723c:	f7fa ff76 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X13, 0X1038);
 8007240:	f241 0138 	movw	r1, #4152	; 0x1038
 8007244:	2013      	movs	r0, #19
 8007246:	f7fa ff71 	bl	800212c <LCD_WriteReg>
		HAL_Delay(40);
 800724a:	2028      	movs	r0, #40	; 0x28
 800724c:	f7f9 fc3c 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X12, 0X0012);        //16
 8007250:	2112      	movs	r1, #18
 8007252:	2012      	movs	r0, #18
 8007254:	f7fa ff6a 	bl	800212c <LCD_WriteReg>
		HAL_Delay(40);
 8007258:	2028      	movs	r0, #40	; 0x28
 800725a:	f7f9 fc35 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X10, 0X3420);
 800725e:	f243 4120 	movw	r1, #13344	; 0x3420
 8007262:	2010      	movs	r0, #16
 8007264:	f7fa ff62 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X13, 0X3038);
 8007268:	f243 0138 	movw	r1, #12344	; 0x3038
 800726c:	2013      	movs	r0, #19
 800726e:	f7fa ff5d 	bl	800212c <LCD_WriteReg>
		HAL_Delay(70);
 8007272:	2046      	movs	r0, #70	; 0x46
 8007274:	f7f9 fc28 	bl	8000ac8 <HAL_Delay>
		LCD_WriteReg(0X30, 0X0000);
 8007278:	2100      	movs	r1, #0
 800727a:	2030      	movs	r0, #48	; 0x30
 800727c:	f7fa ff56 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X31, 0X0402);
 8007280:	f240 4102 	movw	r1, #1026	; 0x402
 8007284:	2031      	movs	r0, #49	; 0x31
 8007286:	f7fa ff51 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X32, 0X0307);
 800728a:	f240 3107 	movw	r1, #775	; 0x307
 800728e:	2032      	movs	r0, #50	; 0x32
 8007290:	f7fa ff4c 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X33, 0X0304);
 8007294:	f44f 7141 	mov.w	r1, #772	; 0x304
 8007298:	2033      	movs	r0, #51	; 0x33
 800729a:	f7fa ff47 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X34, 0X0004);
 800729e:	2104      	movs	r1, #4
 80072a0:	2034      	movs	r0, #52	; 0x34
 80072a2:	f7fa ff43 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X35, 0X0401);
 80072a6:	f240 4101 	movw	r1, #1025	; 0x401
 80072aa:	2035      	movs	r0, #53	; 0x35
 80072ac:	f7fa ff3e 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X36, 0X0707);
 80072b0:	f240 7107 	movw	r1, #1799	; 0x707
 80072b4:	2036      	movs	r0, #54	; 0x36
 80072b6:	f7fa ff39 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X37, 0X0305);
 80072ba:	f240 3105 	movw	r1, #773	; 0x305
 80072be:	2037      	movs	r0, #55	; 0x37
 80072c0:	f7fa ff34 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X38, 0X0610);
 80072c4:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 80072c8:	2038      	movs	r0, #56	; 0x38
 80072ca:	f7fa ff2f 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X39, 0X0610);
 80072ce:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 80072d2:	2039      	movs	r0, #57	; 0x39
 80072d4:	f7fa ff2a 	bl	800212c <LCD_WriteReg>

		LCD_WriteReg(0X01, 0X0100);
 80072d8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80072dc:	2001      	movs	r0, #1
 80072de:	f7fa ff25 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X02, 0X0300);
 80072e2:	f44f 7140 	mov.w	r1, #768	; 0x300
 80072e6:	2002      	movs	r0, #2
 80072e8:	f7fa ff20 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X03, 0X1030);        //改变方向的
 80072ec:	f241 0130 	movw	r1, #4144	; 0x1030
 80072f0:	2003      	movs	r0, #3
 80072f2:	f7fa ff1b 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X08, 0X0808);
 80072f6:	f640 0108 	movw	r1, #2056	; 0x808
 80072fa:	2008      	movs	r0, #8
 80072fc:	f7fa ff16 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X0A, 0X0008);
 8007300:	2108      	movs	r1, #8
 8007302:	200a      	movs	r0, #10
 8007304:	f7fa ff12 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X60, 0X2700);
 8007308:	f44f 511c 	mov.w	r1, #9984	; 0x2700
 800730c:	2060      	movs	r0, #96	; 0x60
 800730e:	f7fa ff0d 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X61, 0X0001);
 8007312:	2101      	movs	r1, #1
 8007314:	2061      	movs	r0, #97	; 0x61
 8007316:	f7fa ff09 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X90, 0X013E);
 800731a:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800731e:	2090      	movs	r0, #144	; 0x90
 8007320:	f7fa ff04 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X92, 0X0100);
 8007324:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007328:	2092      	movs	r0, #146	; 0x92
 800732a:	f7fa feff 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X93, 0X0100);
 800732e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007332:	2093      	movs	r0, #147	; 0x93
 8007334:	f7fa fefa 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0XA0, 0X3000);
 8007338:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800733c:	20a0      	movs	r0, #160	; 0xa0
 800733e:	f7fa fef5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0XA3, 0X0010);
 8007342:	2110      	movs	r1, #16
 8007344:	20a3      	movs	r0, #163	; 0xa3
 8007346:	f7fa fef1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0001);
 800734a:	2101      	movs	r1, #1
 800734c:	2007      	movs	r0, #7
 800734e:	f7fa feed 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0021);
 8007352:	2121      	movs	r1, #33	; 0x21
 8007354:	2007      	movs	r0, #7
 8007356:	f7fa fee9 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0023);
 800735a:	2123      	movs	r1, #35	; 0x23
 800735c:	2007      	movs	r0, #7
 800735e:	f7fa fee5 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0033);
 8007362:	2133      	movs	r1, #51	; 0x33
 8007364:	2007      	movs	r0, #7
 8007366:	f7fa fee1 	bl	800212c <LCD_WriteReg>
		LCD_WriteReg(0X07, 0X0133);
 800736a:	f240 1133 	movw	r1, #307	; 0x133
 800736e:	2007      	movs	r0, #7
 8007370:	f7fa fedc 	bl	800212c <LCD_WriteReg>
 8007374:	e3b0      	b.n	8007ad8 <LCD_Init+0x3e34>
 8007376:	bf00      	nop
 8007378:	200000a8 	.word	0x200000a8
	} else if (lcddev.id == 0X1963) {
 800737c:	4ba8      	ldr	r3, [pc, #672]	; (8007620 <LCD_Init+0x397c>)
 800737e:	889b      	ldrh	r3, [r3, #4]
 8007380:	f641 1263 	movw	r2, #6499	; 0x1963
 8007384:	4293      	cmp	r3, r2
 8007386:	f040 83a7 	bne.w	8007ad8 <LCD_Init+0x3e34>
		LCD_WR_REG(0xE2);	//Set PLL with OSC = 10MHz (hardware),	Multiplier N = 35, 250MHz < VCO < 800MHz = OSC*(N+1), VCO = 300MHz
 800738a:	20e2      	movs	r0, #226	; 0xe2
 800738c:	f7fa fe42 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x1D);		//参数1 
 8007390:	4ba4      	ldr	r3, [pc, #656]	; (8007624 <LCD_Init+0x3980>)
 8007392:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007396:	611a      	str	r2, [r3, #16]
 8007398:	4ba2      	ldr	r3, [pc, #648]	; (8007624 <LCD_Init+0x3980>)
 800739a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800739e:	615a      	str	r2, [r3, #20]
 80073a0:	4ba1      	ldr	r3, [pc, #644]	; (8007628 <LCD_Init+0x3984>)
 80073a2:	221d      	movs	r2, #29
 80073a4:	60da      	str	r2, [r3, #12]
 80073a6:	4b9f      	ldr	r3, [pc, #636]	; (8007624 <LCD_Init+0x3980>)
 80073a8:	2280      	movs	r2, #128	; 0x80
 80073aa:	615a      	str	r2, [r3, #20]
 80073ac:	4b9d      	ldr	r3, [pc, #628]	; (8007624 <LCD_Init+0x3980>)
 80073ae:	2280      	movs	r2, #128	; 0x80
 80073b0:	611a      	str	r2, [r3, #16]
 80073b2:	4b9c      	ldr	r3, [pc, #624]	; (8007624 <LCD_Init+0x3980>)
 80073b4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80073b8:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x02);		//参数2 Divider M = 2, PLL = 300/(M+1) = 100MHz
 80073ba:	4b9a      	ldr	r3, [pc, #616]	; (8007624 <LCD_Init+0x3980>)
 80073bc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80073c0:	611a      	str	r2, [r3, #16]
 80073c2:	4b98      	ldr	r3, [pc, #608]	; (8007624 <LCD_Init+0x3980>)
 80073c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80073c8:	615a      	str	r2, [r3, #20]
 80073ca:	4b97      	ldr	r3, [pc, #604]	; (8007628 <LCD_Init+0x3984>)
 80073cc:	2202      	movs	r2, #2
 80073ce:	60da      	str	r2, [r3, #12]
 80073d0:	4b94      	ldr	r3, [pc, #592]	; (8007624 <LCD_Init+0x3980>)
 80073d2:	2280      	movs	r2, #128	; 0x80
 80073d4:	615a      	str	r2, [r3, #20]
 80073d6:	4b93      	ldr	r3, [pc, #588]	; (8007624 <LCD_Init+0x3980>)
 80073d8:	2280      	movs	r2, #128	; 0x80
 80073da:	611a      	str	r2, [r3, #16]
 80073dc:	4b91      	ldr	r3, [pc, #580]	; (8007624 <LCD_Init+0x3980>)
 80073de:	f44f 7200 	mov.w	r2, #512	; 0x200
 80073e2:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x04);		//参数3 Validate M and N values   
 80073e4:	4b8f      	ldr	r3, [pc, #572]	; (8007624 <LCD_Init+0x3980>)
 80073e6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80073ea:	611a      	str	r2, [r3, #16]
 80073ec:	4b8d      	ldr	r3, [pc, #564]	; (8007624 <LCD_Init+0x3980>)
 80073ee:	f44f 7200 	mov.w	r2, #512	; 0x200
 80073f2:	615a      	str	r2, [r3, #20]
 80073f4:	4b8c      	ldr	r3, [pc, #560]	; (8007628 <LCD_Init+0x3984>)
 80073f6:	2204      	movs	r2, #4
 80073f8:	60da      	str	r2, [r3, #12]
 80073fa:	4b8a      	ldr	r3, [pc, #552]	; (8007624 <LCD_Init+0x3980>)
 80073fc:	2280      	movs	r2, #128	; 0x80
 80073fe:	615a      	str	r2, [r3, #20]
 8007400:	4b88      	ldr	r3, [pc, #544]	; (8007624 <LCD_Init+0x3980>)
 8007402:	2280      	movs	r2, #128	; 0x80
 8007404:	611a      	str	r2, [r3, #16]
 8007406:	4b87      	ldr	r3, [pc, #540]	; (8007624 <LCD_Init+0x3980>)
 8007408:	f44f 7200 	mov.w	r2, #512	; 0x200
 800740c:	611a      	str	r2, [r3, #16]
//		delay_us(100);
		HAL_Delay(1);
 800740e:	2001      	movs	r0, #1
 8007410:	f7f9 fb5a 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0xE0);		// Start PLL command
 8007414:	20e0      	movs	r0, #224	; 0xe0
 8007416:	f7fa fdfd 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x01);		// enable PLL
 800741a:	4b82      	ldr	r3, [pc, #520]	; (8007624 <LCD_Init+0x3980>)
 800741c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007420:	611a      	str	r2, [r3, #16]
 8007422:	4b80      	ldr	r3, [pc, #512]	; (8007624 <LCD_Init+0x3980>)
 8007424:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007428:	615a      	str	r2, [r3, #20]
 800742a:	4b7f      	ldr	r3, [pc, #508]	; (8007628 <LCD_Init+0x3984>)
 800742c:	2201      	movs	r2, #1
 800742e:	60da      	str	r2, [r3, #12]
 8007430:	4b7c      	ldr	r3, [pc, #496]	; (8007624 <LCD_Init+0x3980>)
 8007432:	2280      	movs	r2, #128	; 0x80
 8007434:	615a      	str	r2, [r3, #20]
 8007436:	4b7b      	ldr	r3, [pc, #492]	; (8007624 <LCD_Init+0x3980>)
 8007438:	2280      	movs	r2, #128	; 0x80
 800743a:	611a      	str	r2, [r3, #16]
 800743c:	4b79      	ldr	r3, [pc, #484]	; (8007624 <LCD_Init+0x3980>)
 800743e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007442:	611a      	str	r2, [r3, #16]
		HAL_Delay(10);
 8007444:	200a      	movs	r0, #10
 8007446:	f7f9 fb3f 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0xE0);		// Start PLL command again
 800744a:	20e0      	movs	r0, #224	; 0xe0
 800744c:	f7fa fde2 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x03);		// now, use PLL output as system clock	
 8007450:	4b74      	ldr	r3, [pc, #464]	; (8007624 <LCD_Init+0x3980>)
 8007452:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007456:	611a      	str	r2, [r3, #16]
 8007458:	4b72      	ldr	r3, [pc, #456]	; (8007624 <LCD_Init+0x3980>)
 800745a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800745e:	615a      	str	r2, [r3, #20]
 8007460:	4b71      	ldr	r3, [pc, #452]	; (8007628 <LCD_Init+0x3984>)
 8007462:	2203      	movs	r2, #3
 8007464:	60da      	str	r2, [r3, #12]
 8007466:	4b6f      	ldr	r3, [pc, #444]	; (8007624 <LCD_Init+0x3980>)
 8007468:	2280      	movs	r2, #128	; 0x80
 800746a:	615a      	str	r2, [r3, #20]
 800746c:	4b6d      	ldr	r3, [pc, #436]	; (8007624 <LCD_Init+0x3980>)
 800746e:	2280      	movs	r2, #128	; 0x80
 8007470:	611a      	str	r2, [r3, #16]
 8007472:	4b6c      	ldr	r3, [pc, #432]	; (8007624 <LCD_Init+0x3980>)
 8007474:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007478:	611a      	str	r2, [r3, #16]
		HAL_Delay(12);
 800747a:	200c      	movs	r0, #12
 800747c:	f7f9 fb24 	bl	8000ac8 <HAL_Delay>
		LCD_WR_REG(0x01);		//软复位
 8007480:	2001      	movs	r0, #1
 8007482:	f7fa fdc7 	bl	8002014 <LCD_WR_REG>
		HAL_Delay(10);
 8007486:	200a      	movs	r0, #10
 8007488:	f7f9 fb1e 	bl	8000ac8 <HAL_Delay>

		LCD_WR_REG(0xE6);		//设置像素频率,33Mhz
 800748c:	20e6      	movs	r0, #230	; 0xe6
 800748e:	f7fa fdc1 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x2F);
 8007492:	4b64      	ldr	r3, [pc, #400]	; (8007624 <LCD_Init+0x3980>)
 8007494:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007498:	611a      	str	r2, [r3, #16]
 800749a:	4b62      	ldr	r3, [pc, #392]	; (8007624 <LCD_Init+0x3980>)
 800749c:	f44f 7200 	mov.w	r2, #512	; 0x200
 80074a0:	615a      	str	r2, [r3, #20]
 80074a2:	4b61      	ldr	r3, [pc, #388]	; (8007628 <LCD_Init+0x3984>)
 80074a4:	222f      	movs	r2, #47	; 0x2f
 80074a6:	60da      	str	r2, [r3, #12]
 80074a8:	4b5e      	ldr	r3, [pc, #376]	; (8007624 <LCD_Init+0x3980>)
 80074aa:	2280      	movs	r2, #128	; 0x80
 80074ac:	615a      	str	r2, [r3, #20]
 80074ae:	4b5d      	ldr	r3, [pc, #372]	; (8007624 <LCD_Init+0x3980>)
 80074b0:	2280      	movs	r2, #128	; 0x80
 80074b2:	611a      	str	r2, [r3, #16]
 80074b4:	4b5b      	ldr	r3, [pc, #364]	; (8007624 <LCD_Init+0x3980>)
 80074b6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80074ba:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0xFF);
 80074bc:	4b59      	ldr	r3, [pc, #356]	; (8007624 <LCD_Init+0x3980>)
 80074be:	f44f 7280 	mov.w	r2, #256	; 0x100
 80074c2:	611a      	str	r2, [r3, #16]
 80074c4:	4b57      	ldr	r3, [pc, #348]	; (8007624 <LCD_Init+0x3980>)
 80074c6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80074ca:	615a      	str	r2, [r3, #20]
 80074cc:	4b56      	ldr	r3, [pc, #344]	; (8007628 <LCD_Init+0x3984>)
 80074ce:	22ff      	movs	r2, #255	; 0xff
 80074d0:	60da      	str	r2, [r3, #12]
 80074d2:	4b54      	ldr	r3, [pc, #336]	; (8007624 <LCD_Init+0x3980>)
 80074d4:	2280      	movs	r2, #128	; 0x80
 80074d6:	615a      	str	r2, [r3, #20]
 80074d8:	4b52      	ldr	r3, [pc, #328]	; (8007624 <LCD_Init+0x3980>)
 80074da:	2280      	movs	r2, #128	; 0x80
 80074dc:	611a      	str	r2, [r3, #16]
 80074de:	4b51      	ldr	r3, [pc, #324]	; (8007624 <LCD_Init+0x3980>)
 80074e0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80074e4:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0xFF);
 80074e6:	4b4f      	ldr	r3, [pc, #316]	; (8007624 <LCD_Init+0x3980>)
 80074e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80074ec:	611a      	str	r2, [r3, #16]
 80074ee:	4b4d      	ldr	r3, [pc, #308]	; (8007624 <LCD_Init+0x3980>)
 80074f0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80074f4:	615a      	str	r2, [r3, #20]
 80074f6:	4b4c      	ldr	r3, [pc, #304]	; (8007628 <LCD_Init+0x3984>)
 80074f8:	22ff      	movs	r2, #255	; 0xff
 80074fa:	60da      	str	r2, [r3, #12]
 80074fc:	4b49      	ldr	r3, [pc, #292]	; (8007624 <LCD_Init+0x3980>)
 80074fe:	2280      	movs	r2, #128	; 0x80
 8007500:	615a      	str	r2, [r3, #20]
 8007502:	4b48      	ldr	r3, [pc, #288]	; (8007624 <LCD_Init+0x3980>)
 8007504:	2280      	movs	r2, #128	; 0x80
 8007506:	611a      	str	r2, [r3, #16]
 8007508:	4b46      	ldr	r3, [pc, #280]	; (8007624 <LCD_Init+0x3980>)
 800750a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800750e:	611a      	str	r2, [r3, #16]

		LCD_WR_REG(0xB0);		//设置LCD模式
 8007510:	20b0      	movs	r0, #176	; 0xb0
 8007512:	f7fa fd7f 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x20);		//24位模式
 8007516:	4b43      	ldr	r3, [pc, #268]	; (8007624 <LCD_Init+0x3980>)
 8007518:	f44f 7280 	mov.w	r2, #256	; 0x100
 800751c:	611a      	str	r2, [r3, #16]
 800751e:	4b41      	ldr	r3, [pc, #260]	; (8007624 <LCD_Init+0x3980>)
 8007520:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007524:	615a      	str	r2, [r3, #20]
 8007526:	4b40      	ldr	r3, [pc, #256]	; (8007628 <LCD_Init+0x3984>)
 8007528:	2220      	movs	r2, #32
 800752a:	60da      	str	r2, [r3, #12]
 800752c:	4b3d      	ldr	r3, [pc, #244]	; (8007624 <LCD_Init+0x3980>)
 800752e:	2280      	movs	r2, #128	; 0x80
 8007530:	615a      	str	r2, [r3, #20]
 8007532:	4b3c      	ldr	r3, [pc, #240]	; (8007624 <LCD_Init+0x3980>)
 8007534:	2280      	movs	r2, #128	; 0x80
 8007536:	611a      	str	r2, [r3, #16]
 8007538:	4b3a      	ldr	r3, [pc, #232]	; (8007624 <LCD_Init+0x3980>)
 800753a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800753e:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);		//TFT 模式 
 8007540:	4b38      	ldr	r3, [pc, #224]	; (8007624 <LCD_Init+0x3980>)
 8007542:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007546:	611a      	str	r2, [r3, #16]
 8007548:	4b36      	ldr	r3, [pc, #216]	; (8007624 <LCD_Init+0x3980>)
 800754a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800754e:	615a      	str	r2, [r3, #20]
 8007550:	4b35      	ldr	r3, [pc, #212]	; (8007628 <LCD_Init+0x3984>)
 8007552:	2200      	movs	r2, #0
 8007554:	60da      	str	r2, [r3, #12]
 8007556:	4b33      	ldr	r3, [pc, #204]	; (8007624 <LCD_Init+0x3980>)
 8007558:	2280      	movs	r2, #128	; 0x80
 800755a:	615a      	str	r2, [r3, #20]
 800755c:	4b31      	ldr	r3, [pc, #196]	; (8007624 <LCD_Init+0x3980>)
 800755e:	2280      	movs	r2, #128	; 0x80
 8007560:	611a      	str	r2, [r3, #16]
 8007562:	4b30      	ldr	r3, [pc, #192]	; (8007624 <LCD_Init+0x3980>)
 8007564:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007568:	611a      	str	r2, [r3, #16]

		LCD_WR_DATA((SSD_HOR_RESOLUTION-1)>>8);		//设置LCD水平像素
 800756a:	4b2e      	ldr	r3, [pc, #184]	; (8007624 <LCD_Init+0x3980>)
 800756c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007570:	611a      	str	r2, [r3, #16]
 8007572:	4b2c      	ldr	r3, [pc, #176]	; (8007624 <LCD_Init+0x3980>)
 8007574:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007578:	615a      	str	r2, [r3, #20]
 800757a:	4b2b      	ldr	r3, [pc, #172]	; (8007628 <LCD_Init+0x3984>)
 800757c:	2203      	movs	r2, #3
 800757e:	60da      	str	r2, [r3, #12]
 8007580:	4b28      	ldr	r3, [pc, #160]	; (8007624 <LCD_Init+0x3980>)
 8007582:	2280      	movs	r2, #128	; 0x80
 8007584:	615a      	str	r2, [r3, #20]
 8007586:	4b27      	ldr	r3, [pc, #156]	; (8007624 <LCD_Init+0x3980>)
 8007588:	2280      	movs	r2, #128	; 0x80
 800758a:	611a      	str	r2, [r3, #16]
 800758c:	4b25      	ldr	r3, [pc, #148]	; (8007624 <LCD_Init+0x3980>)
 800758e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007592:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_HOR_RESOLUTION-1);
 8007594:	4b23      	ldr	r3, [pc, #140]	; (8007624 <LCD_Init+0x3980>)
 8007596:	f44f 7280 	mov.w	r2, #256	; 0x100
 800759a:	611a      	str	r2, [r3, #16]
 800759c:	4b21      	ldr	r3, [pc, #132]	; (8007624 <LCD_Init+0x3980>)
 800759e:	f44f 7200 	mov.w	r2, #512	; 0x200
 80075a2:	615a      	str	r2, [r3, #20]
 80075a4:	4b20      	ldr	r3, [pc, #128]	; (8007628 <LCD_Init+0x3984>)
 80075a6:	f240 321f 	movw	r2, #799	; 0x31f
 80075aa:	60da      	str	r2, [r3, #12]
 80075ac:	4b1d      	ldr	r3, [pc, #116]	; (8007624 <LCD_Init+0x3980>)
 80075ae:	2280      	movs	r2, #128	; 0x80
 80075b0:	615a      	str	r2, [r3, #20]
 80075b2:	4b1c      	ldr	r3, [pc, #112]	; (8007624 <LCD_Init+0x3980>)
 80075b4:	2280      	movs	r2, #128	; 0x80
 80075b6:	611a      	str	r2, [r3, #16]
 80075b8:	4b1a      	ldr	r3, [pc, #104]	; (8007624 <LCD_Init+0x3980>)
 80075ba:	f44f 7200 	mov.w	r2, #512	; 0x200
 80075be:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA((SSD_VER_RESOLUTION-1)>>8);		//设置LCD垂直像素
 80075c0:	4b18      	ldr	r3, [pc, #96]	; (8007624 <LCD_Init+0x3980>)
 80075c2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80075c6:	611a      	str	r2, [r3, #16]
 80075c8:	4b16      	ldr	r3, [pc, #88]	; (8007624 <LCD_Init+0x3980>)
 80075ca:	f44f 7200 	mov.w	r2, #512	; 0x200
 80075ce:	615a      	str	r2, [r3, #20]
 80075d0:	4b15      	ldr	r3, [pc, #84]	; (8007628 <LCD_Init+0x3984>)
 80075d2:	2201      	movs	r2, #1
 80075d4:	60da      	str	r2, [r3, #12]
 80075d6:	4b13      	ldr	r3, [pc, #76]	; (8007624 <LCD_Init+0x3980>)
 80075d8:	2280      	movs	r2, #128	; 0x80
 80075da:	615a      	str	r2, [r3, #20]
 80075dc:	4b11      	ldr	r3, [pc, #68]	; (8007624 <LCD_Init+0x3980>)
 80075de:	2280      	movs	r2, #128	; 0x80
 80075e0:	611a      	str	r2, [r3, #16]
 80075e2:	4b10      	ldr	r3, [pc, #64]	; (8007624 <LCD_Init+0x3980>)
 80075e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80075e8:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_VER_RESOLUTION-1);
 80075ea:	4b0e      	ldr	r3, [pc, #56]	; (8007624 <LCD_Init+0x3980>)
 80075ec:	f44f 7280 	mov.w	r2, #256	; 0x100
 80075f0:	611a      	str	r2, [r3, #16]
 80075f2:	4b0c      	ldr	r3, [pc, #48]	; (8007624 <LCD_Init+0x3980>)
 80075f4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80075f8:	615a      	str	r2, [r3, #20]
 80075fa:	4b0b      	ldr	r3, [pc, #44]	; (8007628 <LCD_Init+0x3984>)
 80075fc:	f240 12df 	movw	r2, #479	; 0x1df
 8007600:	60da      	str	r2, [r3, #12]
 8007602:	4b08      	ldr	r3, [pc, #32]	; (8007624 <LCD_Init+0x3980>)
 8007604:	2280      	movs	r2, #128	; 0x80
 8007606:	615a      	str	r2, [r3, #20]
 8007608:	4b06      	ldr	r3, [pc, #24]	; (8007624 <LCD_Init+0x3980>)
 800760a:	2280      	movs	r2, #128	; 0x80
 800760c:	611a      	str	r2, [r3, #16]
 800760e:	4b05      	ldr	r3, [pc, #20]	; (8007624 <LCD_Init+0x3980>)
 8007610:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007614:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);		//RGB序列 
 8007616:	4b03      	ldr	r3, [pc, #12]	; (8007624 <LCD_Init+0x3980>)
 8007618:	f44f 7280 	mov.w	r2, #256	; 0x100
 800761c:	e006      	b.n	800762c <LCD_Init+0x3988>
 800761e:	bf00      	nop
 8007620:	200000a8 	.word	0x200000a8
 8007624:	40011000 	.word	0x40011000
 8007628:	40010c00 	.word	0x40010c00
 800762c:	611a      	str	r2, [r3, #16]
 800762e:	4ba3      	ldr	r3, [pc, #652]	; (80078bc <LCD_Init+0x3c18>)
 8007630:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007634:	615a      	str	r2, [r3, #20]
 8007636:	4ba2      	ldr	r3, [pc, #648]	; (80078c0 <LCD_Init+0x3c1c>)
 8007638:	2200      	movs	r2, #0
 800763a:	60da      	str	r2, [r3, #12]
 800763c:	4b9f      	ldr	r3, [pc, #636]	; (80078bc <LCD_Init+0x3c18>)
 800763e:	2280      	movs	r2, #128	; 0x80
 8007640:	615a      	str	r2, [r3, #20]
 8007642:	4b9e      	ldr	r3, [pc, #632]	; (80078bc <LCD_Init+0x3c18>)
 8007644:	2280      	movs	r2, #128	; 0x80
 8007646:	611a      	str	r2, [r3, #16]
 8007648:	4b9c      	ldr	r3, [pc, #624]	; (80078bc <LCD_Init+0x3c18>)
 800764a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800764e:	611a      	str	r2, [r3, #16]

		LCD_WR_REG(0xB4);		//Set horizontal period
 8007650:	20b4      	movs	r0, #180	; 0xb4
 8007652:	f7fa fcdf 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA((SSD_HT-1)>>8);
 8007656:	4b99      	ldr	r3, [pc, #612]	; (80078bc <LCD_Init+0x3c18>)
 8007658:	f44f 7280 	mov.w	r2, #256	; 0x100
 800765c:	611a      	str	r2, [r3, #16]
 800765e:	4b97      	ldr	r3, [pc, #604]	; (80078bc <LCD_Init+0x3c18>)
 8007660:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007664:	615a      	str	r2, [r3, #20]
 8007666:	4b96      	ldr	r3, [pc, #600]	; (80078c0 <LCD_Init+0x3c1c>)
 8007668:	2204      	movs	r2, #4
 800766a:	60da      	str	r2, [r3, #12]
 800766c:	4b93      	ldr	r3, [pc, #588]	; (80078bc <LCD_Init+0x3c18>)
 800766e:	2280      	movs	r2, #128	; 0x80
 8007670:	615a      	str	r2, [r3, #20]
 8007672:	4b92      	ldr	r3, [pc, #584]	; (80078bc <LCD_Init+0x3c18>)
 8007674:	2280      	movs	r2, #128	; 0x80
 8007676:	611a      	str	r2, [r3, #16]
 8007678:	4b90      	ldr	r3, [pc, #576]	; (80078bc <LCD_Init+0x3c18>)
 800767a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800767e:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_HT-1);
 8007680:	4b8e      	ldr	r3, [pc, #568]	; (80078bc <LCD_Init+0x3c18>)
 8007682:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007686:	611a      	str	r2, [r3, #16]
 8007688:	4b8c      	ldr	r3, [pc, #560]	; (80078bc <LCD_Init+0x3c18>)
 800768a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800768e:	615a      	str	r2, [r3, #20]
 8007690:	4b8b      	ldr	r3, [pc, #556]	; (80078c0 <LCD_Init+0x3c1c>)
 8007692:	f240 421f 	movw	r2, #1055	; 0x41f
 8007696:	60da      	str	r2, [r3, #12]
 8007698:	4b88      	ldr	r3, [pc, #544]	; (80078bc <LCD_Init+0x3c18>)
 800769a:	2280      	movs	r2, #128	; 0x80
 800769c:	615a      	str	r2, [r3, #20]
 800769e:	4b87      	ldr	r3, [pc, #540]	; (80078bc <LCD_Init+0x3c18>)
 80076a0:	2280      	movs	r2, #128	; 0x80
 80076a2:	611a      	str	r2, [r3, #16]
 80076a4:	4b85      	ldr	r3, [pc, #532]	; (80078bc <LCD_Init+0x3c18>)
 80076a6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076aa:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_HPS>>8);
 80076ac:	4b83      	ldr	r3, [pc, #524]	; (80078bc <LCD_Init+0x3c18>)
 80076ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80076b2:	611a      	str	r2, [r3, #16]
 80076b4:	4b81      	ldr	r3, [pc, #516]	; (80078bc <LCD_Init+0x3c18>)
 80076b6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076ba:	615a      	str	r2, [r3, #20]
 80076bc:	4b80      	ldr	r3, [pc, #512]	; (80078c0 <LCD_Init+0x3c1c>)
 80076be:	2200      	movs	r2, #0
 80076c0:	60da      	str	r2, [r3, #12]
 80076c2:	4b7e      	ldr	r3, [pc, #504]	; (80078bc <LCD_Init+0x3c18>)
 80076c4:	2280      	movs	r2, #128	; 0x80
 80076c6:	615a      	str	r2, [r3, #20]
 80076c8:	4b7c      	ldr	r3, [pc, #496]	; (80078bc <LCD_Init+0x3c18>)
 80076ca:	2280      	movs	r2, #128	; 0x80
 80076cc:	611a      	str	r2, [r3, #16]
 80076ce:	4b7b      	ldr	r3, [pc, #492]	; (80078bc <LCD_Init+0x3c18>)
 80076d0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076d4:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_HPS);
 80076d6:	4b79      	ldr	r3, [pc, #484]	; (80078bc <LCD_Init+0x3c18>)
 80076d8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80076dc:	611a      	str	r2, [r3, #16]
 80076de:	4b77      	ldr	r3, [pc, #476]	; (80078bc <LCD_Init+0x3c18>)
 80076e0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076e4:	615a      	str	r2, [r3, #20]
 80076e6:	4b76      	ldr	r3, [pc, #472]	; (80078c0 <LCD_Init+0x3c1c>)
 80076e8:	222e      	movs	r2, #46	; 0x2e
 80076ea:	60da      	str	r2, [r3, #12]
 80076ec:	4b73      	ldr	r3, [pc, #460]	; (80078bc <LCD_Init+0x3c18>)
 80076ee:	2280      	movs	r2, #128	; 0x80
 80076f0:	615a      	str	r2, [r3, #20]
 80076f2:	4b72      	ldr	r3, [pc, #456]	; (80078bc <LCD_Init+0x3c18>)
 80076f4:	2280      	movs	r2, #128	; 0x80
 80076f6:	611a      	str	r2, [r3, #16]
 80076f8:	4b70      	ldr	r3, [pc, #448]	; (80078bc <LCD_Init+0x3c18>)
 80076fa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076fe:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_HOR_PULSE_WIDTH-1);
 8007700:	4b6e      	ldr	r3, [pc, #440]	; (80078bc <LCD_Init+0x3c18>)
 8007702:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007706:	611a      	str	r2, [r3, #16]
 8007708:	4b6c      	ldr	r3, [pc, #432]	; (80078bc <LCD_Init+0x3c18>)
 800770a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800770e:	615a      	str	r2, [r3, #20]
 8007710:	4b6b      	ldr	r3, [pc, #428]	; (80078c0 <LCD_Init+0x3c1c>)
 8007712:	2200      	movs	r2, #0
 8007714:	60da      	str	r2, [r3, #12]
 8007716:	4b69      	ldr	r3, [pc, #420]	; (80078bc <LCD_Init+0x3c18>)
 8007718:	2280      	movs	r2, #128	; 0x80
 800771a:	615a      	str	r2, [r3, #20]
 800771c:	4b67      	ldr	r3, [pc, #412]	; (80078bc <LCD_Init+0x3c18>)
 800771e:	2280      	movs	r2, #128	; 0x80
 8007720:	611a      	str	r2, [r3, #16]
 8007722:	4b66      	ldr	r3, [pc, #408]	; (80078bc <LCD_Init+0x3c18>)
 8007724:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007728:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);
 800772a:	4b64      	ldr	r3, [pc, #400]	; (80078bc <LCD_Init+0x3c18>)
 800772c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007730:	611a      	str	r2, [r3, #16]
 8007732:	4b62      	ldr	r3, [pc, #392]	; (80078bc <LCD_Init+0x3c18>)
 8007734:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007738:	615a      	str	r2, [r3, #20]
 800773a:	4b61      	ldr	r3, [pc, #388]	; (80078c0 <LCD_Init+0x3c1c>)
 800773c:	2200      	movs	r2, #0
 800773e:	60da      	str	r2, [r3, #12]
 8007740:	4b5e      	ldr	r3, [pc, #376]	; (80078bc <LCD_Init+0x3c18>)
 8007742:	2280      	movs	r2, #128	; 0x80
 8007744:	615a      	str	r2, [r3, #20]
 8007746:	4b5d      	ldr	r3, [pc, #372]	; (80078bc <LCD_Init+0x3c18>)
 8007748:	2280      	movs	r2, #128	; 0x80
 800774a:	611a      	str	r2, [r3, #16]
 800774c:	4b5b      	ldr	r3, [pc, #364]	; (80078bc <LCD_Init+0x3c18>)
 800774e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007752:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);
 8007754:	4b59      	ldr	r3, [pc, #356]	; (80078bc <LCD_Init+0x3c18>)
 8007756:	f44f 7280 	mov.w	r2, #256	; 0x100
 800775a:	611a      	str	r2, [r3, #16]
 800775c:	4b57      	ldr	r3, [pc, #348]	; (80078bc <LCD_Init+0x3c18>)
 800775e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007762:	615a      	str	r2, [r3, #20]
 8007764:	4b56      	ldr	r3, [pc, #344]	; (80078c0 <LCD_Init+0x3c1c>)
 8007766:	2200      	movs	r2, #0
 8007768:	60da      	str	r2, [r3, #12]
 800776a:	4b54      	ldr	r3, [pc, #336]	; (80078bc <LCD_Init+0x3c18>)
 800776c:	2280      	movs	r2, #128	; 0x80
 800776e:	615a      	str	r2, [r3, #20]
 8007770:	4b52      	ldr	r3, [pc, #328]	; (80078bc <LCD_Init+0x3c18>)
 8007772:	2280      	movs	r2, #128	; 0x80
 8007774:	611a      	str	r2, [r3, #16]
 8007776:	4b51      	ldr	r3, [pc, #324]	; (80078bc <LCD_Init+0x3c18>)
 8007778:	f44f 7200 	mov.w	r2, #512	; 0x200
 800777c:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);
 800777e:	4b4f      	ldr	r3, [pc, #316]	; (80078bc <LCD_Init+0x3c18>)
 8007780:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007784:	611a      	str	r2, [r3, #16]
 8007786:	4b4d      	ldr	r3, [pc, #308]	; (80078bc <LCD_Init+0x3c18>)
 8007788:	f44f 7200 	mov.w	r2, #512	; 0x200
 800778c:	615a      	str	r2, [r3, #20]
 800778e:	4b4c      	ldr	r3, [pc, #304]	; (80078c0 <LCD_Init+0x3c1c>)
 8007790:	2200      	movs	r2, #0
 8007792:	60da      	str	r2, [r3, #12]
 8007794:	4b49      	ldr	r3, [pc, #292]	; (80078bc <LCD_Init+0x3c18>)
 8007796:	2280      	movs	r2, #128	; 0x80
 8007798:	615a      	str	r2, [r3, #20]
 800779a:	4b48      	ldr	r3, [pc, #288]	; (80078bc <LCD_Init+0x3c18>)
 800779c:	2280      	movs	r2, #128	; 0x80
 800779e:	611a      	str	r2, [r3, #16]
 80077a0:	4b46      	ldr	r3, [pc, #280]	; (80078bc <LCD_Init+0x3c18>)
 80077a2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80077a6:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(0xB6);		//Set vertical period
 80077a8:	20b6      	movs	r0, #182	; 0xb6
 80077aa:	f7fa fc33 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA((SSD_VT-1)>>8);
 80077ae:	4b43      	ldr	r3, [pc, #268]	; (80078bc <LCD_Init+0x3c18>)
 80077b0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80077b4:	611a      	str	r2, [r3, #16]
 80077b6:	4b41      	ldr	r3, [pc, #260]	; (80078bc <LCD_Init+0x3c18>)
 80077b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80077bc:	615a      	str	r2, [r3, #20]
 80077be:	4b40      	ldr	r3, [pc, #256]	; (80078c0 <LCD_Init+0x3c1c>)
 80077c0:	2202      	movs	r2, #2
 80077c2:	60da      	str	r2, [r3, #12]
 80077c4:	4b3d      	ldr	r3, [pc, #244]	; (80078bc <LCD_Init+0x3c18>)
 80077c6:	2280      	movs	r2, #128	; 0x80
 80077c8:	615a      	str	r2, [r3, #20]
 80077ca:	4b3c      	ldr	r3, [pc, #240]	; (80078bc <LCD_Init+0x3c18>)
 80077cc:	2280      	movs	r2, #128	; 0x80
 80077ce:	611a      	str	r2, [r3, #16]
 80077d0:	4b3a      	ldr	r3, [pc, #232]	; (80078bc <LCD_Init+0x3c18>)
 80077d2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80077d6:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_VT-1);
 80077d8:	4b38      	ldr	r3, [pc, #224]	; (80078bc <LCD_Init+0x3c18>)
 80077da:	f44f 7280 	mov.w	r2, #256	; 0x100
 80077de:	611a      	str	r2, [r3, #16]
 80077e0:	4b36      	ldr	r3, [pc, #216]	; (80078bc <LCD_Init+0x3c18>)
 80077e2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80077e6:	615a      	str	r2, [r3, #20]
 80077e8:	4b35      	ldr	r3, [pc, #212]	; (80078c0 <LCD_Init+0x3c1c>)
 80077ea:	f44f 7203 	mov.w	r2, #524	; 0x20c
 80077ee:	60da      	str	r2, [r3, #12]
 80077f0:	4b32      	ldr	r3, [pc, #200]	; (80078bc <LCD_Init+0x3c18>)
 80077f2:	2280      	movs	r2, #128	; 0x80
 80077f4:	615a      	str	r2, [r3, #20]
 80077f6:	4b31      	ldr	r3, [pc, #196]	; (80078bc <LCD_Init+0x3c18>)
 80077f8:	2280      	movs	r2, #128	; 0x80
 80077fa:	611a      	str	r2, [r3, #16]
 80077fc:	4b2f      	ldr	r3, [pc, #188]	; (80078bc <LCD_Init+0x3c18>)
 80077fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007802:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_VPS>>8);
 8007804:	4b2d      	ldr	r3, [pc, #180]	; (80078bc <LCD_Init+0x3c18>)
 8007806:	f44f 7280 	mov.w	r2, #256	; 0x100
 800780a:	611a      	str	r2, [r3, #16]
 800780c:	4b2b      	ldr	r3, [pc, #172]	; (80078bc <LCD_Init+0x3c18>)
 800780e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007812:	615a      	str	r2, [r3, #20]
 8007814:	4b2a      	ldr	r3, [pc, #168]	; (80078c0 <LCD_Init+0x3c1c>)
 8007816:	2200      	movs	r2, #0
 8007818:	60da      	str	r2, [r3, #12]
 800781a:	4b28      	ldr	r3, [pc, #160]	; (80078bc <LCD_Init+0x3c18>)
 800781c:	2280      	movs	r2, #128	; 0x80
 800781e:	615a      	str	r2, [r3, #20]
 8007820:	4b26      	ldr	r3, [pc, #152]	; (80078bc <LCD_Init+0x3c18>)
 8007822:	2280      	movs	r2, #128	; 0x80
 8007824:	611a      	str	r2, [r3, #16]
 8007826:	4b25      	ldr	r3, [pc, #148]	; (80078bc <LCD_Init+0x3c18>)
 8007828:	f44f 7200 	mov.w	r2, #512	; 0x200
 800782c:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_VPS);
 800782e:	4b23      	ldr	r3, [pc, #140]	; (80078bc <LCD_Init+0x3c18>)
 8007830:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007834:	611a      	str	r2, [r3, #16]
 8007836:	4b21      	ldr	r3, [pc, #132]	; (80078bc <LCD_Init+0x3c18>)
 8007838:	f44f 7200 	mov.w	r2, #512	; 0x200
 800783c:	615a      	str	r2, [r3, #20]
 800783e:	4b20      	ldr	r3, [pc, #128]	; (80078c0 <LCD_Init+0x3c1c>)
 8007840:	2217      	movs	r2, #23
 8007842:	60da      	str	r2, [r3, #12]
 8007844:	4b1d      	ldr	r3, [pc, #116]	; (80078bc <LCD_Init+0x3c18>)
 8007846:	2280      	movs	r2, #128	; 0x80
 8007848:	615a      	str	r2, [r3, #20]
 800784a:	4b1c      	ldr	r3, [pc, #112]	; (80078bc <LCD_Init+0x3c18>)
 800784c:	2280      	movs	r2, #128	; 0x80
 800784e:	611a      	str	r2, [r3, #16]
 8007850:	4b1a      	ldr	r3, [pc, #104]	; (80078bc <LCD_Init+0x3c18>)
 8007852:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007856:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(SSD_VER_FRONT_PORCH-1);
 8007858:	4b18      	ldr	r3, [pc, #96]	; (80078bc <LCD_Init+0x3c18>)
 800785a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800785e:	611a      	str	r2, [r3, #16]
 8007860:	4b16      	ldr	r3, [pc, #88]	; (80078bc <LCD_Init+0x3c18>)
 8007862:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007866:	615a      	str	r2, [r3, #20]
 8007868:	4b15      	ldr	r3, [pc, #84]	; (80078c0 <LCD_Init+0x3c1c>)
 800786a:	2215      	movs	r2, #21
 800786c:	60da      	str	r2, [r3, #12]
 800786e:	4b13      	ldr	r3, [pc, #76]	; (80078bc <LCD_Init+0x3c18>)
 8007870:	2280      	movs	r2, #128	; 0x80
 8007872:	615a      	str	r2, [r3, #20]
 8007874:	4b11      	ldr	r3, [pc, #68]	; (80078bc <LCD_Init+0x3c18>)
 8007876:	2280      	movs	r2, #128	; 0x80
 8007878:	611a      	str	r2, [r3, #16]
 800787a:	4b10      	ldr	r3, [pc, #64]	; (80078bc <LCD_Init+0x3c18>)
 800787c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007880:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);
 8007882:	4b0e      	ldr	r3, [pc, #56]	; (80078bc <LCD_Init+0x3c18>)
 8007884:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007888:	611a      	str	r2, [r3, #16]
 800788a:	4b0c      	ldr	r3, [pc, #48]	; (80078bc <LCD_Init+0x3c18>)
 800788c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007890:	615a      	str	r2, [r3, #20]
 8007892:	4b0b      	ldr	r3, [pc, #44]	; (80078c0 <LCD_Init+0x3c1c>)
 8007894:	2200      	movs	r2, #0
 8007896:	60da      	str	r2, [r3, #12]
 8007898:	4b08      	ldr	r3, [pc, #32]	; (80078bc <LCD_Init+0x3c18>)
 800789a:	2280      	movs	r2, #128	; 0x80
 800789c:	615a      	str	r2, [r3, #20]
 800789e:	4b07      	ldr	r3, [pc, #28]	; (80078bc <LCD_Init+0x3c18>)
 80078a0:	2280      	movs	r2, #128	; 0x80
 80078a2:	611a      	str	r2, [r3, #16]
 80078a4:	4b05      	ldr	r3, [pc, #20]	; (80078bc <LCD_Init+0x3c18>)
 80078a6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80078aa:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);
 80078ac:	4b03      	ldr	r3, [pc, #12]	; (80078bc <LCD_Init+0x3c18>)
 80078ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80078b2:	611a      	str	r2, [r3, #16]
 80078b4:	4b01      	ldr	r3, [pc, #4]	; (80078bc <LCD_Init+0x3c18>)
 80078b6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80078ba:	e003      	b.n	80078c4 <LCD_Init+0x3c20>
 80078bc:	40011000 	.word	0x40011000
 80078c0:	40010c00 	.word	0x40010c00
 80078c4:	615a      	str	r2, [r3, #20]
 80078c6:	4b8b      	ldr	r3, [pc, #556]	; (8007af4 <LCD_Init+0x3e50>)
 80078c8:	2200      	movs	r2, #0
 80078ca:	60da      	str	r2, [r3, #12]
 80078cc:	4b8a      	ldr	r3, [pc, #552]	; (8007af8 <LCD_Init+0x3e54>)
 80078ce:	2280      	movs	r2, #128	; 0x80
 80078d0:	615a      	str	r2, [r3, #20]
 80078d2:	4b89      	ldr	r3, [pc, #548]	; (8007af8 <LCD_Init+0x3e54>)
 80078d4:	2280      	movs	r2, #128	; 0x80
 80078d6:	611a      	str	r2, [r3, #16]
 80078d8:	4b87      	ldr	r3, [pc, #540]	; (8007af8 <LCD_Init+0x3e54>)
 80078da:	f44f 7200 	mov.w	r2, #512	; 0x200
 80078de:	611a      	str	r2, [r3, #16]

		LCD_WR_REG(0xF0);	//设置SSD1963与CPU接口为16bit  
 80078e0:	20f0      	movs	r0, #240	; 0xf0
 80078e2:	f7fa fb97 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x03);	//16-bit(565 format) data for 16bpp 
 80078e6:	4b84      	ldr	r3, [pc, #528]	; (8007af8 <LCD_Init+0x3e54>)
 80078e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80078ec:	611a      	str	r2, [r3, #16]
 80078ee:	4b82      	ldr	r3, [pc, #520]	; (8007af8 <LCD_Init+0x3e54>)
 80078f0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80078f4:	615a      	str	r2, [r3, #20]
 80078f6:	4b7f      	ldr	r3, [pc, #508]	; (8007af4 <LCD_Init+0x3e50>)
 80078f8:	2203      	movs	r2, #3
 80078fa:	60da      	str	r2, [r3, #12]
 80078fc:	4b7e      	ldr	r3, [pc, #504]	; (8007af8 <LCD_Init+0x3e54>)
 80078fe:	2280      	movs	r2, #128	; 0x80
 8007900:	615a      	str	r2, [r3, #20]
 8007902:	4b7d      	ldr	r3, [pc, #500]	; (8007af8 <LCD_Init+0x3e54>)
 8007904:	2280      	movs	r2, #128	; 0x80
 8007906:	611a      	str	r2, [r3, #16]
 8007908:	4b7b      	ldr	r3, [pc, #492]	; (8007af8 <LCD_Init+0x3e54>)
 800790a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800790e:	611a      	str	r2, [r3, #16]

		LCD_WR_REG(0x29);	//开启显示
 8007910:	2029      	movs	r0, #41	; 0x29
 8007912:	f7fa fb7f 	bl	8002014 <LCD_WR_REG>
		//设置PWM输出  背光通过占空比可调 
		LCD_WR_REG(0xD0);	//设置自动白平衡DBC
 8007916:	20d0      	movs	r0, #208	; 0xd0
 8007918:	f7fa fb7c 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x00);	//disable
 800791c:	4b76      	ldr	r3, [pc, #472]	; (8007af8 <LCD_Init+0x3e54>)
 800791e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007922:	611a      	str	r2, [r3, #16]
 8007924:	4b74      	ldr	r3, [pc, #464]	; (8007af8 <LCD_Init+0x3e54>)
 8007926:	f44f 7200 	mov.w	r2, #512	; 0x200
 800792a:	615a      	str	r2, [r3, #20]
 800792c:	4b71      	ldr	r3, [pc, #452]	; (8007af4 <LCD_Init+0x3e50>)
 800792e:	2200      	movs	r2, #0
 8007930:	60da      	str	r2, [r3, #12]
 8007932:	4b71      	ldr	r3, [pc, #452]	; (8007af8 <LCD_Init+0x3e54>)
 8007934:	2280      	movs	r2, #128	; 0x80
 8007936:	615a      	str	r2, [r3, #20]
 8007938:	4b6f      	ldr	r3, [pc, #444]	; (8007af8 <LCD_Init+0x3e54>)
 800793a:	2280      	movs	r2, #128	; 0x80
 800793c:	611a      	str	r2, [r3, #16]
 800793e:	4b6e      	ldr	r3, [pc, #440]	; (8007af8 <LCD_Init+0x3e54>)
 8007940:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007944:	611a      	str	r2, [r3, #16]

		LCD_WR_REG(0xBE);	//配置PWM输出
 8007946:	20be      	movs	r0, #190	; 0xbe
 8007948:	f7fa fb64 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x05);	//1设置PWM频率
 800794c:	4b6a      	ldr	r3, [pc, #424]	; (8007af8 <LCD_Init+0x3e54>)
 800794e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007952:	611a      	str	r2, [r3, #16]
 8007954:	4b68      	ldr	r3, [pc, #416]	; (8007af8 <LCD_Init+0x3e54>)
 8007956:	f44f 7200 	mov.w	r2, #512	; 0x200
 800795a:	615a      	str	r2, [r3, #20]
 800795c:	4b65      	ldr	r3, [pc, #404]	; (8007af4 <LCD_Init+0x3e50>)
 800795e:	2205      	movs	r2, #5
 8007960:	60da      	str	r2, [r3, #12]
 8007962:	4b65      	ldr	r3, [pc, #404]	; (8007af8 <LCD_Init+0x3e54>)
 8007964:	2280      	movs	r2, #128	; 0x80
 8007966:	615a      	str	r2, [r3, #20]
 8007968:	4b63      	ldr	r3, [pc, #396]	; (8007af8 <LCD_Init+0x3e54>)
 800796a:	2280      	movs	r2, #128	; 0x80
 800796c:	611a      	str	r2, [r3, #16]
 800796e:	4b62      	ldr	r3, [pc, #392]	; (8007af8 <LCD_Init+0x3e54>)
 8007970:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007974:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0xFE);	//2设置PWM占空比
 8007976:	4b60      	ldr	r3, [pc, #384]	; (8007af8 <LCD_Init+0x3e54>)
 8007978:	f44f 7280 	mov.w	r2, #256	; 0x100
 800797c:	611a      	str	r2, [r3, #16]
 800797e:	4b5e      	ldr	r3, [pc, #376]	; (8007af8 <LCD_Init+0x3e54>)
 8007980:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007984:	615a      	str	r2, [r3, #20]
 8007986:	4b5b      	ldr	r3, [pc, #364]	; (8007af4 <LCD_Init+0x3e50>)
 8007988:	22fe      	movs	r2, #254	; 0xfe
 800798a:	60da      	str	r2, [r3, #12]
 800798c:	4b5a      	ldr	r3, [pc, #360]	; (8007af8 <LCD_Init+0x3e54>)
 800798e:	2280      	movs	r2, #128	; 0x80
 8007990:	615a      	str	r2, [r3, #20]
 8007992:	4b59      	ldr	r3, [pc, #356]	; (8007af8 <LCD_Init+0x3e54>)
 8007994:	2280      	movs	r2, #128	; 0x80
 8007996:	611a      	str	r2, [r3, #16]
 8007998:	4b57      	ldr	r3, [pc, #348]	; (8007af8 <LCD_Init+0x3e54>)
 800799a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800799e:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x01);	//3设置C
 80079a0:	4b55      	ldr	r3, [pc, #340]	; (8007af8 <LCD_Init+0x3e54>)
 80079a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80079a6:	611a      	str	r2, [r3, #16]
 80079a8:	4b53      	ldr	r3, [pc, #332]	; (8007af8 <LCD_Init+0x3e54>)
 80079aa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80079ae:	615a      	str	r2, [r3, #20]
 80079b0:	4b50      	ldr	r3, [pc, #320]	; (8007af4 <LCD_Init+0x3e50>)
 80079b2:	2201      	movs	r2, #1
 80079b4:	60da      	str	r2, [r3, #12]
 80079b6:	4b50      	ldr	r3, [pc, #320]	; (8007af8 <LCD_Init+0x3e54>)
 80079b8:	2280      	movs	r2, #128	; 0x80
 80079ba:	615a      	str	r2, [r3, #20]
 80079bc:	4b4e      	ldr	r3, [pc, #312]	; (8007af8 <LCD_Init+0x3e54>)
 80079be:	2280      	movs	r2, #128	; 0x80
 80079c0:	611a      	str	r2, [r3, #16]
 80079c2:	4b4d      	ldr	r3, [pc, #308]	; (8007af8 <LCD_Init+0x3e54>)
 80079c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80079c8:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);	//4设置D
 80079ca:	4b4b      	ldr	r3, [pc, #300]	; (8007af8 <LCD_Init+0x3e54>)
 80079cc:	f44f 7280 	mov.w	r2, #256	; 0x100
 80079d0:	611a      	str	r2, [r3, #16]
 80079d2:	4b49      	ldr	r3, [pc, #292]	; (8007af8 <LCD_Init+0x3e54>)
 80079d4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80079d8:	615a      	str	r2, [r3, #20]
 80079da:	4b46      	ldr	r3, [pc, #280]	; (8007af4 <LCD_Init+0x3e50>)
 80079dc:	2200      	movs	r2, #0
 80079de:	60da      	str	r2, [r3, #12]
 80079e0:	4b45      	ldr	r3, [pc, #276]	; (8007af8 <LCD_Init+0x3e54>)
 80079e2:	2280      	movs	r2, #128	; 0x80
 80079e4:	615a      	str	r2, [r3, #20]
 80079e6:	4b44      	ldr	r3, [pc, #272]	; (8007af8 <LCD_Init+0x3e54>)
 80079e8:	2280      	movs	r2, #128	; 0x80
 80079ea:	611a      	str	r2, [r3, #16]
 80079ec:	4b42      	ldr	r3, [pc, #264]	; (8007af8 <LCD_Init+0x3e54>)
 80079ee:	f44f 7200 	mov.w	r2, #512	; 0x200
 80079f2:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);	//5设置E 
 80079f4:	4b40      	ldr	r3, [pc, #256]	; (8007af8 <LCD_Init+0x3e54>)
 80079f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80079fa:	611a      	str	r2, [r3, #16]
 80079fc:	4b3e      	ldr	r3, [pc, #248]	; (8007af8 <LCD_Init+0x3e54>)
 80079fe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a02:	615a      	str	r2, [r3, #20]
 8007a04:	4b3b      	ldr	r3, [pc, #236]	; (8007af4 <LCD_Init+0x3e50>)
 8007a06:	2200      	movs	r2, #0
 8007a08:	60da      	str	r2, [r3, #12]
 8007a0a:	4b3b      	ldr	r3, [pc, #236]	; (8007af8 <LCD_Init+0x3e54>)
 8007a0c:	2280      	movs	r2, #128	; 0x80
 8007a0e:	615a      	str	r2, [r3, #20]
 8007a10:	4b39      	ldr	r3, [pc, #228]	; (8007af8 <LCD_Init+0x3e54>)
 8007a12:	2280      	movs	r2, #128	; 0x80
 8007a14:	611a      	str	r2, [r3, #16]
 8007a16:	4b38      	ldr	r3, [pc, #224]	; (8007af8 <LCD_Init+0x3e54>)
 8007a18:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a1c:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x00);	//6设置F 
 8007a1e:	4b36      	ldr	r3, [pc, #216]	; (8007af8 <LCD_Init+0x3e54>)
 8007a20:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007a24:	611a      	str	r2, [r3, #16]
 8007a26:	4b34      	ldr	r3, [pc, #208]	; (8007af8 <LCD_Init+0x3e54>)
 8007a28:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a2c:	615a      	str	r2, [r3, #20]
 8007a2e:	4b31      	ldr	r3, [pc, #196]	; (8007af4 <LCD_Init+0x3e50>)
 8007a30:	2200      	movs	r2, #0
 8007a32:	60da      	str	r2, [r3, #12]
 8007a34:	4b30      	ldr	r3, [pc, #192]	; (8007af8 <LCD_Init+0x3e54>)
 8007a36:	2280      	movs	r2, #128	; 0x80
 8007a38:	615a      	str	r2, [r3, #20]
 8007a3a:	4b2f      	ldr	r3, [pc, #188]	; (8007af8 <LCD_Init+0x3e54>)
 8007a3c:	2280      	movs	r2, #128	; 0x80
 8007a3e:	611a      	str	r2, [r3, #16]
 8007a40:	4b2d      	ldr	r3, [pc, #180]	; (8007af8 <LCD_Init+0x3e54>)
 8007a42:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a46:	611a      	str	r2, [r3, #16]

		LCD_WR_REG(0xB8);	//设置GPIO配置
 8007a48:	20b8      	movs	r0, #184	; 0xb8
 8007a4a:	f7fa fae3 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0x03);	//2个IO口设置成输出
 8007a4e:	4b2a      	ldr	r3, [pc, #168]	; (8007af8 <LCD_Init+0x3e54>)
 8007a50:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007a54:	611a      	str	r2, [r3, #16]
 8007a56:	4b28      	ldr	r3, [pc, #160]	; (8007af8 <LCD_Init+0x3e54>)
 8007a58:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a5c:	615a      	str	r2, [r3, #20]
 8007a5e:	4b25      	ldr	r3, [pc, #148]	; (8007af4 <LCD_Init+0x3e50>)
 8007a60:	2203      	movs	r2, #3
 8007a62:	60da      	str	r2, [r3, #12]
 8007a64:	4b24      	ldr	r3, [pc, #144]	; (8007af8 <LCD_Init+0x3e54>)
 8007a66:	2280      	movs	r2, #128	; 0x80
 8007a68:	615a      	str	r2, [r3, #20]
 8007a6a:	4b23      	ldr	r3, [pc, #140]	; (8007af8 <LCD_Init+0x3e54>)
 8007a6c:	2280      	movs	r2, #128	; 0x80
 8007a6e:	611a      	str	r2, [r3, #16]
 8007a70:	4b21      	ldr	r3, [pc, #132]	; (8007af8 <LCD_Init+0x3e54>)
 8007a72:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a76:	611a      	str	r2, [r3, #16]
		LCD_WR_DATA(0x01);	//GPIO使用正常的IO功能 
 8007a78:	4b1f      	ldr	r3, [pc, #124]	; (8007af8 <LCD_Init+0x3e54>)
 8007a7a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007a7e:	611a      	str	r2, [r3, #16]
 8007a80:	4b1d      	ldr	r3, [pc, #116]	; (8007af8 <LCD_Init+0x3e54>)
 8007a82:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a86:	615a      	str	r2, [r3, #20]
 8007a88:	4b1a      	ldr	r3, [pc, #104]	; (8007af4 <LCD_Init+0x3e50>)
 8007a8a:	2201      	movs	r2, #1
 8007a8c:	60da      	str	r2, [r3, #12]
 8007a8e:	4b1a      	ldr	r3, [pc, #104]	; (8007af8 <LCD_Init+0x3e54>)
 8007a90:	2280      	movs	r2, #128	; 0x80
 8007a92:	615a      	str	r2, [r3, #20]
 8007a94:	4b18      	ldr	r3, [pc, #96]	; (8007af8 <LCD_Init+0x3e54>)
 8007a96:	2280      	movs	r2, #128	; 0x80
 8007a98:	611a      	str	r2, [r3, #16]
 8007a9a:	4b17      	ldr	r3, [pc, #92]	; (8007af8 <LCD_Init+0x3e54>)
 8007a9c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007aa0:	611a      	str	r2, [r3, #16]
		LCD_WR_REG(0xBA);
 8007aa2:	20ba      	movs	r0, #186	; 0xba
 8007aa4:	f7fa fab6 	bl	8002014 <LCD_WR_REG>
		LCD_WR_DATA(0X01);	//GPIO[1:0]=01,控制LCD方向
 8007aa8:	4b13      	ldr	r3, [pc, #76]	; (8007af8 <LCD_Init+0x3e54>)
 8007aaa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007aae:	611a      	str	r2, [r3, #16]
 8007ab0:	4b11      	ldr	r3, [pc, #68]	; (8007af8 <LCD_Init+0x3e54>)
 8007ab2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007ab6:	615a      	str	r2, [r3, #20]
 8007ab8:	4b0e      	ldr	r3, [pc, #56]	; (8007af4 <LCD_Init+0x3e50>)
 8007aba:	2201      	movs	r2, #1
 8007abc:	60da      	str	r2, [r3, #12]
 8007abe:	4b0e      	ldr	r3, [pc, #56]	; (8007af8 <LCD_Init+0x3e54>)
 8007ac0:	2280      	movs	r2, #128	; 0x80
 8007ac2:	615a      	str	r2, [r3, #20]
 8007ac4:	4b0c      	ldr	r3, [pc, #48]	; (8007af8 <LCD_Init+0x3e54>)
 8007ac6:	2280      	movs	r2, #128	; 0x80
 8007ac8:	611a      	str	r2, [r3, #16]
 8007aca:	4b0b      	ldr	r3, [pc, #44]	; (8007af8 <LCD_Init+0x3e54>)
 8007acc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007ad0:	611a      	str	r2, [r3, #16]

		LCD_SSD_BackLightSet(100);	//背光设置为最亮
 8007ad2:	2064      	movs	r0, #100	; 0x64
 8007ad4:	f7fb fc14 	bl	8003300 <LCD_SSD_BackLightSet>
	}
	LCD_Display_Dir(0);		 	//默认为竖屏
 8007ad8:	2000      	movs	r0, #0
 8007ada:	f7fb fcb5 	bl	8003448 <LCD_Display_Dir>
	LCD_LED = 1;					//点亮背光
 8007ade:	4b07      	ldr	r3, [pc, #28]	; (8007afc <LCD_Init+0x3e58>)
 8007ae0:	2201      	movs	r2, #1
 8007ae2:	601a      	str	r2, [r3, #0]
	LCD_Clear(WHITE);
 8007ae4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007ae8:	f000 f80a 	bl	8007b00 <LCD_Clear>
}
 8007aec:	bf00      	nop
 8007aee:	3718      	adds	r7, #24
 8007af0:	46bd      	mov	sp, r7
 8007af2:	bd80      	pop	{r7, pc}
 8007af4:	40010c00 	.word	0x40010c00
 8007af8:	40011000 	.word	0x40011000
 8007afc:	422201a8 	.word	0x422201a8

08007b00 <LCD_Clear>:

// Clear the screen with specific color
void LCD_Clear(uint16_t color) {
 8007b00:	b580      	push	{r7, lr}
 8007b02:	b084      	sub	sp, #16
 8007b04:	af00      	add	r7, sp, #0
 8007b06:	4603      	mov	r3, r0
 8007b08:	80fb      	strh	r3, [r7, #6]
	uint32_t index = 0;
 8007b0a:	2300      	movs	r3, #0
 8007b0c:	60fb      	str	r3, [r7, #12]
	uint32_t totalpoint = lcddev.width;
 8007b0e:	4b2a      	ldr	r3, [pc, #168]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b10:	881b      	ldrh	r3, [r3, #0]
 8007b12:	60bb      	str	r3, [r7, #8]
	totalpoint *= lcddev.height; 			//得到总点数
 8007b14:	4b28      	ldr	r3, [pc, #160]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b16:	885b      	ldrh	r3, [r3, #2]
 8007b18:	461a      	mov	r2, r3
 8007b1a:	68bb      	ldr	r3, [r7, #8]
 8007b1c:	fb02 f303 	mul.w	r3, r2, r3
 8007b20:	60bb      	str	r3, [r7, #8]
	if ((lcddev.id == 0X6804) && (lcddev.dir == 1)) 			//6804横屏的时候特殊处理
 8007b22:	4b25      	ldr	r3, [pc, #148]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b24:	889b      	ldrh	r3, [r3, #4]
 8007b26:	f646 0204 	movw	r2, #26628	; 0x6804
 8007b2a:	4293      	cmp	r3, r2
 8007b2c:	d11a      	bne.n	8007b64 <LCD_Clear+0x64>
 8007b2e:	4b22      	ldr	r3, [pc, #136]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b30:	799b      	ldrb	r3, [r3, #6]
 8007b32:	2b01      	cmp	r3, #1
 8007b34:	d116      	bne.n	8007b64 <LCD_Clear+0x64>
			{
		lcddev.dir = 0;
 8007b36:	4b20      	ldr	r3, [pc, #128]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b38:	2200      	movs	r2, #0
 8007b3a:	719a      	strb	r2, [r3, #6]
		lcddev.setxcmd = 0X2A;
 8007b3c:	4b1e      	ldr	r3, [pc, #120]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b3e:	222a      	movs	r2, #42	; 0x2a
 8007b40:	815a      	strh	r2, [r3, #10]
		lcddev.setycmd = 0X2B;
 8007b42:	4b1d      	ldr	r3, [pc, #116]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b44:	222b      	movs	r2, #43	; 0x2b
 8007b46:	819a      	strh	r2, [r3, #12]
		LCD_SetCursor(0x00, 0x0000);		//设置光标位置
 8007b48:	2100      	movs	r1, #0
 8007b4a:	2000      	movs	r0, #0
 8007b4c:	f7fa fb34 	bl	80021b8 <LCD_SetCursor>
		lcddev.dir = 1;
 8007b50:	4b19      	ldr	r3, [pc, #100]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b52:	2201      	movs	r2, #1
 8007b54:	719a      	strb	r2, [r3, #6]
		lcddev.setxcmd = 0X2B;
 8007b56:	4b18      	ldr	r3, [pc, #96]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b58:	222b      	movs	r2, #43	; 0x2b
 8007b5a:	815a      	strh	r2, [r3, #10]
		lcddev.setycmd = 0X2A;
 8007b5c:	4b16      	ldr	r3, [pc, #88]	; (8007bb8 <LCD_Clear+0xb8>)
 8007b5e:	222a      	movs	r2, #42	; 0x2a
 8007b60:	819a      	strh	r2, [r3, #12]
 8007b62:	e003      	b.n	8007b6c <LCD_Clear+0x6c>
	} else
		LCD_SetCursor(0x00, 0x0000);	//设置光标位置
 8007b64:	2100      	movs	r1, #0
 8007b66:	2000      	movs	r0, #0
 8007b68:	f7fa fb26 	bl	80021b8 <LCD_SetCursor>
	LCD_WriteRAM_Prepare();     		//开始写入GRAM	  	  
 8007b6c:	f7fa fb18 	bl	80021a0 <LCD_WriteRAM_Prepare>
	for (index = 0; index < totalpoint; index++)
 8007b70:	2300      	movs	r3, #0
 8007b72:	60fb      	str	r3, [r7, #12]
 8007b74:	e017      	b.n	8007ba6 <LCD_Clear+0xa6>
		LCD_WR_DATA(color);
 8007b76:	4b11      	ldr	r3, [pc, #68]	; (8007bbc <LCD_Clear+0xbc>)
 8007b78:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007b7c:	611a      	str	r2, [r3, #16]
 8007b7e:	4b0f      	ldr	r3, [pc, #60]	; (8007bbc <LCD_Clear+0xbc>)
 8007b80:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007b84:	615a      	str	r2, [r3, #20]
 8007b86:	4a0e      	ldr	r2, [pc, #56]	; (8007bc0 <LCD_Clear+0xc0>)
 8007b88:	88fb      	ldrh	r3, [r7, #6]
 8007b8a:	60d3      	str	r3, [r2, #12]
 8007b8c:	4b0b      	ldr	r3, [pc, #44]	; (8007bbc <LCD_Clear+0xbc>)
 8007b8e:	2280      	movs	r2, #128	; 0x80
 8007b90:	615a      	str	r2, [r3, #20]
 8007b92:	4b0a      	ldr	r3, [pc, #40]	; (8007bbc <LCD_Clear+0xbc>)
 8007b94:	2280      	movs	r2, #128	; 0x80
 8007b96:	611a      	str	r2, [r3, #16]
 8007b98:	4b08      	ldr	r3, [pc, #32]	; (8007bbc <LCD_Clear+0xbc>)
 8007b9a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007b9e:	611a      	str	r2, [r3, #16]
	for (index = 0; index < totalpoint; index++)
 8007ba0:	68fb      	ldr	r3, [r7, #12]
 8007ba2:	3301      	adds	r3, #1
 8007ba4:	60fb      	str	r3, [r7, #12]
 8007ba6:	68fa      	ldr	r2, [r7, #12]
 8007ba8:	68bb      	ldr	r3, [r7, #8]
 8007baa:	429a      	cmp	r2, r3
 8007bac:	d3e3      	bcc.n	8007b76 <LCD_Clear+0x76>
}
 8007bae:	bf00      	nop
 8007bb0:	3710      	adds	r7, #16
 8007bb2:	46bd      	mov	sp, r7
 8007bb4:	bd80      	pop	{r7, pc}
 8007bb6:	bf00      	nop
 8007bb8:	200000a8 	.word	0x200000a8
 8007bbc:	40011000 	.word	0x40011000
 8007bc0:	40010c00 	.word	0x40010c00

08007bc4 <LCD_Fill>:
// Fill the area with color
// :(xend-xsta+1)*(yend-ysta+1)
void LCD_Fill(uint16_t sx, uint16_t sy, uint16_t ex, uint16_t ey,
		uint16_t color) {
 8007bc4:	b590      	push	{r4, r7, lr}
 8007bc6:	b087      	sub	sp, #28
 8007bc8:	af02      	add	r7, sp, #8
 8007bca:	4604      	mov	r4, r0
 8007bcc:	4608      	mov	r0, r1
 8007bce:	4611      	mov	r1, r2
 8007bd0:	461a      	mov	r2, r3
 8007bd2:	4623      	mov	r3, r4
 8007bd4:	80fb      	strh	r3, [r7, #6]
 8007bd6:	4603      	mov	r3, r0
 8007bd8:	80bb      	strh	r3, [r7, #4]
 8007bda:	460b      	mov	r3, r1
 8007bdc:	807b      	strh	r3, [r7, #2]
 8007bde:	4613      	mov	r3, r2
 8007be0:	803b      	strh	r3, [r7, #0]
	uint16_t i, j;
	uint16_t xlen = 0;
 8007be2:	2300      	movs	r3, #0
 8007be4:	817b      	strh	r3, [r7, #10]
	uint16_t temp;
	if ((lcddev.id == 0X6804) && (lcddev.dir == 1))	//6804横屏的时候特殊处理
 8007be6:	4b3a      	ldr	r3, [pc, #232]	; (8007cd0 <LCD_Fill+0x10c>)
 8007be8:	889b      	ldrh	r3, [r3, #4]
 8007bea:	f646 0204 	movw	r2, #26628	; 0x6804
 8007bee:	4293      	cmp	r3, r2
 8007bf0:	d133      	bne.n	8007c5a <LCD_Fill+0x96>
 8007bf2:	4b37      	ldr	r3, [pc, #220]	; (8007cd0 <LCD_Fill+0x10c>)
 8007bf4:	799b      	ldrb	r3, [r3, #6]
 8007bf6:	2b01      	cmp	r3, #1
 8007bf8:	d12f      	bne.n	8007c5a <LCD_Fill+0x96>
			{
		temp = sx;
 8007bfa:	88fb      	ldrh	r3, [r7, #6]
 8007bfc:	813b      	strh	r3, [r7, #8]
		sx = sy;
 8007bfe:	88bb      	ldrh	r3, [r7, #4]
 8007c00:	80fb      	strh	r3, [r7, #6]
		sy = lcddev.width - ex - 1;
 8007c02:	4b33      	ldr	r3, [pc, #204]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c04:	881a      	ldrh	r2, [r3, #0]
 8007c06:	887b      	ldrh	r3, [r7, #2]
 8007c08:	1ad3      	subs	r3, r2, r3
 8007c0a:	b29b      	uxth	r3, r3
 8007c0c:	3b01      	subs	r3, #1
 8007c0e:	80bb      	strh	r3, [r7, #4]
		ex = ey;
 8007c10:	883b      	ldrh	r3, [r7, #0]
 8007c12:	807b      	strh	r3, [r7, #2]
		ey = lcddev.width - temp - 1;
 8007c14:	4b2e      	ldr	r3, [pc, #184]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c16:	881a      	ldrh	r2, [r3, #0]
 8007c18:	893b      	ldrh	r3, [r7, #8]
 8007c1a:	1ad3      	subs	r3, r2, r3
 8007c1c:	b29b      	uxth	r3, r3
 8007c1e:	3b01      	subs	r3, #1
 8007c20:	803b      	strh	r3, [r7, #0]
		lcddev.dir = 0;
 8007c22:	4b2b      	ldr	r3, [pc, #172]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c24:	2200      	movs	r2, #0
 8007c26:	719a      	strb	r2, [r3, #6]
		lcddev.setxcmd = 0X2A;
 8007c28:	4b29      	ldr	r3, [pc, #164]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c2a:	222a      	movs	r2, #42	; 0x2a
 8007c2c:	815a      	strh	r2, [r3, #10]
		lcddev.setycmd = 0X2B;
 8007c2e:	4b28      	ldr	r3, [pc, #160]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c30:	222b      	movs	r2, #43	; 0x2b
 8007c32:	819a      	strh	r2, [r3, #12]
		LCD_Fill(sx, sy, ex, ey, color);
 8007c34:	883c      	ldrh	r4, [r7, #0]
 8007c36:	887a      	ldrh	r2, [r7, #2]
 8007c38:	88b9      	ldrh	r1, [r7, #4]
 8007c3a:	88f8      	ldrh	r0, [r7, #6]
 8007c3c:	8c3b      	ldrh	r3, [r7, #32]
 8007c3e:	9300      	str	r3, [sp, #0]
 8007c40:	4623      	mov	r3, r4
 8007c42:	f7ff ffbf 	bl	8007bc4 <LCD_Fill>
		lcddev.dir = 1;
 8007c46:	4b22      	ldr	r3, [pc, #136]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c48:	2201      	movs	r2, #1
 8007c4a:	719a      	strb	r2, [r3, #6]
		lcddev.setxcmd = 0X2B;
 8007c4c:	4b20      	ldr	r3, [pc, #128]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c4e:	222b      	movs	r2, #43	; 0x2b
 8007c50:	815a      	strh	r2, [r3, #10]
		lcddev.setycmd = 0X2A;
 8007c52:	4b1f      	ldr	r3, [pc, #124]	; (8007cd0 <LCD_Fill+0x10c>)
 8007c54:	222a      	movs	r2, #42	; 0x2a
 8007c56:	819a      	strh	r2, [r3, #12]
 8007c58:	e036      	b.n	8007cc8 <LCD_Fill+0x104>
	} else {
		xlen = ex - sx + 1;
 8007c5a:	887a      	ldrh	r2, [r7, #2]
 8007c5c:	88fb      	ldrh	r3, [r7, #6]
 8007c5e:	1ad3      	subs	r3, r2, r3
 8007c60:	b29b      	uxth	r3, r3
 8007c62:	3301      	adds	r3, #1
 8007c64:	817b      	strh	r3, [r7, #10]
		for (i = sy; i <= ey; i++) {
 8007c66:	88bb      	ldrh	r3, [r7, #4]
 8007c68:	81fb      	strh	r3, [r7, #14]
 8007c6a:	e029      	b.n	8007cc0 <LCD_Fill+0xfc>
			LCD_SetCursor(sx, i);      				//设置光标位置
 8007c6c:	89fa      	ldrh	r2, [r7, #14]
 8007c6e:	88fb      	ldrh	r3, [r7, #6]
 8007c70:	4611      	mov	r1, r2
 8007c72:	4618      	mov	r0, r3
 8007c74:	f7fa faa0 	bl	80021b8 <LCD_SetCursor>
			LCD_WriteRAM_Prepare();     			//开始写入GRAM	  
 8007c78:	f7fa fa92 	bl	80021a0 <LCD_WriteRAM_Prepare>
			for (j = 0; j < xlen; j++)
 8007c7c:	2300      	movs	r3, #0
 8007c7e:	81bb      	strh	r3, [r7, #12]
 8007c80:	e017      	b.n	8007cb2 <LCD_Fill+0xee>
				LCD_WR_DATA(color);	//设置光标位置
 8007c82:	4b14      	ldr	r3, [pc, #80]	; (8007cd4 <LCD_Fill+0x110>)
 8007c84:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007c88:	611a      	str	r2, [r3, #16]
 8007c8a:	4b12      	ldr	r3, [pc, #72]	; (8007cd4 <LCD_Fill+0x110>)
 8007c8c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007c90:	615a      	str	r2, [r3, #20]
 8007c92:	4a11      	ldr	r2, [pc, #68]	; (8007cd8 <LCD_Fill+0x114>)
 8007c94:	8c3b      	ldrh	r3, [r7, #32]
 8007c96:	60d3      	str	r3, [r2, #12]
 8007c98:	4b0e      	ldr	r3, [pc, #56]	; (8007cd4 <LCD_Fill+0x110>)
 8007c9a:	2280      	movs	r2, #128	; 0x80
 8007c9c:	615a      	str	r2, [r3, #20]
 8007c9e:	4b0d      	ldr	r3, [pc, #52]	; (8007cd4 <LCD_Fill+0x110>)
 8007ca0:	2280      	movs	r2, #128	; 0x80
 8007ca2:	611a      	str	r2, [r3, #16]
 8007ca4:	4b0b      	ldr	r3, [pc, #44]	; (8007cd4 <LCD_Fill+0x110>)
 8007ca6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007caa:	611a      	str	r2, [r3, #16]
			for (j = 0; j < xlen; j++)
 8007cac:	89bb      	ldrh	r3, [r7, #12]
 8007cae:	3301      	adds	r3, #1
 8007cb0:	81bb      	strh	r3, [r7, #12]
 8007cb2:	89ba      	ldrh	r2, [r7, #12]
 8007cb4:	897b      	ldrh	r3, [r7, #10]
 8007cb6:	429a      	cmp	r2, r3
 8007cb8:	d3e3      	bcc.n	8007c82 <LCD_Fill+0xbe>
		for (i = sy; i <= ey; i++) {
 8007cba:	89fb      	ldrh	r3, [r7, #14]
 8007cbc:	3301      	adds	r3, #1
 8007cbe:	81fb      	strh	r3, [r7, #14]
 8007cc0:	89fa      	ldrh	r2, [r7, #14]
 8007cc2:	883b      	ldrh	r3, [r7, #0]
 8007cc4:	429a      	cmp	r2, r3
 8007cc6:	d9d1      	bls.n	8007c6c <LCD_Fill+0xa8>
		}
	}
}
 8007cc8:	bf00      	nop
 8007cca:	3714      	adds	r7, #20
 8007ccc:	46bd      	mov	sp, r7
 8007cce:	bd90      	pop	{r4, r7, pc}
 8007cd0:	200000a8 	.word	0x200000a8
 8007cd4:	40011000 	.word	0x40011000
 8007cd8:	40010c00 	.word	0x40010c00

08007cdc <LCD_DrawLine>:
	}
}
// Draw a line
//x1,y1: coordinate of starting point
//x2,y2: coordinate of terminal point
void LCD_DrawLine(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8007cdc:	b590      	push	{r4, r7, lr}
 8007cde:	b08d      	sub	sp, #52	; 0x34
 8007ce0:	af00      	add	r7, sp, #0
 8007ce2:	4604      	mov	r4, r0
 8007ce4:	4608      	mov	r0, r1
 8007ce6:	4611      	mov	r1, r2
 8007ce8:	461a      	mov	r2, r3
 8007cea:	4623      	mov	r3, r4
 8007cec:	80fb      	strh	r3, [r7, #6]
 8007cee:	4603      	mov	r3, r0
 8007cf0:	80bb      	strh	r3, [r7, #4]
 8007cf2:	460b      	mov	r3, r1
 8007cf4:	807b      	strh	r3, [r7, #2]
 8007cf6:	4613      	mov	r3, r2
 8007cf8:	803b      	strh	r3, [r7, #0]
	uint16_t t;
	int xerr = 0, yerr = 0, delta_x, delta_y, distance;
 8007cfa:	2300      	movs	r3, #0
 8007cfc:	62bb      	str	r3, [r7, #40]	; 0x28
 8007cfe:	2300      	movs	r3, #0
 8007d00:	627b      	str	r3, [r7, #36]	; 0x24
	int incx, incy, uRow, uCol;
	delta_x = x2 - x1; //计算坐标增量
 8007d02:	887a      	ldrh	r2, [r7, #2]
 8007d04:	88fb      	ldrh	r3, [r7, #6]
 8007d06:	1ad3      	subs	r3, r2, r3
 8007d08:	623b      	str	r3, [r7, #32]
	delta_y = y2 - y1;
 8007d0a:	883a      	ldrh	r2, [r7, #0]
 8007d0c:	88bb      	ldrh	r3, [r7, #4]
 8007d0e:	1ad3      	subs	r3, r2, r3
 8007d10:	61fb      	str	r3, [r7, #28]
	uRow = x1;
 8007d12:	88fb      	ldrh	r3, [r7, #6]
 8007d14:	60fb      	str	r3, [r7, #12]
	uCol = y1;
 8007d16:	88bb      	ldrh	r3, [r7, #4]
 8007d18:	60bb      	str	r3, [r7, #8]
	if (delta_x > 0)
 8007d1a:	6a3b      	ldr	r3, [r7, #32]
 8007d1c:	2b00      	cmp	r3, #0
 8007d1e:	dd02      	ble.n	8007d26 <LCD_DrawLine+0x4a>
		incx = 1; //设置单步方向
 8007d20:	2301      	movs	r3, #1
 8007d22:	617b      	str	r3, [r7, #20]
 8007d24:	e00b      	b.n	8007d3e <LCD_DrawLine+0x62>
	else if (delta_x == 0)
 8007d26:	6a3b      	ldr	r3, [r7, #32]
 8007d28:	2b00      	cmp	r3, #0
 8007d2a:	d102      	bne.n	8007d32 <LCD_DrawLine+0x56>
		incx = 0; //垂直线
 8007d2c:	2300      	movs	r3, #0
 8007d2e:	617b      	str	r3, [r7, #20]
 8007d30:	e005      	b.n	8007d3e <LCD_DrawLine+0x62>
	else {
		incx = -1;
 8007d32:	f04f 33ff 	mov.w	r3, #4294967295
 8007d36:	617b      	str	r3, [r7, #20]
		delta_x = -delta_x;
 8007d38:	6a3b      	ldr	r3, [r7, #32]
 8007d3a:	425b      	negs	r3, r3
 8007d3c:	623b      	str	r3, [r7, #32]
	}
	if (delta_y > 0)
 8007d3e:	69fb      	ldr	r3, [r7, #28]
 8007d40:	2b00      	cmp	r3, #0
 8007d42:	dd02      	ble.n	8007d4a <LCD_DrawLine+0x6e>
		incy = 1;
 8007d44:	2301      	movs	r3, #1
 8007d46:	613b      	str	r3, [r7, #16]
 8007d48:	e00b      	b.n	8007d62 <LCD_DrawLine+0x86>
	else if (delta_y == 0)
 8007d4a:	69fb      	ldr	r3, [r7, #28]
 8007d4c:	2b00      	cmp	r3, #0
 8007d4e:	d102      	bne.n	8007d56 <LCD_DrawLine+0x7a>
		incy = 0; //水平线
 8007d50:	2300      	movs	r3, #0
 8007d52:	613b      	str	r3, [r7, #16]
 8007d54:	e005      	b.n	8007d62 <LCD_DrawLine+0x86>
	else {
		incy = -1;
 8007d56:	f04f 33ff 	mov.w	r3, #4294967295
 8007d5a:	613b      	str	r3, [r7, #16]
		delta_y = -delta_y;
 8007d5c:	69fb      	ldr	r3, [r7, #28]
 8007d5e:	425b      	negs	r3, r3
 8007d60:	61fb      	str	r3, [r7, #28]
	}
	if (delta_x > delta_y)
 8007d62:	6a3a      	ldr	r2, [r7, #32]
 8007d64:	69fb      	ldr	r3, [r7, #28]
 8007d66:	429a      	cmp	r2, r3
 8007d68:	dd02      	ble.n	8007d70 <LCD_DrawLine+0x94>
		distance = delta_x; //选取基本增量坐标轴
 8007d6a:	6a3b      	ldr	r3, [r7, #32]
 8007d6c:	61bb      	str	r3, [r7, #24]
 8007d6e:	e001      	b.n	8007d74 <LCD_DrawLine+0x98>
	else
		distance = delta_y;
 8007d70:	69fb      	ldr	r3, [r7, #28]
 8007d72:	61bb      	str	r3, [r7, #24]
	for (t = 0; t <= distance + 1; t++) //画线输出
 8007d74:	2300      	movs	r3, #0
 8007d76:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8007d78:	e02a      	b.n	8007dd0 <LCD_DrawLine+0xf4>
			{
		LCD_DrawPoint(uRow, uCol); //画点
 8007d7a:	68fb      	ldr	r3, [r7, #12]
 8007d7c:	b29b      	uxth	r3, r3
 8007d7e:	68ba      	ldr	r2, [r7, #8]
 8007d80:	b292      	uxth	r2, r2
 8007d82:	4611      	mov	r1, r2
 8007d84:	4618      	mov	r0, r3
 8007d86:	f7fa fff5 	bl	8002d74 <LCD_DrawPoint>
		xerr += delta_x;
 8007d8a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007d8c:	6a3b      	ldr	r3, [r7, #32]
 8007d8e:	4413      	add	r3, r2
 8007d90:	62bb      	str	r3, [r7, #40]	; 0x28
		yerr += delta_y;
 8007d92:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007d94:	69fb      	ldr	r3, [r7, #28]
 8007d96:	4413      	add	r3, r2
 8007d98:	627b      	str	r3, [r7, #36]	; 0x24
		if (xerr > distance) {
 8007d9a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007d9c:	69bb      	ldr	r3, [r7, #24]
 8007d9e:	429a      	cmp	r2, r3
 8007da0:	dd07      	ble.n	8007db2 <LCD_DrawLine+0xd6>
			xerr -= distance;
 8007da2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007da4:	69bb      	ldr	r3, [r7, #24]
 8007da6:	1ad3      	subs	r3, r2, r3
 8007da8:	62bb      	str	r3, [r7, #40]	; 0x28
			uRow += incx;
 8007daa:	68fa      	ldr	r2, [r7, #12]
 8007dac:	697b      	ldr	r3, [r7, #20]
 8007dae:	4413      	add	r3, r2
 8007db0:	60fb      	str	r3, [r7, #12]
		}
		if (yerr > distance) {
 8007db2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007db4:	69bb      	ldr	r3, [r7, #24]
 8007db6:	429a      	cmp	r2, r3
 8007db8:	dd07      	ble.n	8007dca <LCD_DrawLine+0xee>
			yerr -= distance;
 8007dba:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007dbc:	69bb      	ldr	r3, [r7, #24]
 8007dbe:	1ad3      	subs	r3, r2, r3
 8007dc0:	627b      	str	r3, [r7, #36]	; 0x24
			uCol += incy;
 8007dc2:	68ba      	ldr	r2, [r7, #8]
 8007dc4:	693b      	ldr	r3, [r7, #16]
 8007dc6:	4413      	add	r3, r2
 8007dc8:	60bb      	str	r3, [r7, #8]
	for (t = 0; t <= distance + 1; t++) //画线输出
 8007dca:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8007dcc:	3301      	adds	r3, #1
 8007dce:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8007dd0:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 8007dd2:	69bb      	ldr	r3, [r7, #24]
 8007dd4:	3301      	adds	r3, #1
 8007dd6:	429a      	cmp	r2, r3
 8007dd8:	ddcf      	ble.n	8007d7a <LCD_DrawLine+0x9e>
		}
	}
}
 8007dda:	bf00      	nop
 8007ddc:	3734      	adds	r7, #52	; 0x34
 8007dde:	46bd      	mov	sp, r7
 8007de0:	bd90      	pop	{r4, r7, pc}

08007de2 <LCD_DrawRectangle>:
//Draw a rectangle
//(x1,y1),(x2,y2): coordinates of the upper left point and bottom right point of a rectangle
void LCD_DrawRectangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8007de2:	b590      	push	{r4, r7, lr}
 8007de4:	b083      	sub	sp, #12
 8007de6:	af00      	add	r7, sp, #0
 8007de8:	4604      	mov	r4, r0
 8007dea:	4608      	mov	r0, r1
 8007dec:	4611      	mov	r1, r2
 8007dee:	461a      	mov	r2, r3
 8007df0:	4623      	mov	r3, r4
 8007df2:	80fb      	strh	r3, [r7, #6]
 8007df4:	4603      	mov	r3, r0
 8007df6:	80bb      	strh	r3, [r7, #4]
 8007df8:	460b      	mov	r3, r1
 8007dfa:	807b      	strh	r3, [r7, #2]
 8007dfc:	4613      	mov	r3, r2
 8007dfe:	803b      	strh	r3, [r7, #0]
	LCD_DrawLine(x1, y1, x2, y1);
 8007e00:	88bb      	ldrh	r3, [r7, #4]
 8007e02:	887a      	ldrh	r2, [r7, #2]
 8007e04:	88b9      	ldrh	r1, [r7, #4]
 8007e06:	88f8      	ldrh	r0, [r7, #6]
 8007e08:	f7ff ff68 	bl	8007cdc <LCD_DrawLine>
	LCD_DrawLine(x1, y1, x1, y2);
 8007e0c:	883b      	ldrh	r3, [r7, #0]
 8007e0e:	88fa      	ldrh	r2, [r7, #6]
 8007e10:	88b9      	ldrh	r1, [r7, #4]
 8007e12:	88f8      	ldrh	r0, [r7, #6]
 8007e14:	f7ff ff62 	bl	8007cdc <LCD_DrawLine>
	LCD_DrawLine(x1, y2, x2, y2);
 8007e18:	883b      	ldrh	r3, [r7, #0]
 8007e1a:	887a      	ldrh	r2, [r7, #2]
 8007e1c:	8839      	ldrh	r1, [r7, #0]
 8007e1e:	88f8      	ldrh	r0, [r7, #6]
 8007e20:	f7ff ff5c 	bl	8007cdc <LCD_DrawLine>
	LCD_DrawLine(x2, y1, x2, y2);
 8007e24:	883b      	ldrh	r3, [r7, #0]
 8007e26:	887a      	ldrh	r2, [r7, #2]
 8007e28:	88b9      	ldrh	r1, [r7, #4]
 8007e2a:	8878      	ldrh	r0, [r7, #2]
 8007e2c:	f7ff ff56 	bl	8007cdc <LCD_DrawLine>
}
 8007e30:	bf00      	nop
 8007e32:	370c      	adds	r7, #12
 8007e34:	46bd      	mov	sp, r7
 8007e36:	bd90      	pop	{r4, r7, pc}

08007e38 <LCD_ShowChar>:
// num: char to be displayed
// size: font size 12/16/24
// mode: display characters on the displayed content and do not wipe away the displayed content(1)
//       display characters on the displayed content and wipe away the displayed content(0)
void LCD_ShowChar(uint16_t x, uint16_t y, uint8_t num, uint8_t size,
		uint8_t mode) {
 8007e38:	b590      	push	{r4, r7, lr}
 8007e3a:	b085      	sub	sp, #20
 8007e3c:	af00      	add	r7, sp, #0
 8007e3e:	4604      	mov	r4, r0
 8007e40:	4608      	mov	r0, r1
 8007e42:	4611      	mov	r1, r2
 8007e44:	461a      	mov	r2, r3
 8007e46:	4623      	mov	r3, r4
 8007e48:	80fb      	strh	r3, [r7, #6]
 8007e4a:	4603      	mov	r3, r0
 8007e4c:	80bb      	strh	r3, [r7, #4]
 8007e4e:	460b      	mov	r3, r1
 8007e50:	70fb      	strb	r3, [r7, #3]
 8007e52:	4613      	mov	r3, r2
 8007e54:	70bb      	strb	r3, [r7, #2]
	uint8_t temp, t1, t;
	uint16_t y0 = y;
 8007e56:	88bb      	ldrh	r3, [r7, #4]
 8007e58:	817b      	strh	r3, [r7, #10]
	uint8_t csize = (size / 8 + ((size % 8) ? 1 : 0)) * (size / 2);	//得到字体一个字符对应点阵集所占的字节数
 8007e5a:	78bb      	ldrb	r3, [r7, #2]
 8007e5c:	08db      	lsrs	r3, r3, #3
 8007e5e:	b2db      	uxtb	r3, r3
 8007e60:	461a      	mov	r2, r3
 8007e62:	78bb      	ldrb	r3, [r7, #2]
 8007e64:	f003 0307 	and.w	r3, r3, #7
 8007e68:	b2db      	uxtb	r3, r3
 8007e6a:	2b00      	cmp	r3, #0
 8007e6c:	bf14      	ite	ne
 8007e6e:	2301      	movne	r3, #1
 8007e70:	2300      	moveq	r3, #0
 8007e72:	b2db      	uxtb	r3, r3
 8007e74:	4413      	add	r3, r2
 8007e76:	b2db      	uxtb	r3, r3
 8007e78:	78ba      	ldrb	r2, [r7, #2]
 8007e7a:	0852      	lsrs	r2, r2, #1
 8007e7c:	b2d2      	uxtb	r2, r2
 8007e7e:	fb02 f303 	mul.w	r3, r2, r3
 8007e82:	727b      	strb	r3, [r7, #9]
	num = num - ' ';		//得到偏移后的值（ASCII字库是从空格开始取模，所以-' '就是对应字符的字库）
 8007e84:	78fb      	ldrb	r3, [r7, #3]
 8007e86:	3b20      	subs	r3, #32
 8007e88:	70fb      	strb	r3, [r7, #3]
	for (t = 0; t < csize; t++) {
 8007e8a:	2300      	movs	r3, #0
 8007e8c:	737b      	strb	r3, [r7, #13]
 8007e8e:	e069      	b.n	8007f64 <LCD_ShowChar+0x12c>
		if (size == 12)
 8007e90:	78bb      	ldrb	r3, [r7, #2]
 8007e92:	2b0c      	cmp	r3, #12
 8007e94:	d10b      	bne.n	8007eae <LCD_ShowChar+0x76>
			temp = asc2_1206[num][t]; 	 	//调用1206字体
 8007e96:	78fa      	ldrb	r2, [r7, #3]
 8007e98:	7b79      	ldrb	r1, [r7, #13]
 8007e9a:	4838      	ldr	r0, [pc, #224]	; (8007f7c <LCD_ShowChar+0x144>)
 8007e9c:	4613      	mov	r3, r2
 8007e9e:	005b      	lsls	r3, r3, #1
 8007ea0:	4413      	add	r3, r2
 8007ea2:	009b      	lsls	r3, r3, #2
 8007ea4:	4403      	add	r3, r0
 8007ea6:	440b      	add	r3, r1
 8007ea8:	781b      	ldrb	r3, [r3, #0]
 8007eaa:	73fb      	strb	r3, [r7, #15]
 8007eac:	e019      	b.n	8007ee2 <LCD_ShowChar+0xaa>
		else if (size == 16)
 8007eae:	78bb      	ldrb	r3, [r7, #2]
 8007eb0:	2b10      	cmp	r3, #16
 8007eb2:	d108      	bne.n	8007ec6 <LCD_ShowChar+0x8e>
			temp = asc2_1608[num][t];	//调用1608字体
 8007eb4:	78fa      	ldrb	r2, [r7, #3]
 8007eb6:	7b7b      	ldrb	r3, [r7, #13]
 8007eb8:	4931      	ldr	r1, [pc, #196]	; (8007f80 <LCD_ShowChar+0x148>)
 8007eba:	0112      	lsls	r2, r2, #4
 8007ebc:	440a      	add	r2, r1
 8007ebe:	4413      	add	r3, r2
 8007ec0:	781b      	ldrb	r3, [r3, #0]
 8007ec2:	73fb      	strb	r3, [r7, #15]
 8007ec4:	e00d      	b.n	8007ee2 <LCD_ShowChar+0xaa>
		else if (size == 24)
 8007ec6:	78bb      	ldrb	r3, [r7, #2]
 8007ec8:	2b18      	cmp	r3, #24
 8007eca:	d150      	bne.n	8007f6e <LCD_ShowChar+0x136>
			temp = asc2_2412[num][t];	//调用2412字体
 8007ecc:	78fa      	ldrb	r2, [r7, #3]
 8007ece:	7b79      	ldrb	r1, [r7, #13]
 8007ed0:	482c      	ldr	r0, [pc, #176]	; (8007f84 <LCD_ShowChar+0x14c>)
 8007ed2:	4613      	mov	r3, r2
 8007ed4:	00db      	lsls	r3, r3, #3
 8007ed6:	4413      	add	r3, r2
 8007ed8:	009b      	lsls	r3, r3, #2
 8007eda:	4403      	add	r3, r0
 8007edc:	440b      	add	r3, r1
 8007ede:	781b      	ldrb	r3, [r3, #0]
 8007ee0:	73fb      	strb	r3, [r7, #15]
		else
			return;								//没有的字库
		for (t1 = 0; t1 < 8; t1++) {
 8007ee2:	2300      	movs	r3, #0
 8007ee4:	73bb      	strb	r3, [r7, #14]
 8007ee6:	e035      	b.n	8007f54 <LCD_ShowChar+0x11c>
			if (temp & 0x80)
 8007ee8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	da07      	bge.n	8007f00 <LCD_ShowChar+0xc8>
				LCD_Fast_DrawPoint(x, y, POINT_COLOR);
 8007ef0:	4b25      	ldr	r3, [pc, #148]	; (8007f88 <LCD_ShowChar+0x150>)
 8007ef2:	881a      	ldrh	r2, [r3, #0]
 8007ef4:	88b9      	ldrh	r1, [r7, #4]
 8007ef6:	88fb      	ldrh	r3, [r7, #6]
 8007ef8:	4618      	mov	r0, r3
 8007efa:	f7fa ff6b 	bl	8002dd4 <LCD_Fast_DrawPoint>
 8007efe:	e00a      	b.n	8007f16 <LCD_ShowChar+0xde>
			else if (mode == 0)
 8007f00:	f897 3020 	ldrb.w	r3, [r7, #32]
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d106      	bne.n	8007f16 <LCD_ShowChar+0xde>
				LCD_Fast_DrawPoint(x, y, BACK_COLOR);
 8007f08:	4b20      	ldr	r3, [pc, #128]	; (8007f8c <LCD_ShowChar+0x154>)
 8007f0a:	881a      	ldrh	r2, [r3, #0]
 8007f0c:	88b9      	ldrh	r1, [r7, #4]
 8007f0e:	88fb      	ldrh	r3, [r7, #6]
 8007f10:	4618      	mov	r0, r3
 8007f12:	f7fa ff5f 	bl	8002dd4 <LCD_Fast_DrawPoint>
			temp <<= 1;
 8007f16:	7bfb      	ldrb	r3, [r7, #15]
 8007f18:	005b      	lsls	r3, r3, #1
 8007f1a:	73fb      	strb	r3, [r7, #15]
			y++;
 8007f1c:	88bb      	ldrh	r3, [r7, #4]
 8007f1e:	3301      	adds	r3, #1
 8007f20:	80bb      	strh	r3, [r7, #4]
			if (y >= lcddev.height)
 8007f22:	4b1b      	ldr	r3, [pc, #108]	; (8007f90 <LCD_ShowChar+0x158>)
 8007f24:	885b      	ldrh	r3, [r3, #2]
 8007f26:	88ba      	ldrh	r2, [r7, #4]
 8007f28:	429a      	cmp	r2, r3
 8007f2a:	d222      	bcs.n	8007f72 <LCD_ShowChar+0x13a>
				return;		//超区域了
			if ((y - y0) == size) {
 8007f2c:	88ba      	ldrh	r2, [r7, #4]
 8007f2e:	897b      	ldrh	r3, [r7, #10]
 8007f30:	1ad2      	subs	r2, r2, r3
 8007f32:	78bb      	ldrb	r3, [r7, #2]
 8007f34:	429a      	cmp	r2, r3
 8007f36:	d10a      	bne.n	8007f4e <LCD_ShowChar+0x116>
				y = y0;
 8007f38:	897b      	ldrh	r3, [r7, #10]
 8007f3a:	80bb      	strh	r3, [r7, #4]
				x++;
 8007f3c:	88fb      	ldrh	r3, [r7, #6]
 8007f3e:	3301      	adds	r3, #1
 8007f40:	80fb      	strh	r3, [r7, #6]
				if (x >= lcddev.width)
 8007f42:	4b13      	ldr	r3, [pc, #76]	; (8007f90 <LCD_ShowChar+0x158>)
 8007f44:	881b      	ldrh	r3, [r3, #0]
 8007f46:	88fa      	ldrh	r2, [r7, #6]
 8007f48:	429a      	cmp	r2, r3
 8007f4a:	d307      	bcc.n	8007f5c <LCD_ShowChar+0x124>
					return;	//超区域了
 8007f4c:	e012      	b.n	8007f74 <LCD_ShowChar+0x13c>
		for (t1 = 0; t1 < 8; t1++) {
 8007f4e:	7bbb      	ldrb	r3, [r7, #14]
 8007f50:	3301      	adds	r3, #1
 8007f52:	73bb      	strb	r3, [r7, #14]
 8007f54:	7bbb      	ldrb	r3, [r7, #14]
 8007f56:	2b07      	cmp	r3, #7
 8007f58:	d9c6      	bls.n	8007ee8 <LCD_ShowChar+0xb0>
 8007f5a:	e000      	b.n	8007f5e <LCD_ShowChar+0x126>
				break;
 8007f5c:	bf00      	nop
	for (t = 0; t < csize; t++) {
 8007f5e:	7b7b      	ldrb	r3, [r7, #13]
 8007f60:	3301      	adds	r3, #1
 8007f62:	737b      	strb	r3, [r7, #13]
 8007f64:	7b7a      	ldrb	r2, [r7, #13]
 8007f66:	7a7b      	ldrb	r3, [r7, #9]
 8007f68:	429a      	cmp	r2, r3
 8007f6a:	d391      	bcc.n	8007e90 <LCD_ShowChar+0x58>
 8007f6c:	e002      	b.n	8007f74 <LCD_ShowChar+0x13c>
			return;								//没有的字库
 8007f6e:	bf00      	nop
 8007f70:	e000      	b.n	8007f74 <LCD_ShowChar+0x13c>
				return;		//超区域了
 8007f72:	bf00      	nop
			}
		}
	}
}
 8007f74:	3714      	adds	r7, #20
 8007f76:	46bd      	mov	sp, r7
 8007f78:	bd90      	pop	{r4, r7, pc}
 8007f7a:	bf00      	nop
 8007f7c:	0800959c 	.word	0x0800959c
 8007f80:	08009a10 	.word	0x08009a10
 8007f84:	0800a000 	.word	0x0800a000
 8007f88:	20000094 	.word	0x20000094
 8007f8c:	20000006 	.word	0x20000006
 8007f90:	200000a8 	.word	0x200000a8

08007f94 <LCD_Pow>:
//m^n函数
//返回值:m^n次方.
uint32_t LCD_Pow(uint8_t m, uint8_t n) {
 8007f94:	b480      	push	{r7}
 8007f96:	b085      	sub	sp, #20
 8007f98:	af00      	add	r7, sp, #0
 8007f9a:	4603      	mov	r3, r0
 8007f9c:	460a      	mov	r2, r1
 8007f9e:	71fb      	strb	r3, [r7, #7]
 8007fa0:	4613      	mov	r3, r2
 8007fa2:	71bb      	strb	r3, [r7, #6]
	uint32_t result = 1;
 8007fa4:	2301      	movs	r3, #1
 8007fa6:	60fb      	str	r3, [r7, #12]
	while (n--)
 8007fa8:	e004      	b.n	8007fb4 <LCD_Pow+0x20>
		result *= m;
 8007faa:	79fa      	ldrb	r2, [r7, #7]
 8007fac:	68fb      	ldr	r3, [r7, #12]
 8007fae:	fb02 f303 	mul.w	r3, r2, r3
 8007fb2:	60fb      	str	r3, [r7, #12]
	while (n--)
 8007fb4:	79bb      	ldrb	r3, [r7, #6]
 8007fb6:	1e5a      	subs	r2, r3, #1
 8007fb8:	71ba      	strb	r2, [r7, #6]
 8007fba:	2b00      	cmp	r3, #0
 8007fbc:	d1f5      	bne.n	8007faa <LCD_Pow+0x16>
	return result;
 8007fbe:	68fb      	ldr	r3, [r7, #12]
}
 8007fc0:	4618      	mov	r0, r3
 8007fc2:	3714      	adds	r7, #20
 8007fc4:	46bd      	mov	sp, r7
 8007fc6:	bc80      	pop	{r7}
 8007fc8:	4770      	bx	lr
	...

08007fcc <LCD_ShowNum>:
// Display number without the leading zeros
// x,y: starting coordinate
// len: number of digits
// size: font size 12/16/24
void LCD_ShowNum(uint16_t x, uint16_t y, uint32_t num, uint8_t len,
		uint8_t size) {
 8007fcc:	b590      	push	{r4, r7, lr}
 8007fce:	b089      	sub	sp, #36	; 0x24
 8007fd0:	af02      	add	r7, sp, #8
 8007fd2:	60ba      	str	r2, [r7, #8]
 8007fd4:	461a      	mov	r2, r3
 8007fd6:	4603      	mov	r3, r0
 8007fd8:	81fb      	strh	r3, [r7, #14]
 8007fda:	460b      	mov	r3, r1
 8007fdc:	81bb      	strh	r3, [r7, #12]
 8007fde:	4613      	mov	r3, r2
 8007fe0:	71fb      	strb	r3, [r7, #7]
	uint8_t t, temp;
	uint8_t enshow = 0;
 8007fe2:	2300      	movs	r3, #0
 8007fe4:	75bb      	strb	r3, [r7, #22]
	for (t = 0; t < len; t++) {
 8007fe6:	2300      	movs	r3, #0
 8007fe8:	75fb      	strb	r3, [r7, #23]
 8007fea:	e057      	b.n	800809c <LCD_ShowNum+0xd0>
		temp = (num / LCD_Pow(10, len - t - 1)) % 10;
 8007fec:	79fa      	ldrb	r2, [r7, #7]
 8007fee:	7dfb      	ldrb	r3, [r7, #23]
 8007ff0:	1ad3      	subs	r3, r2, r3
 8007ff2:	b2db      	uxtb	r3, r3
 8007ff4:	3b01      	subs	r3, #1
 8007ff6:	b2db      	uxtb	r3, r3
 8007ff8:	4619      	mov	r1, r3
 8007ffa:	200a      	movs	r0, #10
 8007ffc:	f7ff ffca 	bl	8007f94 <LCD_Pow>
 8008000:	4602      	mov	r2, r0
 8008002:	68bb      	ldr	r3, [r7, #8]
 8008004:	fbb3 f1f2 	udiv	r1, r3, r2
 8008008:	4b28      	ldr	r3, [pc, #160]	; (80080ac <LCD_ShowNum+0xe0>)
 800800a:	fba3 2301 	umull	r2, r3, r3, r1
 800800e:	08da      	lsrs	r2, r3, #3
 8008010:	4613      	mov	r3, r2
 8008012:	009b      	lsls	r3, r3, #2
 8008014:	4413      	add	r3, r2
 8008016:	005b      	lsls	r3, r3, #1
 8008018:	1aca      	subs	r2, r1, r3
 800801a:	4613      	mov	r3, r2
 800801c:	757b      	strb	r3, [r7, #21]
		if (enshow == 0 && t < (len - 1)) {
 800801e:	7dbb      	ldrb	r3, [r7, #22]
 8008020:	2b00      	cmp	r3, #0
 8008022:	d120      	bne.n	8008066 <LCD_ShowNum+0x9a>
 8008024:	7dfa      	ldrb	r2, [r7, #23]
 8008026:	79fb      	ldrb	r3, [r7, #7]
 8008028:	3b01      	subs	r3, #1
 800802a:	429a      	cmp	r2, r3
 800802c:	da1b      	bge.n	8008066 <LCD_ShowNum+0x9a>
			if (temp == 0) {
 800802e:	7d7b      	ldrb	r3, [r7, #21]
 8008030:	2b00      	cmp	r3, #0
 8008032:	d116      	bne.n	8008062 <LCD_ShowNum+0x96>
				LCD_ShowChar(x + (size / 2) * t, y, ' ', size, 0);
 8008034:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008038:	085b      	lsrs	r3, r3, #1
 800803a:	b2db      	uxtb	r3, r3
 800803c:	b29b      	uxth	r3, r3
 800803e:	7dfa      	ldrb	r2, [r7, #23]
 8008040:	b292      	uxth	r2, r2
 8008042:	fb02 f303 	mul.w	r3, r2, r3
 8008046:	b29a      	uxth	r2, r3
 8008048:	89fb      	ldrh	r3, [r7, #14]
 800804a:	4413      	add	r3, r2
 800804c:	b298      	uxth	r0, r3
 800804e:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 8008052:	89b9      	ldrh	r1, [r7, #12]
 8008054:	2300      	movs	r3, #0
 8008056:	9300      	str	r3, [sp, #0]
 8008058:	4613      	mov	r3, r2
 800805a:	2220      	movs	r2, #32
 800805c:	f7ff feec 	bl	8007e38 <LCD_ShowChar>
				continue;
 8008060:	e019      	b.n	8008096 <LCD_ShowNum+0xca>
			} else
				enshow = 1;
 8008062:	2301      	movs	r3, #1
 8008064:	75bb      	strb	r3, [r7, #22]

		}
		LCD_ShowChar(x + (size / 2) * t, y, temp + '0', size, 0);
 8008066:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800806a:	085b      	lsrs	r3, r3, #1
 800806c:	b2db      	uxtb	r3, r3
 800806e:	b29b      	uxth	r3, r3
 8008070:	7dfa      	ldrb	r2, [r7, #23]
 8008072:	b292      	uxth	r2, r2
 8008074:	fb02 f303 	mul.w	r3, r2, r3
 8008078:	b29a      	uxth	r2, r3
 800807a:	89fb      	ldrh	r3, [r7, #14]
 800807c:	4413      	add	r3, r2
 800807e:	b298      	uxth	r0, r3
 8008080:	7d7b      	ldrb	r3, [r7, #21]
 8008082:	3330      	adds	r3, #48	; 0x30
 8008084:	b2da      	uxtb	r2, r3
 8008086:	f897 4028 	ldrb.w	r4, [r7, #40]	; 0x28
 800808a:	89b9      	ldrh	r1, [r7, #12]
 800808c:	2300      	movs	r3, #0
 800808e:	9300      	str	r3, [sp, #0]
 8008090:	4623      	mov	r3, r4
 8008092:	f7ff fed1 	bl	8007e38 <LCD_ShowChar>
	for (t = 0; t < len; t++) {
 8008096:	7dfb      	ldrb	r3, [r7, #23]
 8008098:	3301      	adds	r3, #1
 800809a:	75fb      	strb	r3, [r7, #23]
 800809c:	7dfa      	ldrb	r2, [r7, #23]
 800809e:	79fb      	ldrb	r3, [r7, #7]
 80080a0:	429a      	cmp	r2, r3
 80080a2:	d3a3      	bcc.n	8007fec <LCD_ShowNum+0x20>
	}
}
 80080a4:	bf00      	nop
 80080a6:	371c      	adds	r7, #28
 80080a8:	46bd      	mov	sp, r7
 80080aa:	bd90      	pop	{r4, r7, pc}
 80080ac:	cccccccd 	.word	0xcccccccd

080080b0 <LCD_ShowString>:
// x,y: starting coordinate
// width, height: display area size
// size: font size // x,y: starting coordinate
// *p: string
void LCD_ShowString(uint16_t x, uint16_t y, uint16_t width, uint16_t height,
		uint8_t size, uint8_t *p) {
 80080b0:	b590      	push	{r4, r7, lr}
 80080b2:	b087      	sub	sp, #28
 80080b4:	af02      	add	r7, sp, #8
 80080b6:	4604      	mov	r4, r0
 80080b8:	4608      	mov	r0, r1
 80080ba:	4611      	mov	r1, r2
 80080bc:	461a      	mov	r2, r3
 80080be:	4623      	mov	r3, r4
 80080c0:	80fb      	strh	r3, [r7, #6]
 80080c2:	4603      	mov	r3, r0
 80080c4:	80bb      	strh	r3, [r7, #4]
 80080c6:	460b      	mov	r3, r1
 80080c8:	807b      	strh	r3, [r7, #2]
 80080ca:	4613      	mov	r3, r2
 80080cc:	803b      	strh	r3, [r7, #0]
	uint8_t x0 = x;
 80080ce:	88fb      	ldrh	r3, [r7, #6]
 80080d0:	73fb      	strb	r3, [r7, #15]
	width += x;
 80080d2:	887a      	ldrh	r2, [r7, #2]
 80080d4:	88fb      	ldrh	r3, [r7, #6]
 80080d6:	4413      	add	r3, r2
 80080d8:	807b      	strh	r3, [r7, #2]
	height += y;
 80080da:	883a      	ldrh	r2, [r7, #0]
 80080dc:	88bb      	ldrh	r3, [r7, #4]
 80080de:	4413      	add	r3, r2
 80080e0:	803b      	strh	r3, [r7, #0]
	while ((*p <= '~') && (*p >= ' '))	//判断是不是非法字符!
 80080e2:	e025      	b.n	8008130 <LCD_ShowString+0x80>
	{
		if (x >= width) {
 80080e4:	88fa      	ldrh	r2, [r7, #6]
 80080e6:	887b      	ldrh	r3, [r7, #2]
 80080e8:	429a      	cmp	r2, r3
 80080ea:	d307      	bcc.n	80080fc <LCD_ShowString+0x4c>
			x = x0;
 80080ec:	7bfb      	ldrb	r3, [r7, #15]
 80080ee:	80fb      	strh	r3, [r7, #6]
			y += size;
 80080f0:	f897 3020 	ldrb.w	r3, [r7, #32]
 80080f4:	b29a      	uxth	r2, r3
 80080f6:	88bb      	ldrh	r3, [r7, #4]
 80080f8:	4413      	add	r3, r2
 80080fa:	80bb      	strh	r3, [r7, #4]
		}
		if (y >= height)
 80080fc:	88ba      	ldrh	r2, [r7, #4]
 80080fe:	883b      	ldrh	r3, [r7, #0]
 8008100:	429a      	cmp	r2, r3
 8008102:	d21e      	bcs.n	8008142 <LCD_ShowString+0x92>
			break;	//退出
		LCD_ShowChar(x, y, *p, size, 0);
 8008104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008106:	781a      	ldrb	r2, [r3, #0]
 8008108:	f897 4020 	ldrb.w	r4, [r7, #32]
 800810c:	88b9      	ldrh	r1, [r7, #4]
 800810e:	88f8      	ldrh	r0, [r7, #6]
 8008110:	2300      	movs	r3, #0
 8008112:	9300      	str	r3, [sp, #0]
 8008114:	4623      	mov	r3, r4
 8008116:	f7ff fe8f 	bl	8007e38 <LCD_ShowChar>
		x += size / 2;
 800811a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800811e:	085b      	lsrs	r3, r3, #1
 8008120:	b2db      	uxtb	r3, r3
 8008122:	b29a      	uxth	r2, r3
 8008124:	88fb      	ldrh	r3, [r7, #6]
 8008126:	4413      	add	r3, r2
 8008128:	80fb      	strh	r3, [r7, #6]
		p++;
 800812a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800812c:	3301      	adds	r3, #1
 800812e:	627b      	str	r3, [r7, #36]	; 0x24
	while ((*p <= '~') && (*p >= ' '))	//判断是不是非法字符!
 8008130:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008132:	781b      	ldrb	r3, [r3, #0]
 8008134:	2b7e      	cmp	r3, #126	; 0x7e
 8008136:	d805      	bhi.n	8008144 <LCD_ShowString+0x94>
 8008138:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800813a:	781b      	ldrb	r3, [r3, #0]
 800813c:	2b1f      	cmp	r3, #31
 800813e:	d8d1      	bhi.n	80080e4 <LCD_ShowString+0x34>
	}
}
 8008140:	e000      	b.n	8008144 <LCD_ShowString+0x94>
			break;	//退出
 8008142:	bf00      	nop
}
 8008144:	bf00      	nop
 8008146:	3714      	adds	r7, #20
 8008148:	46bd      	mov	sp, r7
 800814a:	bd90      	pop	{r4, r7, pc}

0800814c <main>:
  * @retval int
  */

HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size);
int main(void)
{
 800814c:	b590      	push	{r4, r7, lr}
 800814e:	b083      	sub	sp, #12
 8008150:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8008152:	f7f8 fc57 	bl	8000a04 <HAL_Init>

  /* USER CODE BEGIN Init */
  LCD_Init();
 8008156:	f7fb fda5 	bl	8003ca4 <LCD_Init>
  srand(time(NULL));
 800815a:	2000      	movs	r0, #0
 800815c:	f001 f94a 	bl	80093f4 <time>
 8008160:	4603      	mov	r3, r0
 8008162:	460c      	mov	r4, r1
 8008164:	4618      	mov	r0, r3
 8008166:	f001 f8ed 	bl	8009344 <srand>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800816a:	f000 f98e 	bl	800848a <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800816e:	f7f9 fead 	bl	8001ecc <MX_GPIO_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 8008172:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008176:	4877      	ldr	r0, [pc, #476]	; (8008354 <main+0x208>)
 8008178:	f7f9 f860 	bl	800123c <HAL_GPIO_TogglePin>
  HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 800817c:	2104      	movs	r1, #4
 800817e:	4876      	ldr	r0, [pc, #472]	; (8008358 <main+0x20c>)
 8008180:	f7f9 f85c 	bl	800123c <HAL_GPIO_TogglePin>
  start();
 8008184:	f000 f9c6 	bl	8008514 <start>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  //lab1 : ;
  while (1)
  {
	  while(!food.state || !stone.state){
 8008188:	e001      	b.n	800818e <main+0x42>
	 		  generate();
 800818a:	f000 fa9f 	bl	80086cc <generate>
	  while(!food.state || !stone.state){
 800818e:	4b73      	ldr	r3, [pc, #460]	; (800835c <main+0x210>)
 8008190:	789b      	ldrb	r3, [r3, #2]
 8008192:	2b00      	cmp	r3, #0
 8008194:	d0f9      	beq.n	800818a <main+0x3e>
 8008196:	4b72      	ldr	r3, [pc, #456]	; (8008360 <main+0x214>)
 8008198:	789b      	ldrb	r3, [r3, #2]
 800819a:	2b00      	cmp	r3, #0
 800819c:	d0f5      	beq.n	800818a <main+0x3e>
	 }

	  showBlock(snake.X[snake.Long-1],snake.Y[snake.Long-1],WHITE);
 800819e:	4b71      	ldr	r3, [pc, #452]	; (8008364 <main+0x218>)
 80081a0:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 80081a4:	3b01      	subs	r3, #1
 80081a6:	4a6f      	ldr	r2, [pc, #444]	; (8008364 <main+0x218>)
 80081a8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80081ac:	4b6d      	ldr	r3, [pc, #436]	; (8008364 <main+0x218>)
 80081ae:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 80081b2:	3b01      	subs	r3, #1
 80081b4:	4a6b      	ldr	r2, [pc, #428]	; (8008364 <main+0x218>)
 80081b6:	3332      	adds	r3, #50	; 0x32
 80081b8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80081bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80081c0:	4619      	mov	r1, r3
 80081c2:	f000 fd9b 	bl	8008cfc <showBlock>

	  for(i=snake.Long-1;i>0;i--){
 80081c6:	4b67      	ldr	r3, [pc, #412]	; (8008364 <main+0x218>)
 80081c8:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 80081cc:	3b01      	subs	r3, #1
 80081ce:	71fb      	strb	r3, [r7, #7]
 80081d0:	e016      	b.n	8008200 <main+0xb4>
			  snake.X[i]=snake.X[i-1];
 80081d2:	79fb      	ldrb	r3, [r7, #7]
 80081d4:	1e5a      	subs	r2, r3, #1
 80081d6:	79fb      	ldrb	r3, [r7, #7]
 80081d8:	4962      	ldr	r1, [pc, #392]	; (8008364 <main+0x218>)
 80081da:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80081de:	4961      	ldr	r1, [pc, #388]	; (8008364 <main+0x218>)
 80081e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			  snake.Y[i]=snake.Y[i-1];
 80081e4:	79fb      	ldrb	r3, [r7, #7]
 80081e6:	1e5a      	subs	r2, r3, #1
 80081e8:	79fb      	ldrb	r3, [r7, #7]
 80081ea:	495e      	ldr	r1, [pc, #376]	; (8008364 <main+0x218>)
 80081ec:	3232      	adds	r2, #50	; 0x32
 80081ee:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80081f2:	495c      	ldr	r1, [pc, #368]	; (8008364 <main+0x218>)
 80081f4:	3332      	adds	r3, #50	; 0x32
 80081f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	  for(i=snake.Long-1;i>0;i--){
 80081fa:	79fb      	ldrb	r3, [r7, #7]
 80081fc:	3b01      	subs	r3, #1
 80081fe:	71fb      	strb	r3, [r7, #7]
 8008200:	79fb      	ldrb	r3, [r7, #7]
 8008202:	2b00      	cmp	r3, #0
 8008204:	d1e5      	bne.n	80081d2 <main+0x86>
	}
	  switch(snake.Direction)
 8008206:	4b57      	ldr	r3, [pc, #348]	; (8008364 <main+0x218>)
 8008208:	f893 3191 	ldrb.w	r3, [r3, #401]	; 0x191
 800820c:	3b01      	subs	r3, #1
 800820e:	2b03      	cmp	r3, #3
 8008210:	d826      	bhi.n	8008260 <main+0x114>
 8008212:	a201      	add	r2, pc, #4	; (adr r2, 8008218 <main+0xcc>)
 8008214:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008218:	08008229 	.word	0x08008229
 800821c:	08008239 	.word	0x08008239
 8008220:	08008245 	.word	0x08008245
 8008224:	08008255 	.word	0x08008255
	  {
		case 1:snake.Y[0] -= 10;break;//向up运动
 8008228:	4b4e      	ldr	r3, [pc, #312]	; (8008364 <main+0x218>)
 800822a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800822e:	3b0a      	subs	r3, #10
 8008230:	4a4c      	ldr	r2, [pc, #304]	; (8008364 <main+0x218>)
 8008232:	f8c2 30c8 	str.w	r3, [r2, #200]	; 0xc8
 8008236:	e014      	b.n	8008262 <main+0x116>
		case 2:snake.X[0] -= 10;break;//向right运动
 8008238:	4b4a      	ldr	r3, [pc, #296]	; (8008364 <main+0x218>)
 800823a:	681b      	ldr	r3, [r3, #0]
 800823c:	3b0a      	subs	r3, #10
 800823e:	4a49      	ldr	r2, [pc, #292]	; (8008364 <main+0x218>)
 8008240:	6013      	str	r3, [r2, #0]
 8008242:	e00e      	b.n	8008262 <main+0x116>
		case 3:snake.Y[0] += 10;break;//向down运动
 8008244:	4b47      	ldr	r3, [pc, #284]	; (8008364 <main+0x218>)
 8008246:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800824a:	330a      	adds	r3, #10
 800824c:	4a45      	ldr	r2, [pc, #276]	; (8008364 <main+0x218>)
 800824e:	f8c2 30c8 	str.w	r3, [r2, #200]	; 0xc8
 8008252:	e006      	b.n	8008262 <main+0x116>
		case 4:snake.X[0] += 10;break;//向left运动
 8008254:	4b43      	ldr	r3, [pc, #268]	; (8008364 <main+0x218>)
 8008256:	681b      	ldr	r3, [r3, #0]
 8008258:	330a      	adds	r3, #10
 800825a:	4a42      	ldr	r2, [pc, #264]	; (8008364 <main+0x218>)
 800825c:	6013      	str	r3, [r2, #0]
 800825e:	e000      	b.n	8008262 <main+0x116>
		default: break;
 8008260:	bf00      	nop
	  }
	  press = 1;
 8008262:	4b41      	ldr	r3, [pc, #260]	; (8008368 <main+0x21c>)
 8008264:	2201      	movs	r2, #1
 8008266:	701a      	strb	r2, [r3, #0]
	  eat();
 8008268:	f000 fb84 	bl	8008974 <eat>
	  gameJudge();
 800826c:	f000 fc20 	bl	8008ab0 <gameJudge>
	  showSnake();
 8008270:	f000 fd14 	bl	8008c9c <showSnake>
	  if(!f_delay){
 8008274:	4b3d      	ldr	r3, [pc, #244]	; (800836c <main+0x220>)
 8008276:	781b      	ldrb	r3, [r3, #0]
 8008278:	2b00      	cmp	r3, #0
 800827a:	d10f      	bne.n	800829c <main+0x150>
		  if(food.state)
 800827c:	4b37      	ldr	r3, [pc, #220]	; (800835c <main+0x210>)
 800827e:	789b      	ldrb	r3, [r3, #2]
 8008280:	2b00      	cmp	r3, #0
 8008282:	d011      	beq.n	80082a8 <main+0x15c>
		 		showBlock(food.X,food.Y,food.color);
 8008284:	4b35      	ldr	r3, [pc, #212]	; (800835c <main+0x210>)
 8008286:	781b      	ldrb	r3, [r3, #0]
 8008288:	4618      	mov	r0, r3
 800828a:	4b34      	ldr	r3, [pc, #208]	; (800835c <main+0x210>)
 800828c:	785b      	ldrb	r3, [r3, #1]
 800828e:	4619      	mov	r1, r3
 8008290:	4b32      	ldr	r3, [pc, #200]	; (800835c <main+0x210>)
 8008292:	889b      	ldrh	r3, [r3, #4]
 8008294:	461a      	mov	r2, r3
 8008296:	f000 fd31 	bl	8008cfc <showBlock>
 800829a:	e005      	b.n	80082a8 <main+0x15c>
	  }else
 		  f_delay -= 1;
 800829c:	4b33      	ldr	r3, [pc, #204]	; (800836c <main+0x220>)
 800829e:	781b      	ldrb	r3, [r3, #0]
 80082a0:	3b01      	subs	r3, #1
 80082a2:	b2da      	uxtb	r2, r3
 80082a4:	4b31      	ldr	r3, [pc, #196]	; (800836c <main+0x220>)
 80082a6:	701a      	strb	r2, [r3, #0]

	  if(!s_delay){
 80082a8:	4b31      	ldr	r3, [pc, #196]	; (8008370 <main+0x224>)
 80082aa:	781b      	ldrb	r3, [r3, #0]
 80082ac:	2b00      	cmp	r3, #0
 80082ae:	d10f      	bne.n	80082d0 <main+0x184>
		  if(stone.state)
 80082b0:	4b2b      	ldr	r3, [pc, #172]	; (8008360 <main+0x214>)
 80082b2:	789b      	ldrb	r3, [r3, #2]
 80082b4:	2b00      	cmp	r3, #0
 80082b6:	d011      	beq.n	80082dc <main+0x190>
		  		  showBlock(stone.X,stone.Y,stone.color);
 80082b8:	4b29      	ldr	r3, [pc, #164]	; (8008360 <main+0x214>)
 80082ba:	781b      	ldrb	r3, [r3, #0]
 80082bc:	4618      	mov	r0, r3
 80082be:	4b28      	ldr	r3, [pc, #160]	; (8008360 <main+0x214>)
 80082c0:	785b      	ldrb	r3, [r3, #1]
 80082c2:	4619      	mov	r1, r3
 80082c4:	4b26      	ldr	r3, [pc, #152]	; (8008360 <main+0x214>)
 80082c6:	889b      	ldrh	r3, [r3, #4]
 80082c8:	461a      	mov	r2, r3
 80082ca:	f000 fd17 	bl	8008cfc <showBlock>
 80082ce:	e005      	b.n	80082dc <main+0x190>
	  }
	  else
		  s_delay -= 1;
 80082d0:	4b27      	ldr	r3, [pc, #156]	; (8008370 <main+0x224>)
 80082d2:	781b      	ldrb	r3, [r3, #0]
 80082d4:	3b01      	subs	r3, #1
 80082d6:	b2da      	uxtb	r2, r3
 80082d8:	4b25      	ldr	r3, [pc, #148]	; (8008370 <main+0x224>)
 80082da:	701a      	strb	r2, [r3, #0]


	  showScore();
 80082dc:	f000 fcc0 	bl	8008c60 <showScore>

	  switch(game.level)
 80082e0:	4b24      	ldr	r3, [pc, #144]	; (8008374 <main+0x228>)
 80082e2:	685b      	ldr	r3, [r3, #4]
 80082e4:	2b02      	cmp	r3, #2
 80082e6:	d008      	beq.n	80082fa <main+0x1ae>
 80082e8:	2b03      	cmp	r3, #3
 80082ea:	d00b      	beq.n	8008304 <main+0x1b8>
 80082ec:	2b01      	cmp	r3, #1
 80082ee:	d10e      	bne.n	800830e <main+0x1c2>
	 {
		case 1: HAL_Delay(400);break;
 80082f0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80082f4:	f7f8 fbe8 	bl	8000ac8 <HAL_Delay>
 80082f8:	e00d      	b.n	8008316 <main+0x1ca>
		case 2: HAL_Delay(320);break;
 80082fa:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80082fe:	f7f8 fbe3 	bl	8000ac8 <HAL_Delay>
 8008302:	e008      	b.n	8008316 <main+0x1ca>
		case 3: HAL_Delay(270);break;
 8008304:	f44f 7087 	mov.w	r0, #270	; 0x10e
 8008308:	f7f8 fbde 	bl	8000ac8 <HAL_Delay>
 800830c:	e003      	b.n	8008316 <main+0x1ca>
		default: HAL_Delay(200);break;
 800830e:	20c8      	movs	r0, #200	; 0xc8
 8008310:	f7f8 fbda 	bl	8000ac8 <HAL_Delay>
 8008314:	bf00      	nop
	 }
	  if(eating){
 8008316:	4b18      	ldr	r3, [pc, #96]	; (8008378 <main+0x22c>)
 8008318:	781b      	ldrb	r3, [r3, #0]
 800831a:	2b00      	cmp	r3, #0
 800831c:	d006      	beq.n	800832c <main+0x1e0>
		  HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 800831e:	2104      	movs	r1, #4
 8008320:	480d      	ldr	r0, [pc, #52]	; (8008358 <main+0x20c>)
 8008322:	f7f8 ff8b 	bl	800123c <HAL_GPIO_TogglePin>
		  eating = 0;
 8008326:	4b14      	ldr	r3, [pc, #80]	; (8008378 <main+0x22c>)
 8008328:	2200      	movs	r2, #0
 800832a:	701a      	strb	r2, [r3, #0]
	 }
	  if(game.life){
 800832c:	4b11      	ldr	r3, [pc, #68]	; (8008374 <main+0x228>)
 800832e:	7a1b      	ldrb	r3, [r3, #8]
 8008330:	2b00      	cmp	r3, #0
 8008332:	d00c      	beq.n	800834e <main+0x202>
	  		food.time ++;
 8008334:	4b09      	ldr	r3, [pc, #36]	; (800835c <main+0x210>)
 8008336:	78db      	ldrb	r3, [r3, #3]
 8008338:	3301      	adds	r3, #1
 800833a:	b2da      	uxtb	r2, r3
 800833c:	4b07      	ldr	r3, [pc, #28]	; (800835c <main+0x210>)
 800833e:	70da      	strb	r2, [r3, #3]
	  		stone.time++;
 8008340:	4b07      	ldr	r3, [pc, #28]	; (8008360 <main+0x214>)
 8008342:	78db      	ldrb	r3, [r3, #3]
 8008344:	3301      	adds	r3, #1
 8008346:	b2da      	uxtb	r2, r3
 8008348:	4b05      	ldr	r3, [pc, #20]	; (8008360 <main+0x214>)
 800834a:	70da      	strb	r2, [r3, #3]
 800834c:	e71f      	b.n	800818e <main+0x42>
	  }else{
	  		gameover();
 800834e:	f000 fb99 	bl	8008a84 <gameover>
	  while(!food.state || !stone.state){
 8008352:	e71c      	b.n	800818e <main+0x42>
 8008354:	40010800 	.word	0x40010800
 8008358:	40011400 	.word	0x40011400
 800835c:	200000b8 	.word	0x200000b8
 8008360:	20000278 	.word	0x20000278
 8008364:	200000c0 	.word	0x200000c0
 8008368:	20000097 	.word	0x20000097
 800836c:	20000260 	.word	0x20000260
 8008370:	2000027e 	.word	0x2000027e
 8008374:	20000254 	.word	0x20000254
 8008378:	20000096 	.word	0x20000096

0800837c <HAL_GPIO_EXTI_Callback>:
    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 800837c:	b580      	push	{r7, lr}
 800837e:	b082      	sub	sp, #8
 8008380:	af00      	add	r7, sp, #0
 8008382:	4603      	mov	r3, r0
 8008384:	80fb      	strh	r3, [r7, #6]
	HAL_Delay(150);
 8008386:	2096      	movs	r0, #150	; 0x96
 8008388:	f7f8 fb9e 	bl	8000ac8 <HAL_Delay>
	switch (GPIO_Pin) {
 800838c:	88fb      	ldrh	r3, [r7, #6]
 800838e:	2b20      	cmp	r3, #32
 8008390:	d005      	beq.n	800839e <HAL_GPIO_EXTI_Callback+0x22>
 8008392:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008396:	d030      	beq.n	80083fa <HAL_GPIO_EXTI_Callback+0x7e>
 8008398:	2b01      	cmp	r3, #1
 800839a:	d05c      	beq.n	8008456 <HAL_GPIO_EXTI_Callback+0xda>
			break;
		case KEY_WK_Pin:
			HAL_Delay(2000);
			break;
		default:
			break;
 800839c:	e063      	b.n	8008466 <HAL_GPIO_EXTI_Callback+0xea>
			if(press){
 800839e:	4b34      	ldr	r3, [pc, #208]	; (8008470 <HAL_GPIO_EXTI_Callback+0xf4>)
 80083a0:	781b      	ldrb	r3, [r3, #0]
 80083a2:	2b00      	cmp	r3, #0
 80083a4:	d05c      	beq.n	8008460 <HAL_GPIO_EXTI_Callback+0xe4>
				switch (snake.Direction)
 80083a6:	4b33      	ldr	r3, [pc, #204]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 80083a8:	f893 3191 	ldrb.w	r3, [r3, #401]	; 0x191
 80083ac:	3b01      	subs	r3, #1
 80083ae:	2b03      	cmp	r3, #3
 80083b0:	d81e      	bhi.n	80083f0 <HAL_GPIO_EXTI_Callback+0x74>
 80083b2:	a201      	add	r2, pc, #4	; (adr r2, 80083b8 <HAL_GPIO_EXTI_Callback+0x3c>)
 80083b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80083b8:	080083c9 	.word	0x080083c9
 80083bc:	080083d3 	.word	0x080083d3
 80083c0:	080083dd 	.word	0x080083dd
 80083c4:	080083e7 	.word	0x080083e7
					case 1: snake.Direction = 4;break;
 80083c8:	4b2a      	ldr	r3, [pc, #168]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 80083ca:	2204      	movs	r2, #4
 80083cc:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 80083d0:	e00f      	b.n	80083f2 <HAL_GPIO_EXTI_Callback+0x76>
					case 2: snake.Direction = 1;break;
 80083d2:	4b28      	ldr	r3, [pc, #160]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 80083d4:	2201      	movs	r2, #1
 80083d6:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 80083da:	e00a      	b.n	80083f2 <HAL_GPIO_EXTI_Callback+0x76>
					case 3: snake.Direction = 4;break;
 80083dc:	4b25      	ldr	r3, [pc, #148]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 80083de:	2204      	movs	r2, #4
 80083e0:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 80083e4:	e005      	b.n	80083f2 <HAL_GPIO_EXTI_Callback+0x76>
					case 4: snake.Direction = 3;break;
 80083e6:	4b23      	ldr	r3, [pc, #140]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 80083e8:	2203      	movs	r2, #3
 80083ea:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 80083ee:	e000      	b.n	80083f2 <HAL_GPIO_EXTI_Callback+0x76>
					default: break;
 80083f0:	bf00      	nop
				press = 0;
 80083f2:	4b1f      	ldr	r3, [pc, #124]	; (8008470 <HAL_GPIO_EXTI_Callback+0xf4>)
 80083f4:	2200      	movs	r2, #0
 80083f6:	701a      	strb	r2, [r3, #0]
			break;
 80083f8:	e032      	b.n	8008460 <HAL_GPIO_EXTI_Callback+0xe4>
			if(press){
 80083fa:	4b1d      	ldr	r3, [pc, #116]	; (8008470 <HAL_GPIO_EXTI_Callback+0xf4>)
 80083fc:	781b      	ldrb	r3, [r3, #0]
 80083fe:	2b00      	cmp	r3, #0
 8008400:	d030      	beq.n	8008464 <HAL_GPIO_EXTI_Callback+0xe8>
				switch (snake.Direction)
 8008402:	4b1c      	ldr	r3, [pc, #112]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 8008404:	f893 3191 	ldrb.w	r3, [r3, #401]	; 0x191
 8008408:	3b01      	subs	r3, #1
 800840a:	2b03      	cmp	r3, #3
 800840c:	d81e      	bhi.n	800844c <HAL_GPIO_EXTI_Callback+0xd0>
 800840e:	a201      	add	r2, pc, #4	; (adr r2, 8008414 <HAL_GPIO_EXTI_Callback+0x98>)
 8008410:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008414:	08008425 	.word	0x08008425
 8008418:	0800842f 	.word	0x0800842f
 800841c:	08008439 	.word	0x08008439
 8008420:	08008443 	.word	0x08008443
					case 1: snake.Direction = 2;break;
 8008424:	4b13      	ldr	r3, [pc, #76]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 8008426:	2202      	movs	r2, #2
 8008428:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 800842c:	e00f      	b.n	800844e <HAL_GPIO_EXTI_Callback+0xd2>
					case 2: snake.Direction = 3;break;
 800842e:	4b11      	ldr	r3, [pc, #68]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 8008430:	2203      	movs	r2, #3
 8008432:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 8008436:	e00a      	b.n	800844e <HAL_GPIO_EXTI_Callback+0xd2>
					case 3: snake.Direction = 2;break;
 8008438:	4b0e      	ldr	r3, [pc, #56]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 800843a:	2202      	movs	r2, #2
 800843c:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 8008440:	e005      	b.n	800844e <HAL_GPIO_EXTI_Callback+0xd2>
					case 4: snake.Direction = 1;break;
 8008442:	4b0c      	ldr	r3, [pc, #48]	; (8008474 <HAL_GPIO_EXTI_Callback+0xf8>)
 8008444:	2201      	movs	r2, #1
 8008446:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 800844a:	e000      	b.n	800844e <HAL_GPIO_EXTI_Callback+0xd2>
					default: break;
 800844c:	bf00      	nop
				press = 0;
 800844e:	4b08      	ldr	r3, [pc, #32]	; (8008470 <HAL_GPIO_EXTI_Callback+0xf4>)
 8008450:	2200      	movs	r2, #0
 8008452:	701a      	strb	r2, [r3, #0]
			break;
 8008454:	e006      	b.n	8008464 <HAL_GPIO_EXTI_Callback+0xe8>
			HAL_Delay(2000);
 8008456:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800845a:	f7f8 fb35 	bl	8000ac8 <HAL_Delay>
			break;
 800845e:	e002      	b.n	8008466 <HAL_GPIO_EXTI_Callback+0xea>
			break;
 8008460:	bf00      	nop
 8008462:	e000      	b.n	8008466 <HAL_GPIO_EXTI_Callback+0xea>
			break;
 8008464:	bf00      	nop
	}
}
 8008466:	bf00      	nop
 8008468:	3708      	adds	r7, #8
 800846a:	46bd      	mov	sp, r7
 800846c:	bd80      	pop	{r7, pc}
 800846e:	bf00      	nop
 8008470:	20000097 	.word	0x20000097
 8008474:	200000c0 	.word	0x200000c0

08008478 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8008478:	b480      	push	{r7}
 800847a:	b083      	sub	sp, #12
 800847c:	af00      	add	r7, sp, #0
 800847e:	6078      	str	r0, [r7, #4]
}
 8008480:	bf00      	nop
 8008482:	370c      	adds	r7, #12
 8008484:	46bd      	mov	sp, r7
 8008486:	bc80      	pop	{r7}
 8008488:	4770      	bx	lr

0800848a <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800848a:	b580      	push	{r7, lr}
 800848c:	b090      	sub	sp, #64	; 0x40
 800848e:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8008490:	f107 0318 	add.w	r3, r7, #24
 8008494:	2228      	movs	r2, #40	; 0x28
 8008496:	2100      	movs	r1, #0
 8008498:	4618      	mov	r0, r3
 800849a:	f000 ff4b 	bl	8009334 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800849e:	1d3b      	adds	r3, r7, #4
 80084a0:	2200      	movs	r2, #0
 80084a2:	601a      	str	r2, [r3, #0]
 80084a4:	605a      	str	r2, [r3, #4]
 80084a6:	609a      	str	r2, [r3, #8]
 80084a8:	60da      	str	r2, [r3, #12]
 80084aa:	611a      	str	r2, [r3, #16]

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80084ac:	2301      	movs	r3, #1
 80084ae:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80084b0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80084b4:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80084b6:	2300      	movs	r3, #0
 80084b8:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80084ba:	2301      	movs	r3, #1
 80084bc:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80084be:	2302      	movs	r3, #2
 80084c0:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80084c2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80084c6:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80084c8:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80084cc:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80084ce:	f107 0318 	add.w	r3, r7, #24
 80084d2:	4618      	mov	r0, r3
 80084d4:	f7f8 fee2 	bl	800129c <HAL_RCC_OscConfig>
 80084d8:	4603      	mov	r3, r0
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d001      	beq.n	80084e2 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80084de:	f000 fdf5 	bl	80090cc <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80084e2:	230f      	movs	r3, #15
 80084e4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80084e6:	2302      	movs	r3, #2
 80084e8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80084ea:	2300      	movs	r3, #0
 80084ec:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80084ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80084f2:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80084f4:	2300      	movs	r3, #0
 80084f6:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80084f8:	1d3b      	adds	r3, r7, #4
 80084fa:	2102      	movs	r1, #2
 80084fc:	4618      	mov	r0, r3
 80084fe:	f7f9 f94d 	bl	800179c <HAL_RCC_ClockConfig>
 8008502:	4603      	mov	r3, r0
 8008504:	2b00      	cmp	r3, #0
 8008506:	d001      	beq.n	800850c <SystemClock_Config+0x82>
  {
    Error_Handler();
 8008508:	f000 fde0 	bl	80090cc <Error_Handler>
  }
}
 800850c:	bf00      	nop
 800850e:	3740      	adds	r7, #64	; 0x40
 8008510:	46bd      	mov	sp, r7
 8008512:	bd80      	pop	{r7, pc}

08008514 <start>:

/* USER CODE BEGIN 4 */



void start(){
 8008514:	b580      	push	{r7, lr}
 8008516:	af00      	add	r7, sp, #0
	//time = 0;
	lcd_DrawPicture(Isnake);
 8008518:	4862      	ldr	r0, [pc, #392]	; (80086a4 <start+0x190>)
 800851a:	f000 fd31 	bl	8008f80 <lcd_DrawPicture>
	snake.X[0] = 125;
 800851e:	4b62      	ldr	r3, [pc, #392]	; (80086a8 <start+0x194>)
 8008520:	227d      	movs	r2, #125	; 0x7d
 8008522:	601a      	str	r2, [r3, #0]
	snake.Y[0] = 185;
 8008524:	4b60      	ldr	r3, [pc, #384]	; (80086a8 <start+0x194>)
 8008526:	22b9      	movs	r2, #185	; 0xb9
 8008528:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
	snake.X[1] = 125;
 800852c:	4b5e      	ldr	r3, [pc, #376]	; (80086a8 <start+0x194>)
 800852e:	227d      	movs	r2, #125	; 0x7d
 8008530:	605a      	str	r2, [r3, #4]
	snake.Y[1] = 175;
 8008532:	4b5d      	ldr	r3, [pc, #372]	; (80086a8 <start+0x194>)
 8008534:	22af      	movs	r2, #175	; 0xaf
 8008536:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	snake.Direction = 1;
 800853a:	4b5b      	ldr	r3, [pc, #364]	; (80086a8 <start+0x194>)
 800853c:	2201      	movs	r2, #1
 800853e:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
	snake.Long = 2;
 8008542:	4b59      	ldr	r3, [pc, #356]	; (80086a8 <start+0x194>)
 8008544:	2202      	movs	r2, #2
 8008546:	f883 2190 	strb.w	r2, [r3, #400]	; 0x190
	food.state = 0;
 800854a:	4b58      	ldr	r3, [pc, #352]	; (80086ac <start+0x198>)
 800854c:	2200      	movs	r2, #0
 800854e:	709a      	strb	r2, [r3, #2]
	stone.state = 0;
 8008550:	4b57      	ldr	r3, [pc, #348]	; (80086b0 <start+0x19c>)
 8008552:	2200      	movs	r2, #0
 8008554:	709a      	strb	r2, [r3, #2]
	snake.color = BLUE;
 8008556:	4b54      	ldr	r3, [pc, #336]	; (80086a8 <start+0x194>)
 8008558:	221f      	movs	r2, #31
 800855a:	f8a3 2192 	strh.w	r2, [r3, #402]	; 0x192
	food.color = GREEN;
 800855e:	4b53      	ldr	r3, [pc, #332]	; (80086ac <start+0x198>)
 8008560:	f44f 62fc 	mov.w	r2, #2016	; 0x7e0
 8008564:	809a      	strh	r2, [r3, #4]
	stone.color = BLACK;
 8008566:	4b52      	ldr	r3, [pc, #328]	; (80086b0 <start+0x19c>)
 8008568:	2200      	movs	r2, #0
 800856a:	809a      	strh	r2, [r3, #4]
	while (1){
		food.X = (rand()%20)*size + 15;
 800856c:	f000 ff0e 	bl	800938c <rand>
 8008570:	4601      	mov	r1, r0
 8008572:	4b50      	ldr	r3, [pc, #320]	; (80086b4 <start+0x1a0>)
 8008574:	fb83 2301 	smull	r2, r3, r3, r1
 8008578:	10da      	asrs	r2, r3, #3
 800857a:	17cb      	asrs	r3, r1, #31
 800857c:	1ad2      	subs	r2, r2, r3
 800857e:	4613      	mov	r3, r2
 8008580:	009b      	lsls	r3, r3, #2
 8008582:	4413      	add	r3, r2
 8008584:	009b      	lsls	r3, r3, #2
 8008586:	1aca      	subs	r2, r1, r3
 8008588:	b2d3      	uxtb	r3, r2
 800858a:	4a4b      	ldr	r2, [pc, #300]	; (80086b8 <start+0x1a4>)
 800858c:	7812      	ldrb	r2, [r2, #0]
 800858e:	fb02 f303 	mul.w	r3, r2, r3
 8008592:	b2db      	uxtb	r3, r3
 8008594:	330f      	adds	r3, #15
 8008596:	b2da      	uxtb	r2, r3
 8008598:	4b44      	ldr	r3, [pc, #272]	; (80086ac <start+0x198>)
 800859a:	701a      	strb	r2, [r3, #0]
		food.Y = (rand()%25)*size + 45;
 800859c:	f000 fef6 	bl	800938c <rand>
 80085a0:	4601      	mov	r1, r0
 80085a2:	4b46      	ldr	r3, [pc, #280]	; (80086bc <start+0x1a8>)
 80085a4:	fb83 2301 	smull	r2, r3, r3, r1
 80085a8:	10da      	asrs	r2, r3, #3
 80085aa:	17cb      	asrs	r3, r1, #31
 80085ac:	1ad2      	subs	r2, r2, r3
 80085ae:	4613      	mov	r3, r2
 80085b0:	009b      	lsls	r3, r3, #2
 80085b2:	4413      	add	r3, r2
 80085b4:	009a      	lsls	r2, r3, #2
 80085b6:	4413      	add	r3, r2
 80085b8:	1aca      	subs	r2, r1, r3
 80085ba:	b2d3      	uxtb	r3, r2
 80085bc:	4a3e      	ldr	r2, [pc, #248]	; (80086b8 <start+0x1a4>)
 80085be:	7812      	ldrb	r2, [r2, #0]
 80085c0:	fb02 f303 	mul.w	r3, r2, r3
 80085c4:	b2db      	uxtb	r3, r3
 80085c6:	332d      	adds	r3, #45	; 0x2d
 80085c8:	b2da      	uxtb	r2, r3
 80085ca:	4b38      	ldr	r3, [pc, #224]	; (80086ac <start+0x198>)
 80085cc:	705a      	strb	r2, [r3, #1]
		if(!overlapping(1))
 80085ce:	2001      	movs	r0, #1
 80085d0:	f000 f91a 	bl	8008808 <overlapping>
 80085d4:	4603      	mov	r3, r0
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d000      	beq.n	80085dc <start+0xc8>
		food.X = (rand()%20)*size + 15;
 80085da:	e7c7      	b.n	800856c <start+0x58>
			break;
 80085dc:	bf00      	nop
	}
	food.state = 1;
 80085de:	4b33      	ldr	r3, [pc, #204]	; (80086ac <start+0x198>)
 80085e0:	2201      	movs	r2, #1
 80085e2:	709a      	strb	r2, [r3, #2]
	while(1){
		stone.X = (rand()%20)*size + 15;
 80085e4:	f000 fed2 	bl	800938c <rand>
 80085e8:	4601      	mov	r1, r0
 80085ea:	4b32      	ldr	r3, [pc, #200]	; (80086b4 <start+0x1a0>)
 80085ec:	fb83 2301 	smull	r2, r3, r3, r1
 80085f0:	10da      	asrs	r2, r3, #3
 80085f2:	17cb      	asrs	r3, r1, #31
 80085f4:	1ad2      	subs	r2, r2, r3
 80085f6:	4613      	mov	r3, r2
 80085f8:	009b      	lsls	r3, r3, #2
 80085fa:	4413      	add	r3, r2
 80085fc:	009b      	lsls	r3, r3, #2
 80085fe:	1aca      	subs	r2, r1, r3
 8008600:	b2d3      	uxtb	r3, r2
 8008602:	4a2d      	ldr	r2, [pc, #180]	; (80086b8 <start+0x1a4>)
 8008604:	7812      	ldrb	r2, [r2, #0]
 8008606:	fb02 f303 	mul.w	r3, r2, r3
 800860a:	b2db      	uxtb	r3, r3
 800860c:	330f      	adds	r3, #15
 800860e:	b2da      	uxtb	r2, r3
 8008610:	4b27      	ldr	r3, [pc, #156]	; (80086b0 <start+0x19c>)
 8008612:	701a      	strb	r2, [r3, #0]
		stone.Y = (rand()%25)*size + 45;
 8008614:	f000 feba 	bl	800938c <rand>
 8008618:	4601      	mov	r1, r0
 800861a:	4b28      	ldr	r3, [pc, #160]	; (80086bc <start+0x1a8>)
 800861c:	fb83 2301 	smull	r2, r3, r3, r1
 8008620:	10da      	asrs	r2, r3, #3
 8008622:	17cb      	asrs	r3, r1, #31
 8008624:	1ad2      	subs	r2, r2, r3
 8008626:	4613      	mov	r3, r2
 8008628:	009b      	lsls	r3, r3, #2
 800862a:	4413      	add	r3, r2
 800862c:	009a      	lsls	r2, r3, #2
 800862e:	4413      	add	r3, r2
 8008630:	1aca      	subs	r2, r1, r3
 8008632:	b2d3      	uxtb	r3, r2
 8008634:	4a20      	ldr	r2, [pc, #128]	; (80086b8 <start+0x1a4>)
 8008636:	7812      	ldrb	r2, [r2, #0]
 8008638:	fb02 f303 	mul.w	r3, r2, r3
 800863c:	b2db      	uxtb	r3, r3
 800863e:	332d      	adds	r3, #45	; 0x2d
 8008640:	b2da      	uxtb	r2, r3
 8008642:	4b1b      	ldr	r3, [pc, #108]	; (80086b0 <start+0x19c>)
 8008644:	705a      	strb	r2, [r3, #1]
		if(!overlapping(0))
 8008646:	2000      	movs	r0, #0
 8008648:	f000 f8de 	bl	8008808 <overlapping>
 800864c:	4603      	mov	r3, r0
 800864e:	2b00      	cmp	r3, #0
 8008650:	d000      	beq.n	8008654 <start+0x140>
		stone.X = (rand()%20)*size + 15;
 8008652:	e7c7      	b.n	80085e4 <start+0xd0>
			break;
 8008654:	bf00      	nop
	}
	stone.state = 1;
 8008656:	4b16      	ldr	r3, [pc, #88]	; (80086b0 <start+0x19c>)
 8008658:	2201      	movs	r2, #1
 800865a:	709a      	strb	r2, [r3, #2]
	food.time = 0;
 800865c:	4b13      	ldr	r3, [pc, #76]	; (80086ac <start+0x198>)
 800865e:	2200      	movs	r2, #0
 8008660:	70da      	strb	r2, [r3, #3]
	stone.time = 0;
 8008662:	4b13      	ldr	r3, [pc, #76]	; (80086b0 <start+0x19c>)
 8008664:	2200      	movs	r2, #0
 8008666:	70da      	strb	r2, [r3, #3]
	game.Score = 0;
 8008668:	4b15      	ldr	r3, [pc, #84]	; (80086c0 <start+0x1ac>)
 800866a:	2200      	movs	r2, #0
 800866c:	601a      	str	r2, [r3, #0]
	game.level = 0;
 800866e:	4b14      	ldr	r3, [pc, #80]	; (80086c0 <start+0x1ac>)
 8008670:	2200      	movs	r2, #0
 8008672:	605a      	str	r2, [r3, #4]
	game.life = 1;
 8008674:	4b12      	ldr	r3, [pc, #72]	; (80086c0 <start+0x1ac>)
 8008676:	2201      	movs	r2, #1
 8008678:	721a      	strb	r2, [r3, #8]
	game.level = 1;
 800867a:	4b11      	ldr	r3, [pc, #68]	; (80086c0 <start+0x1ac>)
 800867c:	2201      	movs	r2, #1
 800867e:	605a      	str	r2, [r3, #4]
	HAL_Delay(1000);
 8008680:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8008684:	f7f8 fa20 	bl	8000ac8 <HAL_Delay>
	LCD_Clear(WHITE);
 8008688:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800868c:	f7ff fa38 	bl	8007b00 <LCD_Clear>
	InitialPlane();
 8008690:	f000 fab2 	bl	8008bf8 <InitialPlane>
	f_delay = 0;
 8008694:	4b0b      	ldr	r3, [pc, #44]	; (80086c4 <start+0x1b0>)
 8008696:	2200      	movs	r2, #0
 8008698:	701a      	strb	r2, [r3, #0]
	s_delay = 0;
 800869a:	4b0b      	ldr	r3, [pc, #44]	; (80086c8 <start+0x1b4>)
 800869c:	2200      	movs	r2, #0
 800869e:	701a      	strb	r2, [r3, #0]
}
 80086a0:	bf00      	nop
 80086a2:	bd80      	pop	{r7, pc}
 80086a4:	0800ad5c 	.word	0x0800ad5c
 80086a8:	200000c0 	.word	0x200000c0
 80086ac:	200000b8 	.word	0x200000b8
 80086b0:	20000278 	.word	0x20000278
 80086b4:	66666667 	.word	0x66666667
 80086b8:	20000008 	.word	0x20000008
 80086bc:	51eb851f 	.word	0x51eb851f
 80086c0:	20000254 	.word	0x20000254
 80086c4:	20000260 	.word	0x20000260
 80086c8:	2000027e 	.word	0x2000027e

080086cc <generate>:

void generate(){
 80086cc:	b580      	push	{r7, lr}
 80086ce:	af00      	add	r7, sp, #0
	while(!food.state){
 80086d0:	e045      	b.n	800875e <generate+0x92>
		food.X = (rand()%19) * size + 15;
 80086d2:	f000 fe5b 	bl	800938c <rand>
 80086d6:	4601      	mov	r1, r0
 80086d8:	4b46      	ldr	r3, [pc, #280]	; (80087f4 <generate+0x128>)
 80086da:	fb83 2301 	smull	r2, r3, r3, r1
 80086de:	10da      	asrs	r2, r3, #3
 80086e0:	17cb      	asrs	r3, r1, #31
 80086e2:	1ad2      	subs	r2, r2, r3
 80086e4:	4613      	mov	r3, r2
 80086e6:	00db      	lsls	r3, r3, #3
 80086e8:	4413      	add	r3, r2
 80086ea:	005b      	lsls	r3, r3, #1
 80086ec:	4413      	add	r3, r2
 80086ee:	1aca      	subs	r2, r1, r3
 80086f0:	b2d3      	uxtb	r3, r2
 80086f2:	4a41      	ldr	r2, [pc, #260]	; (80087f8 <generate+0x12c>)
 80086f4:	7812      	ldrb	r2, [r2, #0]
 80086f6:	fb02 f303 	mul.w	r3, r2, r3
 80086fa:	b2db      	uxtb	r3, r3
 80086fc:	330f      	adds	r3, #15
 80086fe:	b2da      	uxtb	r2, r3
 8008700:	4b3e      	ldr	r3, [pc, #248]	; (80087fc <generate+0x130>)
 8008702:	701a      	strb	r2, [r3, #0]
		food.Y = (rand()%23) * size + 45;
 8008704:	f000 fe42 	bl	800938c <rand>
 8008708:	4601      	mov	r1, r0
 800870a:	4b3d      	ldr	r3, [pc, #244]	; (8008800 <generate+0x134>)
 800870c:	fb83 2301 	smull	r2, r3, r3, r1
 8008710:	440b      	add	r3, r1
 8008712:	111a      	asrs	r2, r3, #4
 8008714:	17cb      	asrs	r3, r1, #31
 8008716:	1ad2      	subs	r2, r2, r3
 8008718:	4613      	mov	r3, r2
 800871a:	005b      	lsls	r3, r3, #1
 800871c:	4413      	add	r3, r2
 800871e:	00db      	lsls	r3, r3, #3
 8008720:	1a9b      	subs	r3, r3, r2
 8008722:	1aca      	subs	r2, r1, r3
 8008724:	b2d3      	uxtb	r3, r2
 8008726:	4a34      	ldr	r2, [pc, #208]	; (80087f8 <generate+0x12c>)
 8008728:	7812      	ldrb	r2, [r2, #0]
 800872a:	fb02 f303 	mul.w	r3, r2, r3
 800872e:	b2db      	uxtb	r3, r3
 8008730:	332d      	adds	r3, #45	; 0x2d
 8008732:	b2da      	uxtb	r2, r3
 8008734:	4b31      	ldr	r3, [pc, #196]	; (80087fc <generate+0x130>)
 8008736:	705a      	strb	r2, [r3, #1]
		if(!overlapping(1)){
 8008738:	2001      	movs	r0, #1
 800873a:	f000 f865 	bl	8008808 <overlapping>
 800873e:	4603      	mov	r3, r0
 8008740:	2b00      	cmp	r3, #0
 8008742:	d10c      	bne.n	800875e <generate+0x92>
			food.color = randomColor();
 8008744:	f000 fbc8 	bl	8008ed8 <randomColor>
 8008748:	4603      	mov	r3, r0
 800874a:	461a      	mov	r2, r3
 800874c:	4b2b      	ldr	r3, [pc, #172]	; (80087fc <generate+0x130>)
 800874e:	809a      	strh	r2, [r3, #4]
			food.time = 0;
 8008750:	4b2a      	ldr	r3, [pc, #168]	; (80087fc <generate+0x130>)
 8008752:	2200      	movs	r2, #0
 8008754:	70da      	strb	r2, [r3, #3]
			food.state = 1;
 8008756:	4b29      	ldr	r3, [pc, #164]	; (80087fc <generate+0x130>)
 8008758:	2201      	movs	r2, #1
 800875a:	709a      	strb	r2, [r3, #2]
			break;
 800875c:	e003      	b.n	8008766 <generate+0x9a>
	while(!food.state){
 800875e:	4b27      	ldr	r3, [pc, #156]	; (80087fc <generate+0x130>)
 8008760:	789b      	ldrb	r3, [r3, #2]
 8008762:	2b00      	cmp	r3, #0
 8008764:	d0b5      	beq.n	80086d2 <generate+0x6>
		}
	}
	while(!stone.state){
 8008766:	e03f      	b.n	80087e8 <generate+0x11c>
		stone.X = (rand()%19)* size + 15;
 8008768:	f000 fe10 	bl	800938c <rand>
 800876c:	4601      	mov	r1, r0
 800876e:	4b21      	ldr	r3, [pc, #132]	; (80087f4 <generate+0x128>)
 8008770:	fb83 2301 	smull	r2, r3, r3, r1
 8008774:	10da      	asrs	r2, r3, #3
 8008776:	17cb      	asrs	r3, r1, #31
 8008778:	1ad2      	subs	r2, r2, r3
 800877a:	4613      	mov	r3, r2
 800877c:	00db      	lsls	r3, r3, #3
 800877e:	4413      	add	r3, r2
 8008780:	005b      	lsls	r3, r3, #1
 8008782:	4413      	add	r3, r2
 8008784:	1aca      	subs	r2, r1, r3
 8008786:	b2d3      	uxtb	r3, r2
 8008788:	4a1b      	ldr	r2, [pc, #108]	; (80087f8 <generate+0x12c>)
 800878a:	7812      	ldrb	r2, [r2, #0]
 800878c:	fb02 f303 	mul.w	r3, r2, r3
 8008790:	b2db      	uxtb	r3, r3
 8008792:	330f      	adds	r3, #15
 8008794:	b2da      	uxtb	r2, r3
 8008796:	4b1b      	ldr	r3, [pc, #108]	; (8008804 <generate+0x138>)
 8008798:	701a      	strb	r2, [r3, #0]
		stone.Y = (rand()%23)* size + 45;
 800879a:	f000 fdf7 	bl	800938c <rand>
 800879e:	4601      	mov	r1, r0
 80087a0:	4b17      	ldr	r3, [pc, #92]	; (8008800 <generate+0x134>)
 80087a2:	fb83 2301 	smull	r2, r3, r3, r1
 80087a6:	440b      	add	r3, r1
 80087a8:	111a      	asrs	r2, r3, #4
 80087aa:	17cb      	asrs	r3, r1, #31
 80087ac:	1ad2      	subs	r2, r2, r3
 80087ae:	4613      	mov	r3, r2
 80087b0:	005b      	lsls	r3, r3, #1
 80087b2:	4413      	add	r3, r2
 80087b4:	00db      	lsls	r3, r3, #3
 80087b6:	1a9b      	subs	r3, r3, r2
 80087b8:	1aca      	subs	r2, r1, r3
 80087ba:	b2d3      	uxtb	r3, r2
 80087bc:	4a0e      	ldr	r2, [pc, #56]	; (80087f8 <generate+0x12c>)
 80087be:	7812      	ldrb	r2, [r2, #0]
 80087c0:	fb02 f303 	mul.w	r3, r2, r3
 80087c4:	b2db      	uxtb	r3, r3
 80087c6:	332d      	adds	r3, #45	; 0x2d
 80087c8:	b2da      	uxtb	r2, r3
 80087ca:	4b0e      	ldr	r3, [pc, #56]	; (8008804 <generate+0x138>)
 80087cc:	705a      	strb	r2, [r3, #1]
		if(!overlapping(0)){
 80087ce:	2000      	movs	r0, #0
 80087d0:	f000 f81a 	bl	8008808 <overlapping>
 80087d4:	4603      	mov	r3, r0
 80087d6:	2b00      	cmp	r3, #0
 80087d8:	d106      	bne.n	80087e8 <generate+0x11c>
			stone.time = 0;
 80087da:	4b0a      	ldr	r3, [pc, #40]	; (8008804 <generate+0x138>)
 80087dc:	2200      	movs	r2, #0
 80087de:	70da      	strb	r2, [r3, #3]
			stone.state = 1;
 80087e0:	4b08      	ldr	r3, [pc, #32]	; (8008804 <generate+0x138>)
 80087e2:	2201      	movs	r2, #1
 80087e4:	709a      	strb	r2, [r3, #2]
			break;
 80087e6:	e003      	b.n	80087f0 <generate+0x124>
	while(!stone.state){
 80087e8:	4b06      	ldr	r3, [pc, #24]	; (8008804 <generate+0x138>)
 80087ea:	789b      	ldrb	r3, [r3, #2]
 80087ec:	2b00      	cmp	r3, #0
 80087ee:	d0bb      	beq.n	8008768 <generate+0x9c>
		}
	}
}
 80087f0:	bf00      	nop
 80087f2:	bd80      	pop	{r7, pc}
 80087f4:	6bca1af3 	.word	0x6bca1af3
 80087f8:	20000008 	.word	0x20000008
 80087fc:	200000b8 	.word	0x200000b8
 8008800:	b21642c9 	.word	0xb21642c9
 8008804:	20000278 	.word	0x20000278

08008808 <overlapping>:

uint8_t overlapping(int a){
 8008808:	b480      	push	{r7}
 800880a:	b085      	sub	sp, #20
 800880c:	af00      	add	r7, sp, #0
 800880e:	6078      	str	r0, [r7, #4]
	if (a == 1){
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	2b01      	cmp	r3, #1
 8008814:	d130      	bne.n	8008878 <overlapping+0x70>
		for(uint8_t i=0;i<snake.Long;i++)
 8008816:	2300      	movs	r3, #0
 8008818:	73fb      	strb	r3, [r7, #15]
 800881a:	e015      	b.n	8008848 <overlapping+0x40>
		{
			if(snake.X[i]==food.X &&snake.Y[i]==food.Y )//自身的任�??坐标值与蛇头坐标相等就认为是自身碰撞
 800881c:	7bfb      	ldrb	r3, [r7, #15]
 800881e:	4a32      	ldr	r2, [pc, #200]	; (80088e8 <overlapping+0xe0>)
 8008820:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008824:	4a31      	ldr	r2, [pc, #196]	; (80088ec <overlapping+0xe4>)
 8008826:	7812      	ldrb	r2, [r2, #0]
 8008828:	4293      	cmp	r3, r2
 800882a:	d10a      	bne.n	8008842 <overlapping+0x3a>
 800882c:	7bfb      	ldrb	r3, [r7, #15]
 800882e:	4a2e      	ldr	r2, [pc, #184]	; (80088e8 <overlapping+0xe0>)
 8008830:	3332      	adds	r3, #50	; 0x32
 8008832:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008836:	4a2d      	ldr	r2, [pc, #180]	; (80088ec <overlapping+0xe4>)
 8008838:	7852      	ldrb	r2, [r2, #1]
 800883a:	4293      	cmp	r3, r2
 800883c:	d101      	bne.n	8008842 <overlapping+0x3a>
				return 1;
 800883e:	2301      	movs	r3, #1
 8008840:	e04c      	b.n	80088dc <overlapping+0xd4>
		for(uint8_t i=0;i<snake.Long;i++)
 8008842:	7bfb      	ldrb	r3, [r7, #15]
 8008844:	3301      	adds	r3, #1
 8008846:	73fb      	strb	r3, [r7, #15]
 8008848:	4b27      	ldr	r3, [pc, #156]	; (80088e8 <overlapping+0xe0>)
 800884a:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800884e:	7bfa      	ldrb	r2, [r7, #15]
 8008850:	429a      	cmp	r2, r3
 8008852:	d3e3      	bcc.n	800881c <overlapping+0x14>
		}
		if(stone.state){
 8008854:	4b26      	ldr	r3, [pc, #152]	; (80088f0 <overlapping+0xe8>)
 8008856:	789b      	ldrb	r3, [r3, #2]
 8008858:	2b00      	cmp	r3, #0
 800885a:	d03e      	beq.n	80088da <overlapping+0xd2>
			if (food.X == stone.X && food.Y == stone.Y)
 800885c:	4b23      	ldr	r3, [pc, #140]	; (80088ec <overlapping+0xe4>)
 800885e:	781a      	ldrb	r2, [r3, #0]
 8008860:	4b23      	ldr	r3, [pc, #140]	; (80088f0 <overlapping+0xe8>)
 8008862:	781b      	ldrb	r3, [r3, #0]
 8008864:	429a      	cmp	r2, r3
 8008866:	d138      	bne.n	80088da <overlapping+0xd2>
 8008868:	4b20      	ldr	r3, [pc, #128]	; (80088ec <overlapping+0xe4>)
 800886a:	785a      	ldrb	r2, [r3, #1]
 800886c:	4b20      	ldr	r3, [pc, #128]	; (80088f0 <overlapping+0xe8>)
 800886e:	785b      	ldrb	r3, [r3, #1]
 8008870:	429a      	cmp	r2, r3
 8008872:	d132      	bne.n	80088da <overlapping+0xd2>
				return 1;
 8008874:	2301      	movs	r3, #1
 8008876:	e031      	b.n	80088dc <overlapping+0xd4>
		}

	}else
	{
		for(uint8_t i=0;i<snake.Long;i++)
 8008878:	2300      	movs	r3, #0
 800887a:	73bb      	strb	r3, [r7, #14]
 800887c:	e015      	b.n	80088aa <overlapping+0xa2>
		{
			if(snake.X[i]==stone.X &&snake.Y[i]==stone.Y)//自身的任�??坐标值与蛇头坐标相等就认为是自身碰撞
 800887e:	7bbb      	ldrb	r3, [r7, #14]
 8008880:	4a19      	ldr	r2, [pc, #100]	; (80088e8 <overlapping+0xe0>)
 8008882:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008886:	4a1a      	ldr	r2, [pc, #104]	; (80088f0 <overlapping+0xe8>)
 8008888:	7812      	ldrb	r2, [r2, #0]
 800888a:	4293      	cmp	r3, r2
 800888c:	d10a      	bne.n	80088a4 <overlapping+0x9c>
 800888e:	7bbb      	ldrb	r3, [r7, #14]
 8008890:	4a15      	ldr	r2, [pc, #84]	; (80088e8 <overlapping+0xe0>)
 8008892:	3332      	adds	r3, #50	; 0x32
 8008894:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008898:	4a15      	ldr	r2, [pc, #84]	; (80088f0 <overlapping+0xe8>)
 800889a:	7852      	ldrb	r2, [r2, #1]
 800889c:	4293      	cmp	r3, r2
 800889e:	d101      	bne.n	80088a4 <overlapping+0x9c>
				return 1;
 80088a0:	2301      	movs	r3, #1
 80088a2:	e01b      	b.n	80088dc <overlapping+0xd4>
		for(uint8_t i=0;i<snake.Long;i++)
 80088a4:	7bbb      	ldrb	r3, [r7, #14]
 80088a6:	3301      	adds	r3, #1
 80088a8:	73bb      	strb	r3, [r7, #14]
 80088aa:	4b0f      	ldr	r3, [pc, #60]	; (80088e8 <overlapping+0xe0>)
 80088ac:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 80088b0:	7bba      	ldrb	r2, [r7, #14]
 80088b2:	429a      	cmp	r2, r3
 80088b4:	d3e3      	bcc.n	800887e <overlapping+0x76>
		}
		if(food.state){
 80088b6:	4b0d      	ldr	r3, [pc, #52]	; (80088ec <overlapping+0xe4>)
 80088b8:	789b      	ldrb	r3, [r3, #2]
 80088ba:	2b00      	cmp	r3, #0
 80088bc:	d00d      	beq.n	80088da <overlapping+0xd2>
			if (food.X == stone.X && food.Y == stone.Y)
 80088be:	4b0b      	ldr	r3, [pc, #44]	; (80088ec <overlapping+0xe4>)
 80088c0:	781a      	ldrb	r2, [r3, #0]
 80088c2:	4b0b      	ldr	r3, [pc, #44]	; (80088f0 <overlapping+0xe8>)
 80088c4:	781b      	ldrb	r3, [r3, #0]
 80088c6:	429a      	cmp	r2, r3
 80088c8:	d107      	bne.n	80088da <overlapping+0xd2>
 80088ca:	4b08      	ldr	r3, [pc, #32]	; (80088ec <overlapping+0xe4>)
 80088cc:	785a      	ldrb	r2, [r3, #1]
 80088ce:	4b08      	ldr	r3, [pc, #32]	; (80088f0 <overlapping+0xe8>)
 80088d0:	785b      	ldrb	r3, [r3, #1]
 80088d2:	429a      	cmp	r2, r3
 80088d4:	d101      	bne.n	80088da <overlapping+0xd2>
				return 1;
 80088d6:	2301      	movs	r3, #1
 80088d8:	e000      	b.n	80088dc <overlapping+0xd4>
		}
	}
	return 0;
 80088da:	2300      	movs	r3, #0
}
 80088dc:	4618      	mov	r0, r3
 80088de:	3714      	adds	r7, #20
 80088e0:	46bd      	mov	sp, r7
 80088e2:	bc80      	pop	{r7}
 80088e4:	4770      	bx	lr
 80088e6:	bf00      	nop
 80088e8:	200000c0 	.word	0x200000c0
 80088ec:	200000b8 	.word	0x200000b8
 80088f0:	20000278 	.word	0x20000278

080088f4 <up>:

void up(){
 80088f4:	b580      	push	{r7, lr}
 80088f6:	af00      	add	r7, sp, #0
	showlevel();
 80088f8:	f000 fb92 	bl	8009020 <showlevel>
	HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 80088fc:	2104      	movs	r1, #4
 80088fe:	481b      	ldr	r0, [pc, #108]	; (800896c <up+0x78>)
 8008900:	f7f8 fc9c 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 8008904:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008908:	4819      	ldr	r0, [pc, #100]	; (8008970 <up+0x7c>)
 800890a:	f7f8 fc97 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_Delay(100);
 800890e:	2064      	movs	r0, #100	; 0x64
 8008910:	f7f8 f8da 	bl	8000ac8 <HAL_Delay>
	HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 8008914:	2104      	movs	r1, #4
 8008916:	4815      	ldr	r0, [pc, #84]	; (800896c <up+0x78>)
 8008918:	f7f8 fc90 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 800891c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008920:	4813      	ldr	r0, [pc, #76]	; (8008970 <up+0x7c>)
 8008922:	f7f8 fc8b 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_Delay(100);
 8008926:	2064      	movs	r0, #100	; 0x64
 8008928:	f7f8 f8ce 	bl	8000ac8 <HAL_Delay>
	HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 800892c:	2104      	movs	r1, #4
 800892e:	480f      	ldr	r0, [pc, #60]	; (800896c <up+0x78>)
 8008930:	f7f8 fc84 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 8008934:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008938:	480d      	ldr	r0, [pc, #52]	; (8008970 <up+0x7c>)
 800893a:	f7f8 fc7f 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_Delay(100);
 800893e:	2064      	movs	r0, #100	; 0x64
 8008940:	f7f8 f8c2 	bl	8000ac8 <HAL_Delay>
	HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 8008944:	2104      	movs	r1, #4
 8008946:	4809      	ldr	r0, [pc, #36]	; (800896c <up+0x78>)
 8008948:	f7f8 fc78 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 800894c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008950:	4807      	ldr	r0, [pc, #28]	; (8008970 <up+0x7c>)
 8008952:	f7f8 fc73 	bl	800123c <HAL_GPIO_TogglePin>
	HAL_Delay(100);
 8008956:	2064      	movs	r0, #100	; 0x64
 8008958:	f7f8 f8b6 	bl	8000ac8 <HAL_Delay>
	LCD_Clear(WHITE);
 800895c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008960:	f7ff f8ce 	bl	8007b00 <LCD_Clear>
	InitialPlane();
 8008964:	f000 f948 	bl	8008bf8 <InitialPlane>
}
 8008968:	bf00      	nop
 800896a:	bd80      	pop	{r7, pc}
 800896c:	40011400 	.word	0x40011400
 8008970:	40010800 	.word	0x40010800

08008974 <eat>:
//KEY1_Pin �? KEY2_Pin �? KEY_WK_Pin 暂停
//Direction 1�? 2�? 3�? 4�?


void eat(){
 8008974:	b580      	push	{r7, lr}
 8008976:	b082      	sub	sp, #8
 8008978:	af00      	add	r7, sp, #0
	if(snake.X[0]==food.X&&snake.Y[0]==food.Y)
 800897a:	4b3c      	ldr	r3, [pc, #240]	; (8008a6c <eat+0xf8>)
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	4a3c      	ldr	r2, [pc, #240]	; (8008a70 <eat+0xfc>)
 8008980:	7812      	ldrb	r2, [r2, #0]
 8008982:	4293      	cmp	r3, r2
 8008984:	d127      	bne.n	80089d6 <eat+0x62>
 8008986:	4b39      	ldr	r3, [pc, #228]	; (8008a6c <eat+0xf8>)
 8008988:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800898c:	4a38      	ldr	r2, [pc, #224]	; (8008a70 <eat+0xfc>)
 800898e:	7852      	ldrb	r2, [r2, #1]
 8008990:	4293      	cmp	r3, r2
 8008992:	d120      	bne.n	80089d6 <eat+0x62>
	{
		if(snake.Long < SNAKE_Max_Long)
 8008994:	4b35      	ldr	r3, [pc, #212]	; (8008a6c <eat+0xf8>)
 8008996:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800899a:	2b31      	cmp	r3, #49	; 0x31
 800899c:	d807      	bhi.n	80089ae <eat+0x3a>
			snake.Long++;//蛇的身体长一�??
 800899e:	4b33      	ldr	r3, [pc, #204]	; (8008a6c <eat+0xf8>)
 80089a0:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 80089a4:	3301      	adds	r3, #1
 80089a6:	b2da      	uxtb	r2, r3
 80089a8:	4b30      	ldr	r3, [pc, #192]	; (8008a6c <eat+0xf8>)
 80089aa:	f883 2190 	strb.w	r2, [r3, #400]	; 0x190
		game.Score += 10;
 80089ae:	4b31      	ldr	r3, [pc, #196]	; (8008a74 <eat+0x100>)
 80089b0:	681b      	ldr	r3, [r3, #0]
 80089b2:	330a      	adds	r3, #10
 80089b4:	4a2f      	ldr	r2, [pc, #188]	; (8008a74 <eat+0x100>)
 80089b6:	6013      	str	r3, [r2, #0]
		eating = 1;
 80089b8:	4b2f      	ldr	r3, [pc, #188]	; (8008a78 <eat+0x104>)
 80089ba:	2201      	movs	r2, #1
 80089bc:	701a      	strb	r2, [r3, #0]
		HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 80089be:	2104      	movs	r1, #4
 80089c0:	482e      	ldr	r0, [pc, #184]	; (8008a7c <eat+0x108>)
 80089c2:	f7f8 fc3b 	bl	800123c <HAL_GPIO_TogglePin>
		snake.color = food.color;
 80089c6:	4b2a      	ldr	r3, [pc, #168]	; (8008a70 <eat+0xfc>)
 80089c8:	889a      	ldrh	r2, [r3, #4]
 80089ca:	4b28      	ldr	r3, [pc, #160]	; (8008a6c <eat+0xf8>)
 80089cc:	f8a3 2192 	strh.w	r2, [r3, #402]	; 0x192
		food.state = 0;
 80089d0:	4b27      	ldr	r3, [pc, #156]	; (8008a70 <eat+0xfc>)
 80089d2:	2200      	movs	r2, #0
 80089d4:	709a      	strb	r2, [r3, #2]
	}
	if(snake.X[0]==stone.X && snake.Y[0]==stone.Y){
 80089d6:	4b25      	ldr	r3, [pc, #148]	; (8008a6c <eat+0xf8>)
 80089d8:	681b      	ldr	r3, [r3, #0]
 80089da:	4a29      	ldr	r2, [pc, #164]	; (8008a80 <eat+0x10c>)
 80089dc:	7812      	ldrb	r2, [r2, #0]
 80089de:	4293      	cmp	r3, r2
 80089e0:	d109      	bne.n	80089f6 <eat+0x82>
 80089e2:	4b22      	ldr	r3, [pc, #136]	; (8008a6c <eat+0xf8>)
 80089e4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80089e8:	4a25      	ldr	r2, [pc, #148]	; (8008a80 <eat+0x10c>)
 80089ea:	7852      	ldrb	r2, [r2, #1]
 80089ec:	4293      	cmp	r3, r2
 80089ee:	d102      	bne.n	80089f6 <eat+0x82>
		game.life = 0;
 80089f0:	4b20      	ldr	r3, [pc, #128]	; (8008a74 <eat+0x100>)
 80089f2:	2200      	movs	r2, #0
 80089f4:	721a      	strb	r2, [r3, #8]
	}
	//判断是否出界
	if(snake.X[0]<= 5 || snake.X[0] >= 235 || snake.Y[0]<= 35 || snake.Y[0] >= 315)
 80089f6:	4b1d      	ldr	r3, [pc, #116]	; (8008a6c <eat+0xf8>)
 80089f8:	681b      	ldr	r3, [r3, #0]
 80089fa:	2b05      	cmp	r3, #5
 80089fc:	dd0e      	ble.n	8008a1c <eat+0xa8>
 80089fe:	4b1b      	ldr	r3, [pc, #108]	; (8008a6c <eat+0xf8>)
 8008a00:	681b      	ldr	r3, [r3, #0]
 8008a02:	2bea      	cmp	r3, #234	; 0xea
 8008a04:	dc0a      	bgt.n	8008a1c <eat+0xa8>
 8008a06:	4b19      	ldr	r3, [pc, #100]	; (8008a6c <eat+0xf8>)
 8008a08:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8008a0c:	2b23      	cmp	r3, #35	; 0x23
 8008a0e:	dd05      	ble.n	8008a1c <eat+0xa8>
 8008a10:	4b16      	ldr	r3, [pc, #88]	; (8008a6c <eat+0xf8>)
 8008a12:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8008a16:	f5b3 7f9d 	cmp.w	r3, #314	; 0x13a
 8008a1a:	dd02      	ble.n	8008a22 <eat+0xae>
		game.life = 0;
 8008a1c:	4b15      	ldr	r3, [pc, #84]	; (8008a74 <eat+0x100>)
 8008a1e:	2200      	movs	r2, #0
 8008a20:	721a      	strb	r2, [r3, #8]

	//是否吃了自身
	for(uint8_t i=3;i<snake.Long;i++)
 8008a22:	2303      	movs	r3, #3
 8008a24:	71fb      	strb	r3, [r7, #7]
 8008a26:	e017      	b.n	8008a58 <eat+0xe4>
	{
		if(snake.X[i]==snake.X[0]&&snake.Y[i]==snake.Y[0])//自身的任�??坐标值与蛇头坐标相等就认为是自身碰撞
 8008a28:	79fb      	ldrb	r3, [r7, #7]
 8008a2a:	4a10      	ldr	r2, [pc, #64]	; (8008a6c <eat+0xf8>)
 8008a2c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008a30:	4b0e      	ldr	r3, [pc, #56]	; (8008a6c <eat+0xf8>)
 8008a32:	681b      	ldr	r3, [r3, #0]
 8008a34:	429a      	cmp	r2, r3
 8008a36:	d10c      	bne.n	8008a52 <eat+0xde>
 8008a38:	79fb      	ldrb	r3, [r7, #7]
 8008a3a:	4a0c      	ldr	r2, [pc, #48]	; (8008a6c <eat+0xf8>)
 8008a3c:	3332      	adds	r3, #50	; 0x32
 8008a3e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008a42:	4b0a      	ldr	r3, [pc, #40]	; (8008a6c <eat+0xf8>)
 8008a44:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8008a48:	429a      	cmp	r2, r3
 8008a4a:	d102      	bne.n	8008a52 <eat+0xde>
			game.life = 0;
 8008a4c:	4b09      	ldr	r3, [pc, #36]	; (8008a74 <eat+0x100>)
 8008a4e:	2200      	movs	r2, #0
 8008a50:	721a      	strb	r2, [r3, #8]
	for(uint8_t i=3;i<snake.Long;i++)
 8008a52:	79fb      	ldrb	r3, [r7, #7]
 8008a54:	3301      	adds	r3, #1
 8008a56:	71fb      	strb	r3, [r7, #7]
 8008a58:	4b04      	ldr	r3, [pc, #16]	; (8008a6c <eat+0xf8>)
 8008a5a:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 8008a5e:	79fa      	ldrb	r2, [r7, #7]
 8008a60:	429a      	cmp	r2, r3
 8008a62:	d3e1      	bcc.n	8008a28 <eat+0xb4>
	}

}
 8008a64:	bf00      	nop
 8008a66:	3708      	adds	r7, #8
 8008a68:	46bd      	mov	sp, r7
 8008a6a:	bd80      	pop	{r7, pc}
 8008a6c:	200000c0 	.word	0x200000c0
 8008a70:	200000b8 	.word	0x200000b8
 8008a74:	20000254 	.word	0x20000254
 8008a78:	20000096 	.word	0x20000096
 8008a7c:	40011400 	.word	0x40011400
 8008a80:	20000278 	.word	0x20000278

08008a84 <gameover>:

void gameover(){
 8008a84:	b580      	push	{r7, lr}
 8008a86:	af00      	add	r7, sp, #0
	HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 8008a88:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008a8c:	4807      	ldr	r0, [pc, #28]	; (8008aac <gameover+0x28>)
 8008a8e:	f7f8 fbd5 	bl	800123c <HAL_GPIO_TogglePin>
	showEnd();
 8008a92:	f000 f85d 	bl	8008b50 <showEnd>
	HAL_Delay(1000);
 8008a96:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8008a9a:	f7f8 f815 	bl	8000ac8 <HAL_Delay>
	HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
 8008a9e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008aa2:	4802      	ldr	r0, [pc, #8]	; (8008aac <gameover+0x28>)
 8008aa4:	f7f8 fbca 	bl	800123c <HAL_GPIO_TogglePin>
}
 8008aa8:	bf00      	nop
 8008aaa:	bd80      	pop	{r7, pc}
 8008aac:	40010800 	.word	0x40010800

08008ab0 <gameJudge>:

void gameJudge(){
 8008ab0:	b580      	push	{r7, lr}
 8008ab2:	af00      	add	r7, sp, #0
	if (game.level == 1 && game.Score > 20){
 8008ab4:	4b21      	ldr	r3, [pc, #132]	; (8008b3c <gameJudge+0x8c>)
 8008ab6:	685b      	ldr	r3, [r3, #4]
 8008ab8:	2b01      	cmp	r3, #1
 8008aba:	d108      	bne.n	8008ace <gameJudge+0x1e>
 8008abc:	4b1f      	ldr	r3, [pc, #124]	; (8008b3c <gameJudge+0x8c>)
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	2b14      	cmp	r3, #20
 8008ac2:	dd04      	ble.n	8008ace <gameJudge+0x1e>
		game.level = 2;
 8008ac4:	4b1d      	ldr	r3, [pc, #116]	; (8008b3c <gameJudge+0x8c>)
 8008ac6:	2202      	movs	r2, #2
 8008ac8:	605a      	str	r2, [r3, #4]
		up();
 8008aca:	f7ff ff13 	bl	80088f4 <up>
	}
	if (game.level == 2 && game.Score > 40){
 8008ace:	4b1b      	ldr	r3, [pc, #108]	; (8008b3c <gameJudge+0x8c>)
 8008ad0:	685b      	ldr	r3, [r3, #4]
 8008ad2:	2b02      	cmp	r3, #2
 8008ad4:	d108      	bne.n	8008ae8 <gameJudge+0x38>
 8008ad6:	4b19      	ldr	r3, [pc, #100]	; (8008b3c <gameJudge+0x8c>)
 8008ad8:	681b      	ldr	r3, [r3, #0]
 8008ada:	2b28      	cmp	r3, #40	; 0x28
 8008adc:	dd04      	ble.n	8008ae8 <gameJudge+0x38>
		game.level = 3;
 8008ade:	4b17      	ldr	r3, [pc, #92]	; (8008b3c <gameJudge+0x8c>)
 8008ae0:	2203      	movs	r2, #3
 8008ae2:	605a      	str	r2, [r3, #4]
		up();
 8008ae4:	f7ff ff06 	bl	80088f4 <up>
	}
	if (food.time > 100){
 8008ae8:	4b15      	ldr	r3, [pc, #84]	; (8008b40 <gameJudge+0x90>)
 8008aea:	78db      	ldrb	r3, [r3, #3]
 8008aec:	2b64      	cmp	r3, #100	; 0x64
 8008aee:	d90f      	bls.n	8008b10 <gameJudge+0x60>
		food.state = 0;
 8008af0:	4b13      	ldr	r3, [pc, #76]	; (8008b40 <gameJudge+0x90>)
 8008af2:	2200      	movs	r2, #0
 8008af4:	709a      	strb	r2, [r3, #2]
		f_delay = 3;
 8008af6:	4b13      	ldr	r3, [pc, #76]	; (8008b44 <gameJudge+0x94>)
 8008af8:	2203      	movs	r2, #3
 8008afa:	701a      	strb	r2, [r3, #0]
		showBlock(food.X, food.Y,WHITE);
 8008afc:	4b10      	ldr	r3, [pc, #64]	; (8008b40 <gameJudge+0x90>)
 8008afe:	781b      	ldrb	r3, [r3, #0]
 8008b00:	4618      	mov	r0, r3
 8008b02:	4b0f      	ldr	r3, [pc, #60]	; (8008b40 <gameJudge+0x90>)
 8008b04:	785b      	ldrb	r3, [r3, #1]
 8008b06:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008b0a:	4619      	mov	r1, r3
 8008b0c:	f000 f8f6 	bl	8008cfc <showBlock>
	}
	if (stone.time > 100){
 8008b10:	4b0d      	ldr	r3, [pc, #52]	; (8008b48 <gameJudge+0x98>)
 8008b12:	78db      	ldrb	r3, [r3, #3]
 8008b14:	2b64      	cmp	r3, #100	; 0x64
 8008b16:	d90f      	bls.n	8008b38 <gameJudge+0x88>
		stone.state = 0;
 8008b18:	4b0b      	ldr	r3, [pc, #44]	; (8008b48 <gameJudge+0x98>)
 8008b1a:	2200      	movs	r2, #0
 8008b1c:	709a      	strb	r2, [r3, #2]
		s_delay = 3;
 8008b1e:	4b0b      	ldr	r3, [pc, #44]	; (8008b4c <gameJudge+0x9c>)
 8008b20:	2203      	movs	r2, #3
 8008b22:	701a      	strb	r2, [r3, #0]
		showBlock(stone.X, stone.Y,WHITE);
 8008b24:	4b08      	ldr	r3, [pc, #32]	; (8008b48 <gameJudge+0x98>)
 8008b26:	781b      	ldrb	r3, [r3, #0]
 8008b28:	4618      	mov	r0, r3
 8008b2a:	4b07      	ldr	r3, [pc, #28]	; (8008b48 <gameJudge+0x98>)
 8008b2c:	785b      	ldrb	r3, [r3, #1]
 8008b2e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008b32:	4619      	mov	r1, r3
 8008b34:	f000 f8e2 	bl	8008cfc <showBlock>
	}
}
 8008b38:	bf00      	nop
 8008b3a:	bd80      	pop	{r7, pc}
 8008b3c:	20000254 	.word	0x20000254
 8008b40:	200000b8 	.word	0x200000b8
 8008b44:	20000260 	.word	0x20000260
 8008b48:	20000278 	.word	0x20000278
 8008b4c:	2000027e 	.word	0x2000027e

08008b50 <showEnd>:

void showEnd(){
 8008b50:	b580      	push	{r7, lr}
 8008b52:	b082      	sub	sp, #8
 8008b54:	af02      	add	r7, sp, #8
	LCD_Clear(BLACK);
 8008b56:	2000      	movs	r0, #0
 8008b58:	f7fe ffd2 	bl	8007b00 <LCD_Clear>
	LCD_Fill(0,0,8,280,DARKBLUE);
 8008b5c:	f240 13cf 	movw	r3, #463	; 0x1cf
 8008b60:	9300      	str	r3, [sp, #0]
 8008b62:	f44f 738c 	mov.w	r3, #280	; 0x118
 8008b66:	2208      	movs	r2, #8
 8008b68:	2100      	movs	r1, #0
 8008b6a:	2000      	movs	r0, #0
 8008b6c:	f7ff f82a 	bl	8007bc4 <LCD_Fill>
	LCD_Fill(232,0,240,280,DARKBLUE);
 8008b70:	f240 13cf 	movw	r3, #463	; 0x1cf
 8008b74:	9300      	str	r3, [sp, #0]
 8008b76:	f44f 738c 	mov.w	r3, #280	; 0x118
 8008b7a:	22f0      	movs	r2, #240	; 0xf0
 8008b7c:	2100      	movs	r1, #0
 8008b7e:	20e8      	movs	r0, #232	; 0xe8
 8008b80:	f7ff f820 	bl	8007bc4 <LCD_Fill>
	LCD_Fill(0,0,240,8,DARKBLUE);
 8008b84:	f240 13cf 	movw	r3, #463	; 0x1cf
 8008b88:	9300      	str	r3, [sp, #0]
 8008b8a:	2308      	movs	r3, #8
 8008b8c:	22f0      	movs	r2, #240	; 0xf0
 8008b8e:	2100      	movs	r1, #0
 8008b90:	2000      	movs	r0, #0
 8008b92:	f7ff f817 	bl	8007bc4 <LCD_Fill>
	LCD_Fill(0,272,240,280,DARKBLUE);
 8008b96:	f240 13cf 	movw	r3, #463	; 0x1cf
 8008b9a:	9300      	str	r3, [sp, #0]
 8008b9c:	f44f 738c 	mov.w	r3, #280	; 0x118
 8008ba0:	22f0      	movs	r2, #240	; 0xf0
 8008ba2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8008ba6:	2000      	movs	r0, #0
 8008ba8:	f7ff f80c 	bl	8007bc4 <LCD_Fill>
	LCD_ShowString(60,100,240,24,24,"GAME OVER! ");
 8008bac:	4b0f      	ldr	r3, [pc, #60]	; (8008bec <showEnd+0x9c>)
 8008bae:	9301      	str	r3, [sp, #4]
 8008bb0:	2318      	movs	r3, #24
 8008bb2:	9300      	str	r3, [sp, #0]
 8008bb4:	2318      	movs	r3, #24
 8008bb6:	22f0      	movs	r2, #240	; 0xf0
 8008bb8:	2164      	movs	r1, #100	; 0x64
 8008bba:	203c      	movs	r0, #60	; 0x3c
 8008bbc:	f7ff fa78 	bl	80080b0 <LCD_ShowString>
	LCD_ShowString(70,140,240,24,24,"score: ");
 8008bc0:	4b0b      	ldr	r3, [pc, #44]	; (8008bf0 <showEnd+0xa0>)
 8008bc2:	9301      	str	r3, [sp, #4]
 8008bc4:	2318      	movs	r3, #24
 8008bc6:	9300      	str	r3, [sp, #0]
 8008bc8:	2318      	movs	r3, #24
 8008bca:	22f0      	movs	r2, #240	; 0xf0
 8008bcc:	218c      	movs	r1, #140	; 0x8c
 8008bce:	2046      	movs	r0, #70	; 0x46
 8008bd0:	f7ff fa6e 	bl	80080b0 <LCD_ShowString>
	LCD_ShowNum (145,140,game.Score,3,24);
 8008bd4:	4b07      	ldr	r3, [pc, #28]	; (8008bf4 <showEnd+0xa4>)
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	461a      	mov	r2, r3
 8008bda:	2318      	movs	r3, #24
 8008bdc:	9300      	str	r3, [sp, #0]
 8008bde:	2303      	movs	r3, #3
 8008be0:	218c      	movs	r1, #140	; 0x8c
 8008be2:	2091      	movs	r0, #145	; 0x91
 8008be4:	f7ff f9f2 	bl	8007fcc <LCD_ShowNum>
	while(1){}
 8008be8:	e7fe      	b.n	8008be8 <showEnd+0x98>
 8008bea:	bf00      	nop
 8008bec:	08009570 	.word	0x08009570
 8008bf0:	0800957c 	.word	0x0800957c
 8008bf4:	20000254 	.word	0x20000254

08008bf8 <InitialPlane>:
}

void InitialPlane()
{
 8008bf8:	b580      	push	{r7, lr}
 8008bfa:	af00      	add	r7, sp, #0
	LCD_Set_Window(0, 0, 240, 320);
 8008bfc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008c00:	22f0      	movs	r2, #240	; 0xf0
 8008c02:	2100      	movs	r1, #0
 8008c04:	2000      	movs	r0, #0
 8008c06:	f7fa fd2b 	bl	8003660 <LCD_Set_Window>
	LCD_DrawRectangle(4, 34, 236, 316); // Draw a rectangle
 8008c0a:	f44f 739e 	mov.w	r3, #316	; 0x13c
 8008c0e:	22ec      	movs	r2, #236	; 0xec
 8008c10:	2122      	movs	r1, #34	; 0x22
 8008c12:	2004      	movs	r0, #4
 8008c14:	f7ff f8e5 	bl	8007de2 <LCD_DrawRectangle>
	LCD_DrawRectangle(2, 32, 238, 318);
 8008c18:	f44f 739f 	mov.w	r3, #318	; 0x13e
 8008c1c:	22ee      	movs	r2, #238	; 0xee
 8008c1e:	2120      	movs	r1, #32
 8008c20:	2002      	movs	r0, #2
 8008c22:	f7ff f8de 	bl	8007de2 <LCD_DrawRectangle>

	LCD_Fast_DrawPoint(2, 32, WHITE);
 8008c26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008c2a:	2120      	movs	r1, #32
 8008c2c:	2002      	movs	r0, #2
 8008c2e:	f7fa f8d1 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(2, 318, WHITE);
 8008c32:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008c36:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8008c3a:	2002      	movs	r0, #2
 8008c3c:	f7fa f8ca 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(238, 32, WHITE);
 8008c40:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008c44:	2120      	movs	r1, #32
 8008c46:	20ee      	movs	r0, #238	; 0xee
 8008c48:	f7fa f8c4 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(238, 318, WHITE);
 8008c4c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008c50:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8008c54:	20ee      	movs	r0, #238	; 0xee
 8008c56:	f7fa f8bd 	bl	8002dd4 <LCD_Fast_DrawPoint>
}
 8008c5a:	bf00      	nop
 8008c5c:	bd80      	pop	{r7, pc}
	...

08008c60 <showScore>:

void showScore()
{
 8008c60:	b580      	push	{r7, lr}
 8008c62:	b082      	sub	sp, #8
 8008c64:	af02      	add	r7, sp, #8

	LCD_ShowString(70,3,240,24,24,"SCORE: ");
 8008c66:	4b0b      	ldr	r3, [pc, #44]	; (8008c94 <showScore+0x34>)
 8008c68:	9301      	str	r3, [sp, #4]
 8008c6a:	2318      	movs	r3, #24
 8008c6c:	9300      	str	r3, [sp, #0]
 8008c6e:	2318      	movs	r3, #24
 8008c70:	22f0      	movs	r2, #240	; 0xf0
 8008c72:	2103      	movs	r1, #3
 8008c74:	2046      	movs	r0, #70	; 0x46
 8008c76:	f7ff fa1b 	bl	80080b0 <LCD_ShowString>
	LCD_ShowNum (145,3,game.Score,3,24);
 8008c7a:	4b07      	ldr	r3, [pc, #28]	; (8008c98 <showScore+0x38>)
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	461a      	mov	r2, r3
 8008c80:	2318      	movs	r3, #24
 8008c82:	9300      	str	r3, [sp, #0]
 8008c84:	2303      	movs	r3, #3
 8008c86:	2103      	movs	r1, #3
 8008c88:	2091      	movs	r0, #145	; 0x91
 8008c8a:	f7ff f99f 	bl	8007fcc <LCD_ShowNum>
}
 8008c8e:	bf00      	nop
 8008c90:	46bd      	mov	sp, r7
 8008c92:	bd80      	pop	{r7, pc}
 8008c94:	08009584 	.word	0x08009584
 8008c98:	20000254 	.word	0x20000254

08008c9c <showSnake>:

// 画出蛇的形状，两个数组分别为左上角的坐标，lenx是数组的长度通过sizeof(a)/sizeof(a[0]获得
void showSnake()
{
 8008c9c:	b580      	push	{r7, lr}
 8008c9e:	b082      	sub	sp, #8
 8008ca0:	af00      	add	r7, sp, #0
	int lenx = snake.Long;
 8008ca2:	4b15      	ldr	r3, [pc, #84]	; (8008cf8 <showSnake+0x5c>)
 8008ca4:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 8008ca8:	603b      	str	r3, [r7, #0]
	showBlock(snake.X[0], snake.Y[0],BLUE);
 8008caa:	4b13      	ldr	r3, [pc, #76]	; (8008cf8 <showSnake+0x5c>)
 8008cac:	6818      	ldr	r0, [r3, #0]
 8008cae:	4b12      	ldr	r3, [pc, #72]	; (8008cf8 <showSnake+0x5c>)
 8008cb0:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8008cb4:	221f      	movs	r2, #31
 8008cb6:	4619      	mov	r1, r3
 8008cb8:	f000 f820 	bl	8008cfc <showBlock>
	for (int i = 1; i < lenx; i++)
 8008cbc:	2301      	movs	r3, #1
 8008cbe:	607b      	str	r3, [r7, #4]
 8008cc0:	e011      	b.n	8008ce6 <showSnake+0x4a>
	{
		showBlock(snake.X[i], snake.Y[i],snake.color);
 8008cc2:	4a0d      	ldr	r2, [pc, #52]	; (8008cf8 <showSnake+0x5c>)
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8008cca:	4a0b      	ldr	r2, [pc, #44]	; (8008cf8 <showSnake+0x5c>)
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	3332      	adds	r3, #50	; 0x32
 8008cd0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8008cd4:	4b08      	ldr	r3, [pc, #32]	; (8008cf8 <showSnake+0x5c>)
 8008cd6:	f8b3 3192 	ldrh.w	r3, [r3, #402]	; 0x192
 8008cda:	461a      	mov	r2, r3
 8008cdc:	f000 f80e 	bl	8008cfc <showBlock>
	for (int i = 1; i < lenx; i++)
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	3301      	adds	r3, #1
 8008ce4:	607b      	str	r3, [r7, #4]
 8008ce6:	687a      	ldr	r2, [r7, #4]
 8008ce8:	683b      	ldr	r3, [r7, #0]
 8008cea:	429a      	cmp	r2, r3
 8008cec:	dbe9      	blt.n	8008cc2 <showSnake+0x26>
	}
}
 8008cee:	bf00      	nop
 8008cf0:	3708      	adds	r7, #8
 8008cf2:	46bd      	mov	sp, r7
 8008cf4:	bd80      	pop	{r7, pc}
 8008cf6:	bf00      	nop
 8008cf8:	200000c0 	.word	0x200000c0

08008cfc <showBlock>:

// 画出�?/食物/石头的每个节点， color是每个节点的颜色
void showBlock(int x, int y, uint16_t color)
{
 8008cfc:	b580      	push	{r7, lr}
 8008cfe:	b086      	sub	sp, #24
 8008d00:	af00      	add	r7, sp, #0
 8008d02:	60f8      	str	r0, [r7, #12]
 8008d04:	60b9      	str	r1, [r7, #8]
 8008d06:	4613      	mov	r3, r2
 8008d08:	80fb      	strh	r3, [r7, #6]
	for (int i = 0; i < 10; i++)
 8008d0a:	2300      	movs	r3, #0
 8008d0c:	617b      	str	r3, [r7, #20]
 8008d0e:	e01b      	b.n	8008d48 <showBlock+0x4c>
	{
		for (int j = 0; j < 10; j++)
 8008d10:	2300      	movs	r3, #0
 8008d12:	613b      	str	r3, [r7, #16]
 8008d14:	e012      	b.n	8008d3c <showBlock+0x40>
		{
			LCD_Fast_DrawPoint(x + i, y + j, color);
 8008d16:	68fb      	ldr	r3, [r7, #12]
 8008d18:	b29a      	uxth	r2, r3
 8008d1a:	697b      	ldr	r3, [r7, #20]
 8008d1c:	b29b      	uxth	r3, r3
 8008d1e:	4413      	add	r3, r2
 8008d20:	b298      	uxth	r0, r3
 8008d22:	68bb      	ldr	r3, [r7, #8]
 8008d24:	b29a      	uxth	r2, r3
 8008d26:	693b      	ldr	r3, [r7, #16]
 8008d28:	b29b      	uxth	r3, r3
 8008d2a:	4413      	add	r3, r2
 8008d2c:	b29b      	uxth	r3, r3
 8008d2e:	88fa      	ldrh	r2, [r7, #6]
 8008d30:	4619      	mov	r1, r3
 8008d32:	f7fa f84f 	bl	8002dd4 <LCD_Fast_DrawPoint>
		for (int j = 0; j < 10; j++)
 8008d36:	693b      	ldr	r3, [r7, #16]
 8008d38:	3301      	adds	r3, #1
 8008d3a:	613b      	str	r3, [r7, #16]
 8008d3c:	693b      	ldr	r3, [r7, #16]
 8008d3e:	2b09      	cmp	r3, #9
 8008d40:	dde9      	ble.n	8008d16 <showBlock+0x1a>
	for (int i = 0; i < 10; i++)
 8008d42:	697b      	ldr	r3, [r7, #20]
 8008d44:	3301      	adds	r3, #1
 8008d46:	617b      	str	r3, [r7, #20]
 8008d48:	697b      	ldr	r3, [r7, #20]
 8008d4a:	2b09      	cmp	r3, #9
 8008d4c:	dde0      	ble.n	8008d10 <showBlock+0x14>
		}
	}
	//与背景颜色相同即可
	LCD_Fast_DrawPoint(x + 4, y + 4, WHITE);
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	b29b      	uxth	r3, r3
 8008d52:	3304      	adds	r3, #4
 8008d54:	b298      	uxth	r0, r3
 8008d56:	68bb      	ldr	r3, [r7, #8]
 8008d58:	b29b      	uxth	r3, r3
 8008d5a:	3304      	adds	r3, #4
 8008d5c:	b29b      	uxth	r3, r3
 8008d5e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008d62:	4619      	mov	r1, r3
 8008d64:	f7fa f836 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 4, y + 5, WHITE);
 8008d68:	68fb      	ldr	r3, [r7, #12]
 8008d6a:	b29b      	uxth	r3, r3
 8008d6c:	3304      	adds	r3, #4
 8008d6e:	b298      	uxth	r0, r3
 8008d70:	68bb      	ldr	r3, [r7, #8]
 8008d72:	b29b      	uxth	r3, r3
 8008d74:	3305      	adds	r3, #5
 8008d76:	b29b      	uxth	r3, r3
 8008d78:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008d7c:	4619      	mov	r1, r3
 8008d7e:	f7fa f829 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 5, y + 4, WHITE);
 8008d82:	68fb      	ldr	r3, [r7, #12]
 8008d84:	b29b      	uxth	r3, r3
 8008d86:	3305      	adds	r3, #5
 8008d88:	b298      	uxth	r0, r3
 8008d8a:	68bb      	ldr	r3, [r7, #8]
 8008d8c:	b29b      	uxth	r3, r3
 8008d8e:	3304      	adds	r3, #4
 8008d90:	b29b      	uxth	r3, r3
 8008d92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008d96:	4619      	mov	r1, r3
 8008d98:	f7fa f81c 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 5, y + 5, WHITE);
 8008d9c:	68fb      	ldr	r3, [r7, #12]
 8008d9e:	b29b      	uxth	r3, r3
 8008da0:	3305      	adds	r3, #5
 8008da2:	b298      	uxth	r0, r3
 8008da4:	68bb      	ldr	r3, [r7, #8]
 8008da6:	b29b      	uxth	r3, r3
 8008da8:	3305      	adds	r3, #5
 8008daa:	b29b      	uxth	r3, r3
 8008dac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008db0:	4619      	mov	r1, r3
 8008db2:	f7fa f80f 	bl	8002dd4 <LCD_Fast_DrawPoint>

	LCD_Fast_DrawPoint(x, y, WHITE);
 8008db6:	68fb      	ldr	r3, [r7, #12]
 8008db8:	b29b      	uxth	r3, r3
 8008dba:	68ba      	ldr	r2, [r7, #8]
 8008dbc:	b291      	uxth	r1, r2
 8008dbe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008dc2:	4618      	mov	r0, r3
 8008dc4:	f7fa f806 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 1, y, WHITE);
 8008dc8:	68fb      	ldr	r3, [r7, #12]
 8008dca:	b29b      	uxth	r3, r3
 8008dcc:	3301      	adds	r3, #1
 8008dce:	b29b      	uxth	r3, r3
 8008dd0:	68ba      	ldr	r2, [r7, #8]
 8008dd2:	b291      	uxth	r1, r2
 8008dd4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008dd8:	4618      	mov	r0, r3
 8008dda:	f7f9 fffb 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x, y + 1, WHITE);
 8008dde:	68fb      	ldr	r3, [r7, #12]
 8008de0:	b298      	uxth	r0, r3
 8008de2:	68bb      	ldr	r3, [r7, #8]
 8008de4:	b29b      	uxth	r3, r3
 8008de6:	3301      	adds	r3, #1
 8008de8:	b29b      	uxth	r3, r3
 8008dea:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008dee:	4619      	mov	r1, r3
 8008df0:	f7f9 fff0 	bl	8002dd4 <LCD_Fast_DrawPoint>

	LCD_Fast_DrawPoint(x + 9, y, WHITE);
 8008df4:	68fb      	ldr	r3, [r7, #12]
 8008df6:	b29b      	uxth	r3, r3
 8008df8:	3309      	adds	r3, #9
 8008dfa:	b29b      	uxth	r3, r3
 8008dfc:	68ba      	ldr	r2, [r7, #8]
 8008dfe:	b291      	uxth	r1, r2
 8008e00:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e04:	4618      	mov	r0, r3
 8008e06:	f7f9 ffe5 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 9, y, WHITE);
 8008e0a:	68fb      	ldr	r3, [r7, #12]
 8008e0c:	b29b      	uxth	r3, r3
 8008e0e:	3309      	adds	r3, #9
 8008e10:	b29b      	uxth	r3, r3
 8008e12:	68ba      	ldr	r2, [r7, #8]
 8008e14:	b291      	uxth	r1, r2
 8008e16:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e1a:	4618      	mov	r0, r3
 8008e1c:	f7f9 ffda 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 9, y + 1, WHITE);
 8008e20:	68fb      	ldr	r3, [r7, #12]
 8008e22:	b29b      	uxth	r3, r3
 8008e24:	3309      	adds	r3, #9
 8008e26:	b298      	uxth	r0, r3
 8008e28:	68bb      	ldr	r3, [r7, #8]
 8008e2a:	b29b      	uxth	r3, r3
 8008e2c:	3301      	adds	r3, #1
 8008e2e:	b29b      	uxth	r3, r3
 8008e30:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e34:	4619      	mov	r1, r3
 8008e36:	f7f9 ffcd 	bl	8002dd4 <LCD_Fast_DrawPoint>

	LCD_Fast_DrawPoint(x, y + 9, WHITE);
 8008e3a:	68fb      	ldr	r3, [r7, #12]
 8008e3c:	b298      	uxth	r0, r3
 8008e3e:	68bb      	ldr	r3, [r7, #8]
 8008e40:	b29b      	uxth	r3, r3
 8008e42:	3309      	adds	r3, #9
 8008e44:	b29b      	uxth	r3, r3
 8008e46:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e4a:	4619      	mov	r1, r3
 8008e4c:	f7f9 ffc2 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x, y + 8, WHITE);
 8008e50:	68fb      	ldr	r3, [r7, #12]
 8008e52:	b298      	uxth	r0, r3
 8008e54:	68bb      	ldr	r3, [r7, #8]
 8008e56:	b29b      	uxth	r3, r3
 8008e58:	3308      	adds	r3, #8
 8008e5a:	b29b      	uxth	r3, r3
 8008e5c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e60:	4619      	mov	r1, r3
 8008e62:	f7f9 ffb7 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 1, y + 9, WHITE);
 8008e66:	68fb      	ldr	r3, [r7, #12]
 8008e68:	b29b      	uxth	r3, r3
 8008e6a:	3301      	adds	r3, #1
 8008e6c:	b298      	uxth	r0, r3
 8008e6e:	68bb      	ldr	r3, [r7, #8]
 8008e70:	b29b      	uxth	r3, r3
 8008e72:	3309      	adds	r3, #9
 8008e74:	b29b      	uxth	r3, r3
 8008e76:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e7a:	4619      	mov	r1, r3
 8008e7c:	f7f9 ffaa 	bl	8002dd4 <LCD_Fast_DrawPoint>

	LCD_Fast_DrawPoint(x + 9, y + 9, WHITE);
 8008e80:	68fb      	ldr	r3, [r7, #12]
 8008e82:	b29b      	uxth	r3, r3
 8008e84:	3309      	adds	r3, #9
 8008e86:	b298      	uxth	r0, r3
 8008e88:	68bb      	ldr	r3, [r7, #8]
 8008e8a:	b29b      	uxth	r3, r3
 8008e8c:	3309      	adds	r3, #9
 8008e8e:	b29b      	uxth	r3, r3
 8008e90:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e94:	4619      	mov	r1, r3
 8008e96:	f7f9 ff9d 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 8, y + 9, WHITE);
 8008e9a:	68fb      	ldr	r3, [r7, #12]
 8008e9c:	b29b      	uxth	r3, r3
 8008e9e:	3308      	adds	r3, #8
 8008ea0:	b298      	uxth	r0, r3
 8008ea2:	68bb      	ldr	r3, [r7, #8]
 8008ea4:	b29b      	uxth	r3, r3
 8008ea6:	3309      	adds	r3, #9
 8008ea8:	b29b      	uxth	r3, r3
 8008eaa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008eae:	4619      	mov	r1, r3
 8008eb0:	f7f9 ff90 	bl	8002dd4 <LCD_Fast_DrawPoint>
	LCD_Fast_DrawPoint(x + 9, y + 8, WHITE);
 8008eb4:	68fb      	ldr	r3, [r7, #12]
 8008eb6:	b29b      	uxth	r3, r3
 8008eb8:	3309      	adds	r3, #9
 8008eba:	b298      	uxth	r0, r3
 8008ebc:	68bb      	ldr	r3, [r7, #8]
 8008ebe:	b29b      	uxth	r3, r3
 8008ec0:	3308      	adds	r3, #8
 8008ec2:	b29b      	uxth	r3, r3
 8008ec4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008ec8:	4619      	mov	r1, r3
 8008eca:	f7f9 ff83 	bl	8002dd4 <LCD_Fast_DrawPoint>
}
 8008ece:	bf00      	nop
 8008ed0:	3718      	adds	r7, #24
 8008ed2:	46bd      	mov	sp, r7
 8008ed4:	bd80      	pop	{r7, pc}
	...

08008ed8 <randomColor>:


uint16_t randomColor()
{
 8008ed8:	b480      	push	{r7}
 8008eda:	af00      	add	r7, sp, #0
	colorCount = (colorCount+1)%10;
 8008edc:	4b26      	ldr	r3, [pc, #152]	; (8008f78 <randomColor+0xa0>)
 8008ede:	681b      	ldr	r3, [r3, #0]
 8008ee0:	1c59      	adds	r1, r3, #1
 8008ee2:	4b26      	ldr	r3, [pc, #152]	; (8008f7c <randomColor+0xa4>)
 8008ee4:	fb83 2301 	smull	r2, r3, r3, r1
 8008ee8:	109a      	asrs	r2, r3, #2
 8008eea:	17cb      	asrs	r3, r1, #31
 8008eec:	1ad2      	subs	r2, r2, r3
 8008eee:	4613      	mov	r3, r2
 8008ef0:	009b      	lsls	r3, r3, #2
 8008ef2:	4413      	add	r3, r2
 8008ef4:	005b      	lsls	r3, r3, #1
 8008ef6:	1aca      	subs	r2, r1, r3
 8008ef8:	4b1f      	ldr	r3, [pc, #124]	; (8008f78 <randomColor+0xa0>)
 8008efa:	601a      	str	r2, [r3, #0]
	switch (colorCount)
 8008efc:	4b1e      	ldr	r3, [pc, #120]	; (8008f78 <randomColor+0xa0>)
 8008efe:	681b      	ldr	r3, [r3, #0]
 8008f00:	2b09      	cmp	r3, #9
 8008f02:	d835      	bhi.n	8008f70 <randomColor+0x98>
 8008f04:	a201      	add	r2, pc, #4	; (adr r2, 8008f0c <randomColor+0x34>)
 8008f06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f0a:	bf00      	nop
 8008f0c:	08008f35 	.word	0x08008f35
 8008f10:	08008f3b 	.word	0x08008f3b
 8008f14:	08008f41 	.word	0x08008f41
 8008f18:	08008f47 	.word	0x08008f47
 8008f1c:	08008f4d 	.word	0x08008f4d
 8008f20:	08008f53 	.word	0x08008f53
 8008f24:	08008f59 	.word	0x08008f59
 8008f28:	08008f5f 	.word	0x08008f5f
 8008f2c:	08008f65 	.word	0x08008f65
 8008f30:	08008f6b 	.word	0x08008f6b
	{
	case 0:
		return GREEN;
 8008f34:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 8008f38:	e01a      	b.n	8008f70 <randomColor+0x98>
	case 1:
		return YELLOW;
 8008f3a:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8008f3e:	e017      	b.n	8008f70 <randomColor+0x98>
	case 2:
		return BROWN;
 8008f40:	f64b 4340 	movw	r3, #48192	; 0xbc40
 8008f44:	e014      	b.n	8008f70 <randomColor+0x98>
	case 3:
		return BRRED;
 8008f46:	f64f 4307 	movw	r3, #64519	; 0xfc07
 8008f4a:	e011      	b.n	8008f70 <randomColor+0x98>
	case 4:
		return GRAY;
 8008f4c:	f248 4330 	movw	r3, #33840	; 0x8430
 8008f50:	e00e      	b.n	8008f70 <randomColor+0x98>
	case 5:
		return RED;
 8008f52:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8008f56:	e00b      	b.n	8008f70 <randomColor+0x98>
	case 6:
		return LIGHTGREEN;
 8008f58:	f248 431f 	movw	r3, #33823	; 0x841f
 8008f5c:	e008      	b.n	8008f70 <randomColor+0x98>
	case 7:
		return DARKBLUE;
 8008f5e:	f240 13cf 	movw	r3, #463	; 0x1cf
 8008f62:	e005      	b.n	8008f70 <randomColor+0x98>
	case 8:
		return GRAYBLUE;
 8008f64:	f245 4358 	movw	r3, #21592	; 0x5458
 8008f68:	e002      	b.n	8008f70 <randomColor+0x98>
	case 9:
		return  LGRAYBLUE;
 8008f6a:	f24a 6351 	movw	r3, #42577	; 0xa651
 8008f6e:	e7ff      	b.n	8008f70 <randomColor+0x98>
	}
}
 8008f70:	4618      	mov	r0, r3
 8008f72:	46bd      	mov	sp, r7
 8008f74:	bc80      	pop	{r7}
 8008f76:	4770      	bx	lr
 8008f78:	2000000c 	.word	0x2000000c
 8008f7c:	66666667 	.word	0x66666667

08008f80 <lcd_DrawPicture>:

void lcd_DrawPicture(uint8_t *pic)
{
 8008f80:	b580      	push	{r7, lr}
 8008f82:	b086      	sub	sp, #24
 8008f84:	af00      	add	r7, sp, #0
 8008f86:	6078      	str	r0, [r7, #4]
	uint32_t i = 8;
 8008f88:	2308      	movs	r3, #8
 8008f8a:	617b      	str	r3, [r7, #20]
	uint16_t temp;
	uint32_t index = 0;
 8008f8c:	2300      	movs	r3, #0
 8008f8e:	613b      	str	r3, [r7, #16]
	uint32_t totalpoint = 240;
 8008f90:	23f0      	movs	r3, #240	; 0xf0
 8008f92:	60fb      	str	r3, [r7, #12]
	totalpoint *= 320;			 //得到总点数
 8008f94:	68fa      	ldr	r2, [r7, #12]
 8008f96:	4613      	mov	r3, r2
 8008f98:	009b      	lsls	r3, r3, #2
 8008f9a:	4413      	add	r3, r2
 8008f9c:	019b      	lsls	r3, r3, #6
 8008f9e:	60fb      	str	r3, [r7, #12]
	LCD_SetCursor(0x00, 0x0000); //设置光标位置
 8008fa0:	2100      	movs	r1, #0
 8008fa2:	2000      	movs	r0, #0
 8008fa4:	f7f9 f908 	bl	80021b8 <LCD_SetCursor>
	LCD_WriteRAM_Prepare();		 //开始写入GRAM
 8008fa8:	f7f9 f8fa 	bl	80021a0 <LCD_WriteRAM_Prepare>
	for (index = 0; index < totalpoint; index++)
 8008fac:	2300      	movs	r3, #0
 8008fae:	613b      	str	r3, [r7, #16]
 8008fb0:	e029      	b.n	8009006 <lcd_DrawPicture+0x86>
	{
		temp = (uint16_t)(pic[i] << 8) + pic[i + 1]; //16位总线， 须要一次发送2个字节的数据
 8008fb2:	687a      	ldr	r2, [r7, #4]
 8008fb4:	697b      	ldr	r3, [r7, #20]
 8008fb6:	4413      	add	r3, r2
 8008fb8:	781b      	ldrb	r3, [r3, #0]
 8008fba:	b29b      	uxth	r3, r3
 8008fbc:	021b      	lsls	r3, r3, #8
 8008fbe:	b29a      	uxth	r2, r3
 8008fc0:	697b      	ldr	r3, [r7, #20]
 8008fc2:	3301      	adds	r3, #1
 8008fc4:	6879      	ldr	r1, [r7, #4]
 8008fc6:	440b      	add	r3, r1
 8008fc8:	781b      	ldrb	r3, [r3, #0]
 8008fca:	b29b      	uxth	r3, r3
 8008fcc:	4413      	add	r3, r2
 8008fce:	817b      	strh	r3, [r7, #10]
		LCD_WR_DATA(temp);							 //将取出的16位像素数据送入显示区
 8008fd0:	4b11      	ldr	r3, [pc, #68]	; (8009018 <lcd_DrawPicture+0x98>)
 8008fd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008fd6:	611a      	str	r2, [r3, #16]
 8008fd8:	4b0f      	ldr	r3, [pc, #60]	; (8009018 <lcd_DrawPicture+0x98>)
 8008fda:	f44f 7200 	mov.w	r2, #512	; 0x200
 8008fde:	615a      	str	r2, [r3, #20]
 8008fe0:	4a0e      	ldr	r2, [pc, #56]	; (800901c <lcd_DrawPicture+0x9c>)
 8008fe2:	897b      	ldrh	r3, [r7, #10]
 8008fe4:	60d3      	str	r3, [r2, #12]
 8008fe6:	4b0c      	ldr	r3, [pc, #48]	; (8009018 <lcd_DrawPicture+0x98>)
 8008fe8:	2280      	movs	r2, #128	; 0x80
 8008fea:	615a      	str	r2, [r3, #20]
 8008fec:	4b0a      	ldr	r3, [pc, #40]	; (8009018 <lcd_DrawPicture+0x98>)
 8008fee:	2280      	movs	r2, #128	; 0x80
 8008ff0:	611a      	str	r2, [r3, #16]
 8008ff2:	4b09      	ldr	r3, [pc, #36]	; (8009018 <lcd_DrawPicture+0x98>)
 8008ff4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8008ff8:	611a      	str	r2, [r3, #16]
		i = i + 2;									 //取模位置加2，以为获取下一个像素数据
 8008ffa:	697b      	ldr	r3, [r7, #20]
 8008ffc:	3302      	adds	r3, #2
 8008ffe:	617b      	str	r3, [r7, #20]
	for (index = 0; index < totalpoint; index++)
 8009000:	693b      	ldr	r3, [r7, #16]
 8009002:	3301      	adds	r3, #1
 8009004:	613b      	str	r3, [r7, #16]
 8009006:	693a      	ldr	r2, [r7, #16]
 8009008:	68fb      	ldr	r3, [r7, #12]
 800900a:	429a      	cmp	r2, r3
 800900c:	d3d1      	bcc.n	8008fb2 <lcd_DrawPicture+0x32>
	}
}
 800900e:	bf00      	nop
 8009010:	3718      	adds	r7, #24
 8009012:	46bd      	mov	sp, r7
 8009014:	bd80      	pop	{r7, pc}
 8009016:	bf00      	nop
 8009018:	40011000 	.word	0x40011000
 800901c:	40010c00 	.word	0x40010c00

08009020 <showlevel>:

void showlevel(){
 8009020:	b580      	push	{r7, lr}
 8009022:	b082      	sub	sp, #8
 8009024:	af02      	add	r7, sp, #8
    LCD_Clear(BLACK);
 8009026:	2000      	movs	r0, #0
 8009028:	f7fe fd6a 	bl	8007b00 <LCD_Clear>
    LCD_Fill(0,0,8,280,DARKBLUE);
 800902c:	f240 13cf 	movw	r3, #463	; 0x1cf
 8009030:	9300      	str	r3, [sp, #0]
 8009032:	f44f 738c 	mov.w	r3, #280	; 0x118
 8009036:	2208      	movs	r2, #8
 8009038:	2100      	movs	r1, #0
 800903a:	2000      	movs	r0, #0
 800903c:	f7fe fdc2 	bl	8007bc4 <LCD_Fill>
    LCD_Fill(232,0,240,280,DARKBLUE);
 8009040:	f240 13cf 	movw	r3, #463	; 0x1cf
 8009044:	9300      	str	r3, [sp, #0]
 8009046:	f44f 738c 	mov.w	r3, #280	; 0x118
 800904a:	22f0      	movs	r2, #240	; 0xf0
 800904c:	2100      	movs	r1, #0
 800904e:	20e8      	movs	r0, #232	; 0xe8
 8009050:	f7fe fdb8 	bl	8007bc4 <LCD_Fill>
    LCD_Fill(0,0,240,8,DARKBLUE);
 8009054:	f240 13cf 	movw	r3, #463	; 0x1cf
 8009058:	9300      	str	r3, [sp, #0]
 800905a:	2308      	movs	r3, #8
 800905c:	22f0      	movs	r2, #240	; 0xf0
 800905e:	2100      	movs	r1, #0
 8009060:	2000      	movs	r0, #0
 8009062:	f7fe fdaf 	bl	8007bc4 <LCD_Fill>
    LCD_Fill(0,272,240,280,DARKBLUE);
 8009066:	f240 13cf 	movw	r3, #463	; 0x1cf
 800906a:	9300      	str	r3, [sp, #0]
 800906c:	f44f 738c 	mov.w	r3, #280	; 0x118
 8009070:	22f0      	movs	r2, #240	; 0xf0
 8009072:	f44f 7188 	mov.w	r1, #272	; 0x110
 8009076:	2000      	movs	r0, #0
 8009078:	f7fe fda4 	bl	8007bc4 <LCD_Fill>
    LCD_ShowString(60,100,240,24,24,"Hello! ");
 800907c:	4b10      	ldr	r3, [pc, #64]	; (80090c0 <showlevel+0xa0>)
 800907e:	9301      	str	r3, [sp, #4]
 8009080:	2318      	movs	r3, #24
 8009082:	9300      	str	r3, [sp, #0]
 8009084:	2318      	movs	r3, #24
 8009086:	22f0      	movs	r2, #240	; 0xf0
 8009088:	2164      	movs	r1, #100	; 0x64
 800908a:	203c      	movs	r0, #60	; 0x3c
 800908c:	f7ff f810 	bl	80080b0 <LCD_ShowString>
    LCD_ShowString(70,140,240,24,24,"Round: ");
 8009090:	4b0c      	ldr	r3, [pc, #48]	; (80090c4 <showlevel+0xa4>)
 8009092:	9301      	str	r3, [sp, #4]
 8009094:	2318      	movs	r3, #24
 8009096:	9300      	str	r3, [sp, #0]
 8009098:	2318      	movs	r3, #24
 800909a:	22f0      	movs	r2, #240	; 0xf0
 800909c:	218c      	movs	r1, #140	; 0x8c
 800909e:	2046      	movs	r0, #70	; 0x46
 80090a0:	f7ff f806 	bl	80080b0 <LCD_ShowString>
    LCD_ShowNum (145,140,game.level,3,24);
 80090a4:	4b08      	ldr	r3, [pc, #32]	; (80090c8 <showlevel+0xa8>)
 80090a6:	685b      	ldr	r3, [r3, #4]
 80090a8:	461a      	mov	r2, r3
 80090aa:	2318      	movs	r3, #24
 80090ac:	9300      	str	r3, [sp, #0]
 80090ae:	2303      	movs	r3, #3
 80090b0:	218c      	movs	r1, #140	; 0x8c
 80090b2:	2091      	movs	r0, #145	; 0x91
 80090b4:	f7fe ff8a 	bl	8007fcc <LCD_ShowNum>
}
 80090b8:	bf00      	nop
 80090ba:	46bd      	mov	sp, r7
 80090bc:	bd80      	pop	{r7, pc}
 80090be:	bf00      	nop
 80090c0:	0800958c 	.word	0x0800958c
 80090c4:	08009594 	.word	0x08009594
 80090c8:	20000254 	.word	0x20000254

080090cc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80090cc:	b480      	push	{r7}
 80090ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80090d0:	bf00      	nop
 80090d2:	46bd      	mov	sp, r7
 80090d4:	bc80      	pop	{r7}
 80090d6:	4770      	bx	lr

080090d8 <HAL_MspInit>:
 80090d8:	b580      	push	{r7, lr}
 80090da:	b084      	sub	sp, #16
 80090dc:	af00      	add	r7, sp, #0
 80090de:	4b16      	ldr	r3, [pc, #88]	; (8009138 <HAL_MspInit+0x60>)
 80090e0:	699b      	ldr	r3, [r3, #24]
 80090e2:	4a15      	ldr	r2, [pc, #84]	; (8009138 <HAL_MspInit+0x60>)
 80090e4:	f043 0301 	orr.w	r3, r3, #1
 80090e8:	6193      	str	r3, [r2, #24]
 80090ea:	4b13      	ldr	r3, [pc, #76]	; (8009138 <HAL_MspInit+0x60>)
 80090ec:	699b      	ldr	r3, [r3, #24]
 80090ee:	f003 0301 	and.w	r3, r3, #1
 80090f2:	60bb      	str	r3, [r7, #8]
 80090f4:	68bb      	ldr	r3, [r7, #8]
 80090f6:	4b10      	ldr	r3, [pc, #64]	; (8009138 <HAL_MspInit+0x60>)
 80090f8:	69db      	ldr	r3, [r3, #28]
 80090fa:	4a0f      	ldr	r2, [pc, #60]	; (8009138 <HAL_MspInit+0x60>)
 80090fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009100:	61d3      	str	r3, [r2, #28]
 8009102:	4b0d      	ldr	r3, [pc, #52]	; (8009138 <HAL_MspInit+0x60>)
 8009104:	69db      	ldr	r3, [r3, #28]
 8009106:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800910a:	607b      	str	r3, [r7, #4]
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	2005      	movs	r0, #5
 8009110:	f7f7 fdc8 	bl	8000ca4 <HAL_NVIC_SetPriorityGrouping>
 8009114:	4b09      	ldr	r3, [pc, #36]	; (800913c <HAL_MspInit+0x64>)
 8009116:	685b      	ldr	r3, [r3, #4]
 8009118:	60fb      	str	r3, [r7, #12]
 800911a:	68fb      	ldr	r3, [r7, #12]
 800911c:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8009120:	60fb      	str	r3, [r7, #12]
 8009122:	68fb      	ldr	r3, [r7, #12]
 8009124:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8009128:	60fb      	str	r3, [r7, #12]
 800912a:	4a04      	ldr	r2, [pc, #16]	; (800913c <HAL_MspInit+0x64>)
 800912c:	68fb      	ldr	r3, [r7, #12]
 800912e:	6053      	str	r3, [r2, #4]
 8009130:	bf00      	nop
 8009132:	3710      	adds	r7, #16
 8009134:	46bd      	mov	sp, r7
 8009136:	bd80      	pop	{r7, pc}
 8009138:	40021000 	.word	0x40021000
 800913c:	40010000 	.word	0x40010000

08009140 <NMI_Handler>:
 8009140:	b480      	push	{r7}
 8009142:	af00      	add	r7, sp, #0
 8009144:	bf00      	nop
 8009146:	46bd      	mov	sp, r7
 8009148:	bc80      	pop	{r7}
 800914a:	4770      	bx	lr

0800914c <HardFault_Handler>:
 800914c:	b480      	push	{r7}
 800914e:	af00      	add	r7, sp, #0
 8009150:	e7fe      	b.n	8009150 <HardFault_Handler+0x4>

08009152 <MemManage_Handler>:
 8009152:	b480      	push	{r7}
 8009154:	af00      	add	r7, sp, #0
 8009156:	e7fe      	b.n	8009156 <MemManage_Handler+0x4>

08009158 <BusFault_Handler>:
 8009158:	b480      	push	{r7}
 800915a:	af00      	add	r7, sp, #0
 800915c:	e7fe      	b.n	800915c <BusFault_Handler+0x4>

0800915e <UsageFault_Handler>:
 800915e:	b480      	push	{r7}
 8009160:	af00      	add	r7, sp, #0
 8009162:	e7fe      	b.n	8009162 <UsageFault_Handler+0x4>

08009164 <SVC_Handler>:
 8009164:	b480      	push	{r7}
 8009166:	af00      	add	r7, sp, #0
 8009168:	bf00      	nop
 800916a:	46bd      	mov	sp, r7
 800916c:	bc80      	pop	{r7}
 800916e:	4770      	bx	lr

08009170 <DebugMon_Handler>:
 8009170:	b480      	push	{r7}
 8009172:	af00      	add	r7, sp, #0
 8009174:	bf00      	nop
 8009176:	46bd      	mov	sp, r7
 8009178:	bc80      	pop	{r7}
 800917a:	4770      	bx	lr

0800917c <PendSV_Handler>:
 800917c:	b480      	push	{r7}
 800917e:	af00      	add	r7, sp, #0
 8009180:	bf00      	nop
 8009182:	46bd      	mov	sp, r7
 8009184:	bc80      	pop	{r7}
 8009186:	4770      	bx	lr

08009188 <SysTick_Handler>:
 8009188:	b580      	push	{r7, lr}
 800918a:	af00      	add	r7, sp, #0
 800918c:	f7f7 fc80 	bl	8000a90 <HAL_IncTick>
 8009190:	bf00      	nop
 8009192:	bd80      	pop	{r7, pc}

08009194 <EXTI0_IRQHandler>:
 8009194:	b580      	push	{r7, lr}
 8009196:	af00      	add	r7, sp, #0
 8009198:	2001      	movs	r0, #1
 800919a:	f7f8 f867 	bl	800126c <HAL_GPIO_EXTI_IRQHandler>
 800919e:	bf00      	nop
 80091a0:	bd80      	pop	{r7, pc}

080091a2 <EXTI9_5_IRQHandler>:
 80091a2:	b580      	push	{r7, lr}
 80091a4:	af00      	add	r7, sp, #0
 80091a6:	2020      	movs	r0, #32
 80091a8:	f7f8 f860 	bl	800126c <HAL_GPIO_EXTI_IRQHandler>
 80091ac:	bf00      	nop
 80091ae:	bd80      	pop	{r7, pc}

080091b0 <USART1_IRQHandler>:
 80091b0:	b580      	push	{r7, lr}
 80091b2:	af00      	add	r7, sp, #0
 80091b4:	4802      	ldr	r0, [pc, #8]	; (80091c0 <USART1_IRQHandler+0x10>)
 80091b6:	f7f8 fc5b 	bl	8001a70 <HAL_UART_IRQHandler>
 80091ba:	bf00      	nop
 80091bc:	bd80      	pop	{r7, pc}
 80091be:	bf00      	nop
 80091c0:	20000280 	.word	0x20000280

080091c4 <EXTI15_10_IRQHandler>:
 80091c4:	b580      	push	{r7, lr}
 80091c6:	af00      	add	r7, sp, #0
 80091c8:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80091cc:	f7f8 f84e 	bl	800126c <HAL_GPIO_EXTI_IRQHandler>
 80091d0:	bf00      	nop
 80091d2:	bd80      	pop	{r7, pc}

080091d4 <_sbrk>:
 80091d4:	b580      	push	{r7, lr}
 80091d6:	b084      	sub	sp, #16
 80091d8:	af00      	add	r7, sp, #0
 80091da:	6078      	str	r0, [r7, #4]
 80091dc:	4b11      	ldr	r3, [pc, #68]	; (8009224 <_sbrk+0x50>)
 80091de:	681b      	ldr	r3, [r3, #0]
 80091e0:	2b00      	cmp	r3, #0
 80091e2:	d102      	bne.n	80091ea <_sbrk+0x16>
 80091e4:	4b0f      	ldr	r3, [pc, #60]	; (8009224 <_sbrk+0x50>)
 80091e6:	4a10      	ldr	r2, [pc, #64]	; (8009228 <_sbrk+0x54>)
 80091e8:	601a      	str	r2, [r3, #0]
 80091ea:	4b0e      	ldr	r3, [pc, #56]	; (8009224 <_sbrk+0x50>)
 80091ec:	681b      	ldr	r3, [r3, #0]
 80091ee:	60fb      	str	r3, [r7, #12]
 80091f0:	4b0c      	ldr	r3, [pc, #48]	; (8009224 <_sbrk+0x50>)
 80091f2:	681a      	ldr	r2, [r3, #0]
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	4413      	add	r3, r2
 80091f8:	466a      	mov	r2, sp
 80091fa:	4293      	cmp	r3, r2
 80091fc:	d907      	bls.n	800920e <_sbrk+0x3a>
 80091fe:	f000 f86f 	bl	80092e0 <__errno>
 8009202:	4602      	mov	r2, r0
 8009204:	230c      	movs	r3, #12
 8009206:	6013      	str	r3, [r2, #0]
 8009208:	f04f 33ff 	mov.w	r3, #4294967295
 800920c:	e006      	b.n	800921c <_sbrk+0x48>
 800920e:	4b05      	ldr	r3, [pc, #20]	; (8009224 <_sbrk+0x50>)
 8009210:	681a      	ldr	r2, [r3, #0]
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	4413      	add	r3, r2
 8009216:	4a03      	ldr	r2, [pc, #12]	; (8009224 <_sbrk+0x50>)
 8009218:	6013      	str	r3, [r2, #0]
 800921a:	68fb      	ldr	r3, [r7, #12]
 800921c:	4618      	mov	r0, r3
 800921e:	3710      	adds	r7, #16
 8009220:	46bd      	mov	sp, r7
 8009222:	bd80      	pop	{r7, pc}
 8009224:	20000098 	.word	0x20000098
 8009228:	200002c8 	.word	0x200002c8

0800922c <SystemInit>:
 800922c:	b480      	push	{r7}
 800922e:	af00      	add	r7, sp, #0
 8009230:	4b15      	ldr	r3, [pc, #84]	; (8009288 <SystemInit+0x5c>)
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	4a14      	ldr	r2, [pc, #80]	; (8009288 <SystemInit+0x5c>)
 8009236:	f043 0301 	orr.w	r3, r3, #1
 800923a:	6013      	str	r3, [r2, #0]
 800923c:	4b12      	ldr	r3, [pc, #72]	; (8009288 <SystemInit+0x5c>)
 800923e:	685a      	ldr	r2, [r3, #4]
 8009240:	4911      	ldr	r1, [pc, #68]	; (8009288 <SystemInit+0x5c>)
 8009242:	4b12      	ldr	r3, [pc, #72]	; (800928c <SystemInit+0x60>)
 8009244:	4013      	ands	r3, r2
 8009246:	604b      	str	r3, [r1, #4]
 8009248:	4b0f      	ldr	r3, [pc, #60]	; (8009288 <SystemInit+0x5c>)
 800924a:	681b      	ldr	r3, [r3, #0]
 800924c:	4a0e      	ldr	r2, [pc, #56]	; (8009288 <SystemInit+0x5c>)
 800924e:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8009252:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009256:	6013      	str	r3, [r2, #0]
 8009258:	4b0b      	ldr	r3, [pc, #44]	; (8009288 <SystemInit+0x5c>)
 800925a:	681b      	ldr	r3, [r3, #0]
 800925c:	4a0a      	ldr	r2, [pc, #40]	; (8009288 <SystemInit+0x5c>)
 800925e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009262:	6013      	str	r3, [r2, #0]
 8009264:	4b08      	ldr	r3, [pc, #32]	; (8009288 <SystemInit+0x5c>)
 8009266:	685b      	ldr	r3, [r3, #4]
 8009268:	4a07      	ldr	r2, [pc, #28]	; (8009288 <SystemInit+0x5c>)
 800926a:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 800926e:	6053      	str	r3, [r2, #4]
 8009270:	4b05      	ldr	r3, [pc, #20]	; (8009288 <SystemInit+0x5c>)
 8009272:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8009276:	609a      	str	r2, [r3, #8]
 8009278:	4b05      	ldr	r3, [pc, #20]	; (8009290 <SystemInit+0x64>)
 800927a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800927e:	609a      	str	r2, [r3, #8]
 8009280:	bf00      	nop
 8009282:	46bd      	mov	sp, r7
 8009284:	bc80      	pop	{r7}
 8009286:	4770      	bx	lr
 8009288:	40021000 	.word	0x40021000
 800928c:	f8ff0000 	.word	0xf8ff0000
 8009290:	e000ed00 	.word	0xe000ed00

08009294 <Reset_Handler>:
 8009294:	2100      	movs	r1, #0
 8009296:	e003      	b.n	80092a0 <LoopCopyDataInit>

08009298 <CopyDataInit>:
 8009298:	4b0b      	ldr	r3, [pc, #44]	; (80092c8 <LoopFillZerobss+0x14>)
 800929a:	585b      	ldr	r3, [r3, r1]
 800929c:	5043      	str	r3, [r0, r1]
 800929e:	3104      	adds	r1, #4

080092a0 <LoopCopyDataInit>:
 80092a0:	480a      	ldr	r0, [pc, #40]	; (80092cc <LoopFillZerobss+0x18>)
 80092a2:	4b0b      	ldr	r3, [pc, #44]	; (80092d0 <LoopFillZerobss+0x1c>)
 80092a4:	1842      	adds	r2, r0, r1
 80092a6:	429a      	cmp	r2, r3
 80092a8:	d3f6      	bcc.n	8009298 <CopyDataInit>
 80092aa:	4a0a      	ldr	r2, [pc, #40]	; (80092d4 <LoopFillZerobss+0x20>)
 80092ac:	e002      	b.n	80092b4 <LoopFillZerobss>

080092ae <FillZerobss>:
 80092ae:	2300      	movs	r3, #0
 80092b0:	f842 3b04 	str.w	r3, [r2], #4

080092b4 <LoopFillZerobss>:
 80092b4:	4b08      	ldr	r3, [pc, #32]	; (80092d8 <LoopFillZerobss+0x24>)
 80092b6:	429a      	cmp	r2, r3
 80092b8:	d3f9      	bcc.n	80092ae <FillZerobss>
 80092ba:	f7ff ffb7 	bl	800922c <SystemInit>
 80092be:	f000 f815 	bl	80092ec <__libc_init_array>
 80092c2:	f7fe ff43 	bl	800814c <main>
 80092c6:	4770      	bx	lr
 80092c8:	0803057c 	.word	0x0803057c
 80092cc:	20000000 	.word	0x20000000
 80092d0:	20000078 	.word	0x20000078
 80092d4:	20000078 	.word	0x20000078
 80092d8:	200002c4 	.word	0x200002c4

080092dc <ADC1_2_IRQHandler>:
 80092dc:	e7fe      	b.n	80092dc <ADC1_2_IRQHandler>
	...

080092e0 <__errno>:
 80092e0:	4b01      	ldr	r3, [pc, #4]	; (80092e8 <__errno+0x8>)
 80092e2:	6818      	ldr	r0, [r3, #0]
 80092e4:	4770      	bx	lr
 80092e6:	bf00      	nop
 80092e8:	20000014 	.word	0x20000014

080092ec <__libc_init_array>:
 80092ec:	b570      	push	{r4, r5, r6, lr}
 80092ee:	2500      	movs	r5, #0
 80092f0:	4e0c      	ldr	r6, [pc, #48]	; (8009324 <__libc_init_array+0x38>)
 80092f2:	4c0d      	ldr	r4, [pc, #52]	; (8009328 <__libc_init_array+0x3c>)
 80092f4:	1ba4      	subs	r4, r4, r6
 80092f6:	10a4      	asrs	r4, r4, #2
 80092f8:	42a5      	cmp	r5, r4
 80092fa:	d109      	bne.n	8009310 <__libc_init_array+0x24>
 80092fc:	f000 f922 	bl	8009544 <_init>
 8009300:	2500      	movs	r5, #0
 8009302:	4e0a      	ldr	r6, [pc, #40]	; (800932c <__libc_init_array+0x40>)
 8009304:	4c0a      	ldr	r4, [pc, #40]	; (8009330 <__libc_init_array+0x44>)
 8009306:	1ba4      	subs	r4, r4, r6
 8009308:	10a4      	asrs	r4, r4, #2
 800930a:	42a5      	cmp	r5, r4
 800930c:	d105      	bne.n	800931a <__libc_init_array+0x2e>
 800930e:	bd70      	pop	{r4, r5, r6, pc}
 8009310:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8009314:	4798      	blx	r3
 8009316:	3501      	adds	r5, #1
 8009318:	e7ee      	b.n	80092f8 <__libc_init_array+0xc>
 800931a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800931e:	4798      	blx	r3
 8009320:	3501      	adds	r5, #1
 8009322:	e7f2      	b.n	800930a <__libc_init_array+0x1e>
 8009324:	08030574 	.word	0x08030574
 8009328:	08030574 	.word	0x08030574
 800932c:	08030574 	.word	0x08030574
 8009330:	08030578 	.word	0x08030578

08009334 <memset>:
 8009334:	4603      	mov	r3, r0
 8009336:	4402      	add	r2, r0
 8009338:	4293      	cmp	r3, r2
 800933a:	d100      	bne.n	800933e <memset+0xa>
 800933c:	4770      	bx	lr
 800933e:	f803 1b01 	strb.w	r1, [r3], #1
 8009342:	e7f9      	b.n	8009338 <memset+0x4>

08009344 <srand>:
 8009344:	b538      	push	{r3, r4, r5, lr}
 8009346:	4b0d      	ldr	r3, [pc, #52]	; (800937c <srand+0x38>)
 8009348:	4605      	mov	r5, r0
 800934a:	681c      	ldr	r4, [r3, #0]
 800934c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800934e:	b97b      	cbnz	r3, 8009370 <srand+0x2c>
 8009350:	2018      	movs	r0, #24
 8009352:	f000 f87b 	bl	800944c <malloc>
 8009356:	4a0a      	ldr	r2, [pc, #40]	; (8009380 <srand+0x3c>)
 8009358:	4b0a      	ldr	r3, [pc, #40]	; (8009384 <srand+0x40>)
 800935a:	63a0      	str	r0, [r4, #56]	; 0x38
 800935c:	e9c0 2300 	strd	r2, r3, [r0]
 8009360:	4b09      	ldr	r3, [pc, #36]	; (8009388 <srand+0x44>)
 8009362:	2201      	movs	r2, #1
 8009364:	6083      	str	r3, [r0, #8]
 8009366:	230b      	movs	r3, #11
 8009368:	8183      	strh	r3, [r0, #12]
 800936a:	2300      	movs	r3, #0
 800936c:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8009370:	2200      	movs	r2, #0
 8009372:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009374:	611d      	str	r5, [r3, #16]
 8009376:	615a      	str	r2, [r3, #20]
 8009378:	bd38      	pop	{r3, r4, r5, pc}
 800937a:	bf00      	nop
 800937c:	20000014 	.word	0x20000014
 8009380:	abcd330e 	.word	0xabcd330e
 8009384:	e66d1234 	.word	0xe66d1234
 8009388:	0005deec 	.word	0x0005deec

0800938c <rand>:
 800938c:	b538      	push	{r3, r4, r5, lr}
 800938e:	4b13      	ldr	r3, [pc, #76]	; (80093dc <rand+0x50>)
 8009390:	681c      	ldr	r4, [r3, #0]
 8009392:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009394:	b97b      	cbnz	r3, 80093b6 <rand+0x2a>
 8009396:	2018      	movs	r0, #24
 8009398:	f000 f858 	bl	800944c <malloc>
 800939c:	4a10      	ldr	r2, [pc, #64]	; (80093e0 <rand+0x54>)
 800939e:	4b11      	ldr	r3, [pc, #68]	; (80093e4 <rand+0x58>)
 80093a0:	63a0      	str	r0, [r4, #56]	; 0x38
 80093a2:	e9c0 2300 	strd	r2, r3, [r0]
 80093a6:	4b10      	ldr	r3, [pc, #64]	; (80093e8 <rand+0x5c>)
 80093a8:	2201      	movs	r2, #1
 80093aa:	6083      	str	r3, [r0, #8]
 80093ac:	230b      	movs	r3, #11
 80093ae:	8183      	strh	r3, [r0, #12]
 80093b0:	2300      	movs	r3, #0
 80093b2:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80093b6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80093b8:	480c      	ldr	r0, [pc, #48]	; (80093ec <rand+0x60>)
 80093ba:	690a      	ldr	r2, [r1, #16]
 80093bc:	694b      	ldr	r3, [r1, #20]
 80093be:	4350      	muls	r0, r2
 80093c0:	4c0b      	ldr	r4, [pc, #44]	; (80093f0 <rand+0x64>)
 80093c2:	fb04 0003 	mla	r0, r4, r3, r0
 80093c6:	fba2 2304 	umull	r2, r3, r2, r4
 80093ca:	4403      	add	r3, r0
 80093cc:	1c54      	adds	r4, r2, #1
 80093ce:	f143 0500 	adc.w	r5, r3, #0
 80093d2:	e9c1 4504 	strd	r4, r5, [r1, #16]
 80093d6:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 80093da:	bd38      	pop	{r3, r4, r5, pc}
 80093dc:	20000014 	.word	0x20000014
 80093e0:	abcd330e 	.word	0xabcd330e
 80093e4:	e66d1234 	.word	0xe66d1234
 80093e8:	0005deec 	.word	0x0005deec
 80093ec:	5851f42d 	.word	0x5851f42d
 80093f0:	4c957f2d 	.word	0x4c957f2d

080093f4 <time>:
 80093f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80093f6:	4b0b      	ldr	r3, [pc, #44]	; (8009424 <time+0x30>)
 80093f8:	4604      	mov	r4, r0
 80093fa:	2200      	movs	r2, #0
 80093fc:	4669      	mov	r1, sp
 80093fe:	6818      	ldr	r0, [r3, #0]
 8009400:	f000 f812 	bl	8009428 <_gettimeofday_r>
 8009404:	2800      	cmp	r0, #0
 8009406:	da05      	bge.n	8009414 <time+0x20>
 8009408:	f04f 32ff 	mov.w	r2, #4294967295
 800940c:	f04f 33ff 	mov.w	r3, #4294967295
 8009410:	e9cd 2300 	strd	r2, r3, [sp]
 8009414:	e9dd 0100 	ldrd	r0, r1, [sp]
 8009418:	b10c      	cbz	r4, 800941e <time+0x2a>
 800941a:	e9c4 0100 	strd	r0, r1, [r4]
 800941e:	b004      	add	sp, #16
 8009420:	bd10      	pop	{r4, pc}
 8009422:	bf00      	nop
 8009424:	20000014 	.word	0x20000014

08009428 <_gettimeofday_r>:
 8009428:	b538      	push	{r3, r4, r5, lr}
 800942a:	2300      	movs	r3, #0
 800942c:	4c06      	ldr	r4, [pc, #24]	; (8009448 <_gettimeofday_r+0x20>)
 800942e:	4605      	mov	r5, r0
 8009430:	4608      	mov	r0, r1
 8009432:	4611      	mov	r1, r2
 8009434:	6023      	str	r3, [r4, #0]
 8009436:	f000 f87d 	bl	8009534 <_gettimeofday>
 800943a:	1c43      	adds	r3, r0, #1
 800943c:	d102      	bne.n	8009444 <_gettimeofday_r+0x1c>
 800943e:	6823      	ldr	r3, [r4, #0]
 8009440:	b103      	cbz	r3, 8009444 <_gettimeofday_r+0x1c>
 8009442:	602b      	str	r3, [r5, #0]
 8009444:	bd38      	pop	{r3, r4, r5, pc}
 8009446:	bf00      	nop
 8009448:	200002c0 	.word	0x200002c0

0800944c <malloc>:
 800944c:	4b02      	ldr	r3, [pc, #8]	; (8009458 <malloc+0xc>)
 800944e:	4601      	mov	r1, r0
 8009450:	6818      	ldr	r0, [r3, #0]
 8009452:	f000 b803 	b.w	800945c <_malloc_r>
 8009456:	bf00      	nop
 8009458:	20000014 	.word	0x20000014

0800945c <_malloc_r>:
 800945c:	b570      	push	{r4, r5, r6, lr}
 800945e:	1ccd      	adds	r5, r1, #3
 8009460:	f025 0503 	bic.w	r5, r5, #3
 8009464:	3508      	adds	r5, #8
 8009466:	2d0c      	cmp	r5, #12
 8009468:	bf38      	it	cc
 800946a:	250c      	movcc	r5, #12
 800946c:	2d00      	cmp	r5, #0
 800946e:	4606      	mov	r6, r0
 8009470:	db01      	blt.n	8009476 <_malloc_r+0x1a>
 8009472:	42a9      	cmp	r1, r5
 8009474:	d903      	bls.n	800947e <_malloc_r+0x22>
 8009476:	230c      	movs	r3, #12
 8009478:	6033      	str	r3, [r6, #0]
 800947a:	2000      	movs	r0, #0
 800947c:	bd70      	pop	{r4, r5, r6, pc}
 800947e:	f000 f857 	bl	8009530 <__malloc_lock>
 8009482:	4a21      	ldr	r2, [pc, #132]	; (8009508 <_malloc_r+0xac>)
 8009484:	6814      	ldr	r4, [r2, #0]
 8009486:	4621      	mov	r1, r4
 8009488:	b991      	cbnz	r1, 80094b0 <_malloc_r+0x54>
 800948a:	4c20      	ldr	r4, [pc, #128]	; (800950c <_malloc_r+0xb0>)
 800948c:	6823      	ldr	r3, [r4, #0]
 800948e:	b91b      	cbnz	r3, 8009498 <_malloc_r+0x3c>
 8009490:	4630      	mov	r0, r6
 8009492:	f000 f83d 	bl	8009510 <_sbrk_r>
 8009496:	6020      	str	r0, [r4, #0]
 8009498:	4629      	mov	r1, r5
 800949a:	4630      	mov	r0, r6
 800949c:	f000 f838 	bl	8009510 <_sbrk_r>
 80094a0:	1c43      	adds	r3, r0, #1
 80094a2:	d124      	bne.n	80094ee <_malloc_r+0x92>
 80094a4:	230c      	movs	r3, #12
 80094a6:	4630      	mov	r0, r6
 80094a8:	6033      	str	r3, [r6, #0]
 80094aa:	f000 f842 	bl	8009532 <__malloc_unlock>
 80094ae:	e7e4      	b.n	800947a <_malloc_r+0x1e>
 80094b0:	680b      	ldr	r3, [r1, #0]
 80094b2:	1b5b      	subs	r3, r3, r5
 80094b4:	d418      	bmi.n	80094e8 <_malloc_r+0x8c>
 80094b6:	2b0b      	cmp	r3, #11
 80094b8:	d90f      	bls.n	80094da <_malloc_r+0x7e>
 80094ba:	600b      	str	r3, [r1, #0]
 80094bc:	18cc      	adds	r4, r1, r3
 80094be:	50cd      	str	r5, [r1, r3]
 80094c0:	4630      	mov	r0, r6
 80094c2:	f000 f836 	bl	8009532 <__malloc_unlock>
 80094c6:	f104 000b 	add.w	r0, r4, #11
 80094ca:	1d23      	adds	r3, r4, #4
 80094cc:	f020 0007 	bic.w	r0, r0, #7
 80094d0:	1ac3      	subs	r3, r0, r3
 80094d2:	d0d3      	beq.n	800947c <_malloc_r+0x20>
 80094d4:	425a      	negs	r2, r3
 80094d6:	50e2      	str	r2, [r4, r3]
 80094d8:	e7d0      	b.n	800947c <_malloc_r+0x20>
 80094da:	684b      	ldr	r3, [r1, #4]
 80094dc:	428c      	cmp	r4, r1
 80094de:	bf16      	itet	ne
 80094e0:	6063      	strne	r3, [r4, #4]
 80094e2:	6013      	streq	r3, [r2, #0]
 80094e4:	460c      	movne	r4, r1
 80094e6:	e7eb      	b.n	80094c0 <_malloc_r+0x64>
 80094e8:	460c      	mov	r4, r1
 80094ea:	6849      	ldr	r1, [r1, #4]
 80094ec:	e7cc      	b.n	8009488 <_malloc_r+0x2c>
 80094ee:	1cc4      	adds	r4, r0, #3
 80094f0:	f024 0403 	bic.w	r4, r4, #3
 80094f4:	42a0      	cmp	r0, r4
 80094f6:	d005      	beq.n	8009504 <_malloc_r+0xa8>
 80094f8:	1a21      	subs	r1, r4, r0
 80094fa:	4630      	mov	r0, r6
 80094fc:	f000 f808 	bl	8009510 <_sbrk_r>
 8009500:	3001      	adds	r0, #1
 8009502:	d0cf      	beq.n	80094a4 <_malloc_r+0x48>
 8009504:	6025      	str	r5, [r4, #0]
 8009506:	e7db      	b.n	80094c0 <_malloc_r+0x64>
 8009508:	2000009c 	.word	0x2000009c
 800950c:	200000a0 	.word	0x200000a0

08009510 <_sbrk_r>:
 8009510:	b538      	push	{r3, r4, r5, lr}
 8009512:	2300      	movs	r3, #0
 8009514:	4c05      	ldr	r4, [pc, #20]	; (800952c <_sbrk_r+0x1c>)
 8009516:	4605      	mov	r5, r0
 8009518:	4608      	mov	r0, r1
 800951a:	6023      	str	r3, [r4, #0]
 800951c:	f7ff fe5a 	bl	80091d4 <_sbrk>
 8009520:	1c43      	adds	r3, r0, #1
 8009522:	d102      	bne.n	800952a <_sbrk_r+0x1a>
 8009524:	6823      	ldr	r3, [r4, #0]
 8009526:	b103      	cbz	r3, 800952a <_sbrk_r+0x1a>
 8009528:	602b      	str	r3, [r5, #0]
 800952a:	bd38      	pop	{r3, r4, r5, pc}
 800952c:	200002c0 	.word	0x200002c0

08009530 <__malloc_lock>:
 8009530:	4770      	bx	lr

08009532 <__malloc_unlock>:
 8009532:	4770      	bx	lr

08009534 <_gettimeofday>:
 8009534:	2258      	movs	r2, #88	; 0x58
 8009536:	4b02      	ldr	r3, [pc, #8]	; (8009540 <_gettimeofday+0xc>)
 8009538:	f04f 30ff 	mov.w	r0, #4294967295
 800953c:	601a      	str	r2, [r3, #0]
 800953e:	4770      	bx	lr
 8009540:	200002c0 	.word	0x200002c0

08009544 <_init>:
 8009544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009546:	bf00      	nop
 8009548:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800954a:	bc08      	pop	{r3}
 800954c:	469e      	mov	lr, r3
 800954e:	4770      	bx	lr

08009550 <_fini>:
 8009550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009552:	bf00      	nop
 8009554:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009556:	bc08      	pop	{r3}
 8009558:	469e      	mov	lr, r3
 800955a:	4770      	bx	lr
